(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_14_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |summary_3_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |implicit_constructor_entry_20_C_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_7_return_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_15_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |contract_initializer_17_C_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_11_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |summary_constructor_2_C_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_5_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |contract_initializer_entry_18_C_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_10_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_16_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |contract_initializer_after_init_19_C_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |interface_0_C_45_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |summary_4_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_13_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_12_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |error_target_13_0| ( ) Bool)
(declare-fun |block_8_function_f__44_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_6_f_43_45_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)

(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__44_45_0 D G A C H E F I B)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_5_function_f__44_45_0 D G A C H E F I B)
        (and (= D 0) (= F E))
      )
      (block_6_f_43_45_0 D G A C H E F I B)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K state_type) (L state_type) (M Int) (N tx_type) (O Int) (P Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E M A D N K L O B)
        (and (= B 0)
     (= G P)
     (= C J)
     (= P I)
     (= H 0)
     (= F 1)
     (= J 2)
     (= O 0)
     (>= G 0)
     (<= G 4294967295)
     (or (not (<= 0 H)) (>= H 4))
     (= I 16909060))
      )
      (block_8_function_f__44_45_0 F M A D N K L P C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_8_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_9_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_10_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_11_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_12_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_13_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_14_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_15_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_7_return_function_f__44_45_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__44_45_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Int) (O Int) (P state_type) (Q state_type) (R Int) (S tx_type) (T Int) (U Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E R A D S P Q T B)
        (let ((a!1 (ite (>= H 0)
                ((_ int_to_bv 32) H)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) H)))))
      (a!2 (ite (>= I 0)
                ((_ int_to_bv 32) (* 8 I))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) I))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= N 16909060)
       (= G 2)
       (= C O)
       (= B 0)
       (= L C)
       (= I 0)
       (= H U)
       (= F E)
       (= U N)
       (= K (ite (<= 4 I) J a!3))
       (= O 2)
       (= T 0)
       (>= L 0)
       (>= H 0)
       (>= K 0)
       (<= L 255)
       (<= H 4294967295)
       (<= K 255)
       (not M)
       (= M (= K L)))))
      )
      (block_9_function_f__44_45_0 G R A D S P Q U C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S state_type) (T state_type) (U Int) (V tx_type) (W Int) (X Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E U A D V S T W B)
        (let ((a!1 (ite (>= I 0)
                ((_ int_to_bv 32) I)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) I)))))
      (a!2 (ite (>= J 0)
                ((_ int_to_bv 32) (* 8 J))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) J))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= Q 16909060)
       (= J 0)
       (= G F)
       (= F E)
       (= C R)
       (= B 0)
       (= O X)
       (= M C)
       (= L (ite (<= 4 J) K a!3))
       (= I X)
       (= H 3)
       (= X Q)
       (= P 1)
       (= R 2)
       (= W 0)
       (>= O 0)
       (>= M 0)
       (>= L 0)
       (>= I 0)
       (<= O 4294967295)
       (<= M 255)
       (<= L 255)
       (<= I 4294967295)
       (or (not (<= 0 P)) (>= P 4))
       (= N (= L M)))))
      )
      (block_10_function_f__44_45_0 H U A D V S T X C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X state_type) (Y state_type) (Z Int) (A1 tx_type) (B1 Int) (C1 Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E Z A D A1 X Y B1 B)
        (let ((a!1 (ite (>= J 0)
                ((_ int_to_bv 32) J)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) J)))))
      (a!2 (ite (>= K 0)
                ((_ int_to_bv 32) (* 8 K))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) K)))))
      (a!4 (ite (>= P 0)
                ((_ int_to_bv 32) P)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) P)))))
      (a!5 (ite (>= Q 0)
                ((_ int_to_bv 32) (* 8 Q))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) Q))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2)))))
      (a!6 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!4 a!5))))))
  (and (= U (= S T))
       (= V 16909060)
       (= F E)
       (= C W)
       (= B 0)
       (= I 4)
       (= K 0)
       (= J C1)
       (= H G)
       (= G F)
       (= T C)
       (= Q 1)
       (= P C1)
       (= N C)
       (= M (ite (<= 4 K) L a!3))
       (= C1 V)
       (= S (ite (<= 4 Q) R a!6))
       (= W 2)
       (= B1 0)
       (>= J 0)
       (>= T 0)
       (>= P 0)
       (>= N 0)
       (>= M 0)
       (>= S 0)
       (<= J 4294967295)
       (<= T 255)
       (<= P 4294967295)
       (<= N 255)
       (<= M 255)
       (<= S 255)
       (not U)
       (= O (= M N)))))
      )
      (block_11_function_f__44_45_0 I Z A D A1 X Y C1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Int) (A1 state_type) (B1 state_type) (C1 Int) (D1 tx_type) (E1 Int) (F1 Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E C1 A D D1 A1 B1 E1 B)
        (let ((a!1 (ite (>= K 0)
                ((_ int_to_bv 32) K)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) K)))))
      (a!2 (ite (>= L 0)
                ((_ int_to_bv 32) (* 8 L))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) L)))))
      (a!4 (ite (>= Q 0)
                ((_ int_to_bv 32) Q)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) Q)))))
      (a!5 (ite (>= R 0)
                ((_ int_to_bv 32) (* 8 R))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) R))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2)))))
      (a!6 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!4 a!5))))))
  (and (= V (= T U))
       (= Y 16909060)
       (= C Z)
       (= I H)
       (= F E)
       (= B 0)
       (= L 0)
       (= H G)
       (= G F)
       (= R 1)
       (= O C)
       (= N (ite (<= 4 L) M a!3))
       (= K F1)
       (= J 5)
       (= W F1)
       (= U C)
       (= T (ite (<= 4 R) S a!6))
       (= Q F1)
       (= F1 Y)
       (= X 2)
       (= Z 2)
       (= E1 0)
       (>= O 0)
       (>= N 0)
       (>= K 0)
       (>= W 0)
       (>= U 0)
       (>= T 0)
       (>= Q 0)
       (<= O 255)
       (<= N 255)
       (<= K 4294967295)
       (<= W 4294967295)
       (<= U 255)
       (<= T 255)
       (<= Q 4294967295)
       (or (not (<= 0 X)) (>= X 4))
       (= P (= N O)))))
      )
      (block_12_function_f__44_45_0 J C1 A D D1 A1 B1 F1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 state_type) (G1 state_type) (H1 Int) (I1 tx_type) (J1 Int) (K1 Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E H1 A D I1 F1 G1 J1 B)
        (let ((a!1 (ite (>= L 0)
                ((_ int_to_bv 32) L)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) L)))))
      (a!2 (ite (>= M 0)
                ((_ int_to_bv 32) (* 8 M))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) M)))))
      (a!4 (ite (>= R 0)
                ((_ int_to_bv 32) R)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) R)))))
      (a!5 (ite (>= S 0)
                ((_ int_to_bv 32) (* 8 S))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) S)))))
      (a!7 (ite (>= X 0)
                ((_ int_to_bv 32) X)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) X)))))
      (a!8 (ite (>= Y 0)
                ((_ int_to_bv 32) (* 8 Y))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) Y))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2)))))
      (a!6 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!4 a!5)))))
      (a!9 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!7 a!8))))))
  (and (= W (= U V))
       (= C1 (= A1 B1))
       (= D1 16909060)
       (= B 0)
       (= H G)
       (= C E1)
       (= K 6)
       (= J I)
       (= I H)
       (= G F)
       (= F E)
       (= M 0)
       (= L K1)
       (= S 1)
       (= R K1)
       (= P C)
       (= O (ite (<= 4 M) N a!3))
       (= B1 C)
       (= Y 2)
       (= X K1)
       (= V C)
       (= U (ite (<= 4 S) T a!6))
       (= K1 D1)
       (= A1 (ite (<= 4 Y) Z a!9))
       (= E1 2)
       (= J1 0)
       (>= L 0)
       (>= R 0)
       (>= P 0)
       (>= O 0)
       (>= B1 0)
       (>= X 0)
       (>= V 0)
       (>= U 0)
       (>= A1 0)
       (<= L 4294967295)
       (<= R 4294967295)
       (<= P 255)
       (<= O 255)
       (<= B1 255)
       (<= X 4294967295)
       (<= V 255)
       (<= U 255)
       (<= A1 255)
       (not C1)
       (= Q (= O P)))))
      )
      (block_13_function_f__44_45_0 K H1 A D I1 F1 G1 K1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 state_type) (J1 state_type) (K1 Int) (L1 tx_type) (M1 Int) (N1 Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E K1 A D L1 I1 J1 M1 B)
        (let ((a!1 (ite (>= M 0)
                ((_ int_to_bv 32) M)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) M)))))
      (a!2 (ite (>= N 0)
                ((_ int_to_bv 32) (* 8 N))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) N)))))
      (a!4 (ite (>= S 0)
                ((_ int_to_bv 32) S)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) S)))))
      (a!5 (ite (>= T 0)
                ((_ int_to_bv 32) (* 8 T))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) T)))))
      (a!7 (ite (>= Y 0)
                ((_ int_to_bv 32) Y)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) Y)))))
      (a!8 (ite (>= Z 0)
                ((_ int_to_bv 32) (* 8 Z))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) Z))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2)))))
      (a!6 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!4 a!5)))))
      (a!9 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!7 a!8))))))
  (and (= X (= V W))
       (= D1 (= B1 C1))
       (= G1 16909060)
       (= B 0)
       (= H G)
       (= C H1)
       (= K J)
       (= G F)
       (= F E)
       (= Q C)
       (= N 0)
       (= M N1)
       (= L 7)
       (= J I)
       (= I H)
       (= T 1)
       (= P (ite (<= 4 N) O a!3))
       (= Z 2)
       (= W C)
       (= V (ite (<= 4 T) U a!6))
       (= S N1)
       (= E1 N1)
       (= C1 C)
       (= B1 (ite (<= 4 Z) A1 a!9))
       (= Y N1)
       (= N1 G1)
       (= F1 3)
       (= H1 2)
       (= M1 0)
       (>= Q 0)
       (>= M 0)
       (>= P 0)
       (>= W 0)
       (>= V 0)
       (>= S 0)
       (>= E1 0)
       (>= C1 0)
       (>= B1 0)
       (>= Y 0)
       (<= Q 255)
       (<= M 4294967295)
       (<= P 255)
       (<= W 255)
       (<= V 255)
       (<= S 4294967295)
       (<= E1 4294967295)
       (<= C1 255)
       (<= B1 255)
       (<= Y 4294967295)
       (or (not (<= 0 F1)) (>= F1 4))
       (= R (= P Q)))))
      )
      (block_14_function_f__44_45_0 L K1 A D L1 I1 J1 N1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Bool) (L1 Int) (M1 Int) (N1 state_type) (O1 state_type) (P1 Int) (Q1 tx_type) (R1 Int) (S1 Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E P1 A D Q1 N1 O1 R1 B)
        (let ((a!1 (ite (>= N 0)
                ((_ int_to_bv 32) N)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) N)))))
      (a!2 (ite (>= O 0)
                ((_ int_to_bv 32) (* 8 O))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) O)))))
      (a!4 (ite (>= T 0)
                ((_ int_to_bv 32) T)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) T)))))
      (a!5 (ite (>= U 0)
                ((_ int_to_bv 32) (* 8 U))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) U)))))
      (a!7 (ite (>= Z 0)
                ((_ int_to_bv 32) Z)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) Z)))))
      (a!8 (ite (>= A1 0)
                ((_ int_to_bv 32) (* 8 A1))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) A1)))))
      (a!10 (ite (>= F1 0)
                 ((_ int_to_bv 32) F1)
                 (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) F1)))))
      (a!11 (ite (>= G1 0)
                 ((_ int_to_bv 32) (* 8 G1))
                 (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) G1))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2)))))
      (a!6 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!4 a!5)))))
      (a!9 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!7 a!8)))))
      (a!12 (+ (* 256 (ubv_to_int #x000000))
               (ubv_to_int ((_ extract 31 24) (bvshl a!10 a!11))))))
  (and (= E1 (= C1 D1))
       (= K1 (= I1 J1))
       (= S (= Q R))
       (= L1 16909060)
       (= G F)
       (= C M1)
       (= B 0)
       (= M 8)
       (= J I)
       (= I H)
       (= H G)
       (= F E)
       (= L K)
       (= K J)
       (= R C)
       (= Q (ite (<= 4 O) P a!3))
       (= O 0)
       (= N S1)
       (= U 1)
       (= T S1)
       (= A1 2)
       (= Z S1)
       (= X C)
       (= W (ite (<= 4 U) V a!6))
       (= J1 C)
       (= G1 3)
       (= F1 S1)
       (= D1 C)
       (= C1 (ite (<= 4 A1) B1 a!9))
       (= S1 L1)
       (= I1 (ite (<= 4 G1) H1 a!12))
       (= M1 2)
       (= R1 0)
       (>= R 0)
       (>= Q 0)
       (>= N 0)
       (>= T 0)
       (>= Z 0)
       (>= X 0)
       (>= W 0)
       (>= J1 0)
       (>= F1 0)
       (>= D1 0)
       (>= C1 0)
       (>= I1 0)
       (<= R 255)
       (<= Q 255)
       (<= N 4294967295)
       (<= T 4294967295)
       (<= Z 4294967295)
       (<= X 255)
       (<= W 255)
       (<= J1 255)
       (<= F1 4294967295)
       (<= D1 255)
       (<= C1 255)
       (<= I1 255)
       (not K1)
       (= Y (= W X)))))
      )
      (block_15_function_f__44_45_0 M P1 A D Q1 N1 O1 S1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Bool) (L1 Int) (M1 Int) (N1 state_type) (O1 state_type) (P1 Int) (Q1 tx_type) (R1 Int) (S1 Int) ) 
    (=>
      (and
        (block_6_f_43_45_0 E P1 A D Q1 N1 O1 R1 B)
        (let ((a!1 (ite (>= N 0)
                ((_ int_to_bv 32) N)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) N)))))
      (a!2 (ite (>= O 0)
                ((_ int_to_bv 32) (* 8 O))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) O)))))
      (a!4 (ite (>= T 0)
                ((_ int_to_bv 32) T)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) T)))))
      (a!5 (ite (>= U 0)
                ((_ int_to_bv 32) (* 8 U))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) U)))))
      (a!7 (ite (>= Z 0)
                ((_ int_to_bv 32) Z)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) Z)))))
      (a!8 (ite (>= A1 0)
                ((_ int_to_bv 32) (* 8 A1))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) A1)))))
      (a!10 (ite (>= F1 0)
                 ((_ int_to_bv 32) F1)
                 (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) F1)))))
      (a!11 (ite (>= G1 0)
                 ((_ int_to_bv 32) (* 8 G1))
                 (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) G1))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2)))))
      (a!6 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!4 a!5)))))
      (a!9 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!7 a!8)))))
      (a!12 (+ (* 256 (ubv_to_int #x000000))
               (ubv_to_int ((_ extract 31 24) (bvshl a!10 a!11))))))
  (and (= E1 (= C1 D1))
       (= K1 (= I1 J1))
       (= S (= Q R))
       (= L1 16909060)
       (= G F)
       (= C M1)
       (= B 0)
       (= M L)
       (= J I)
       (= I H)
       (= H G)
       (= F E)
       (= L K)
       (= K J)
       (= R C)
       (= Q (ite (<= 4 O) P a!3))
       (= O 0)
       (= N S1)
       (= U 1)
       (= T S1)
       (= A1 2)
       (= Z S1)
       (= X C)
       (= W (ite (<= 4 U) V a!6))
       (= J1 C)
       (= G1 3)
       (= F1 S1)
       (= D1 C)
       (= C1 (ite (<= 4 A1) B1 a!9))
       (= S1 L1)
       (= I1 (ite (<= 4 G1) H1 a!12))
       (= M1 2)
       (= R1 0)
       (>= R 0)
       (>= Q 0)
       (>= N 0)
       (>= T 0)
       (>= Z 0)
       (>= X 0)
       (>= W 0)
       (>= J1 0)
       (>= F1 0)
       (>= D1 0)
       (>= C1 0)
       (>= I1 0)
       (<= R 255)
       (<= Q 255)
       (<= N 4294967295)
       (<= T 4294967295)
       (<= Z 4294967295)
       (<= X 255)
       (<= W 255)
       (<= J1 255)
       (<= F1 4294967295)
       (<= D1 255)
       (<= C1 255)
       (<= I1 255)
       (= Y (= W X)))))
      )
      (block_7_return_function_f__44_45_0 M P1 A D Q1 N1 O1 S1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        true
      )
      (block_16_function_f__44_45_0 D G A C H E F I B)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E Int) (F Int) (G state_type) (H state_type) (I state_type) (J state_type) (K Int) (L tx_type) (M Int) ) 
    (=>
      (and
        (block_16_function_f__44_45_0 D K A C L G H M B)
        (summary_3_function_f__44_45_0 E K A C L I J)
        (let ((a!1 (store (balances H) K (+ (select (balances H) K) F)))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data L)) 3) 240))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data L)) 1) 18))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data L)) 2) 31))
      (a!5 (= (select (bytes_tuple_accessor_array (msg.data L)) 0) 38))
      (a!6 (>= (+ (select (balances H) K) F) 0))
      (a!7 (<= (+ (select (balances H) K) F)
               115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  (and (= I (state_type a!1))
       a!2
       a!3
       a!4
       a!5
       (= (msg.value L) 0)
       (= (msg.sig L) 638722032)
       (= D 0)
       (>= (tx.origin L) 0)
       (>= (tx.gasprice L) 0)
       (>= (msg.value L) 0)
       (>= (msg.sender L) 0)
       (>= (block.timestamp L) 0)
       (>= (block.number L) 0)
       (>= (block.gaslimit L) 0)
       (>= (block.difficulty L) 0)
       (>= (block.coinbase L) 0)
       (>= (block.chainid L) 0)
       (>= (block.basefee L) 0)
       (>= (bytes_tuple_accessor_length (msg.data L)) 4)
       a!6
       (>= F (msg.value L))
       (<= (tx.origin L) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender L) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase L) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!7
       (= H G)))
      )
      (summary_4_function_f__44_45_0 E K A C L G J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__44_45_0 C F A B G D E)
        (interface_0_C_45_0 F A B D)
        (= C 0)
      )
      (interface_0_C_45_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_45_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_45_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_18_C_45_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_18_C_45_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_19_C_45_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_19_C_45_0 C F A B G D E)
        true
      )
      (contract_initializer_17_C_45_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_20_C_45_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_20_C_45_0 C H A B I E F)
        (contract_initializer_17_C_45_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_45_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_17_C_45_0 D H A B I F G)
        (implicit_constructor_entry_20_C_45_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_45_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__44_45_0 C F A B G D E)
        (interface_0_C_45_0 F A B D)
        (= C 4)
      )
      error_target_13_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_13_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
