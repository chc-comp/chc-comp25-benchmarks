(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_24_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |summary_3_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_12_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_8_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_19_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_6_f_59_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_11_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |contract_initializer_27_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_21_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_25_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |summary_constructor_2_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |error_target_35_0| ( ) Bool)
(declare-fun |block_10_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_20_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_13_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_23_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_5_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |summary_4_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |interface_0_C_61_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |block_7_return_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |contract_initializer_after_init_29_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |implicit_constructor_entry_30_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_17_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_22_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_14_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_15_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_26_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |contract_initializer_entry_28_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_16_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_18_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)

(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__60_61_0 D G A C H E F I B)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_5_function_f__60_61_0 D G A C H E F I B)
        (and (= D 0) (= F E))
      )
      (block_6_f_59_61_0 D G A C H E F I B)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E Int) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) (M Int) (N Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 D K A C L I J M B)
        (and (= E 1)
     (= B 0)
     (= N G)
     (= F 3)
     (= H N)
     (= M 0)
     (>= H 0)
     (<= H 4294967295)
     (or (not (<= 0 F)) (>= F 4))
     (= G 16909060))
      )
      (block_8_function_f__60_61_0 E K A C L I J N B)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_8_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_9_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_10_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_11_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_12_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_13_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_14_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_15_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_16_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_17_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_18_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_19_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_20_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_21_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_22_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_23_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_24_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_25_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        (block_7_return_function_f__60_61_0 D G A C H E F I B)
        true
      )
      (summary_3_function_f__60_61_0 D G A C H E F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P state_type) (Q state_type) (R Int) (S tx_type) (T Int) (U Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E R A D S P Q T B)
        (let ((a!1 (ite (>= O 0)
                ((_ int_to_bv 32) O)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) O)))))
      (a!2 (ite (>= H 0)
                ((_ int_to_bv 32) (* 8 H))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) H))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= H 3)
       (= F E)
       (= C J)
       (= B 0)
       (= L C)
       (= J (ite (<= 4 H) I a!3))
       (= G 2)
       (= U N)
       (= M 0)
       (= K C)
       (= O U)
       (= T 0)
       (>= L 0)
       (>= J 0)
       (>= K 0)
       (>= O 0)
       (<= L 255)
       (<= J 255)
       (<= K 255)
       (<= O 4294967295)
       (or (not (<= 0 M)) (>= M 1))
       (= N 16909060))))
      )
      (block_9_function_f__60_61_0 G R A D S P Q U C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S state_type) (T state_type) (U Int) (V tx_type) (W Int) (X Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E U A D V S T W B)
        (let ((a!1 (ite (>= R 0)
                ((_ int_to_bv 32) R)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) R)))))
      (a!2 (ite (>= I 0)
                ((_ int_to_bv 32) (* 8 I))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) I))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= Q 16909060)
       (= K (ite (<= 4 I) J a!3))
       (= I 3)
       (= H 3)
       (= G F)
       (= F E)
       (= C K)
       (= B 0)
       (= O M)
       (= M C)
       (= L C)
       (= X Q)
       (= N 0)
       (= R X)
       (= W 0)
       (>= K 0)
       (>= O 0)
       (>= M 0)
       (>= L 0)
       (>= R 0)
       (<= K 255)
       (<= O 255)
       (<= M 255)
       (<= L 255)
       (<= R 4294967295)
       (not P)
       (= P (= L O)))))
      )
      (block_10_function_f__60_61_0 H U A D V S T X C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V Int) (W state_type) (X state_type) (Y Int) (Z tx_type) (A1 Int) (B1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E Y A D Z W X A1 B)
        (let ((a!1 (ite (>= V 0)
                ((_ int_to_bv 32) V)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) V)))))
      (a!2 (ite (>= J 0)
                ((_ int_to_bv 32) (* 8 J))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) J))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= U 16909060)
       (= B 0)
       (= H G)
       (= C L)
       (= O 0)
       (= M C)
       (= L (ite (<= 4 J) K a!3))
       (= J 3)
       (= I 4)
       (= G F)
       (= F E)
       (= S C)
       (= P N)
       (= N C)
       (= B1 U)
       (= T 0)
       (= R C)
       (= V B1)
       (= A1 0)
       (>= M 0)
       (>= L 0)
       (>= S 0)
       (>= P 0)
       (>= N 0)
       (>= R 0)
       (>= V 0)
       (<= M 255)
       (<= L 255)
       (<= S 255)
       (<= P 255)
       (<= N 255)
       (<= R 255)
       (<= V 4294967295)
       (or (not (<= 0 T)) (>= T 1))
       (= Q (= M P)))))
      )
      (block_11_function_f__60_61_0 I Y A D Z W X B1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z state_type) (A1 state_type) (B1 Int) (C1 tx_type) (D1 Int) (E1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E B1 A D C1 Z A1 D1 B)
        (let ((a!1 (ite (>= Y 0)
                ((_ int_to_bv 32) Y)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) Y)))))
      (a!2 (ite (>= K 0)
                ((_ int_to_bv 32) (* 8 K))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) K))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= X 16909060)
       (= H G)
       (= C M)
       (= B 0)
       (= K 3)
       (= G F)
       (= F E)
       (= P 0)
       (= O C)
       (= N C)
       (= M (ite (<= 4 K) L a!3))
       (= J 5)
       (= I H)
       (= V T)
       (= T C)
       (= S C)
       (= Q O)
       (= E1 X)
       (= W 0)
       (= U 0)
       (= Y E1)
       (= D1 0)
       (>= O 0)
       (>= N 0)
       (>= M 0)
       (>= V 0)
       (>= T 0)
       (>= S 0)
       (>= Q 0)
       (>= Y 0)
       (<= O 255)
       (<= N 255)
       (<= M 255)
       (<= V 255)
       (<= T 255)
       (<= S 255)
       (<= Q 255)
       (<= Y 4294967295)
       (or (not (<= 0 W)) (>= W 1))
       (= R (= N Q)))))
      )
      (block_12_function_f__60_61_0 J B1 A D C1 Z A1 E1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 state_type) (D1 state_type) (E1 Int) (F1 tx_type) (G1 Int) (H1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E E1 A D F1 C1 D1 G1 B)
        (let ((a!1 (ite (>= B1 0)
                ((_ int_to_bv 32) B1)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) B1)))))
      (a!2 (ite (>= L 0)
                ((_ int_to_bv 32) (* 8 L))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) L))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= S (= O R))
       (= A1 16909060)
       (= G F)
       (= C N)
       (= B 0)
       (= K 6)
       (= H G)
       (= F E)
       (= N (ite (<= 4 L) M a!3))
       (= J I)
       (= I H)
       (= U C)
       (= R P)
       (= Q 0)
       (= P C)
       (= O C)
       (= L 3)
       (= Y W)
       (= W U)
       (= V 0)
       (= T C)
       (= H1 A1)
       (= X 0)
       (= B1 H1)
       (= G1 0)
       (>= N 0)
       (>= U 0)
       (>= R 0)
       (>= P 0)
       (>= O 0)
       (>= Y 0)
       (>= W 0)
       (>= T 0)
       (>= B1 0)
       (<= N 255)
       (<= U 255)
       (<= R 255)
       (<= P 255)
       (<= O 255)
       (<= Y 255)
       (<= W 255)
       (<= T 255)
       (<= B1 4294967295)
       (not Z)
       (= Z (= T Y)))))
      )
      (block_13_function_f__60_61_0 K E1 A D F1 C1 D1 H1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 state_type) (H1 state_type) (I1 Int) (J1 tx_type) (K1 Int) (L1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E I1 A D J1 G1 H1 K1 B)
        (let ((a!1 (ite (>= F1 0)
                ((_ int_to_bv 32) F1)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) F1)))))
      (a!2 (ite (>= M 0)
                ((_ int_to_bv 32) (* 8 M))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) M))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= A1 (= U Z))
       (= E1 16909060)
       (= B 0)
       (= H G)
       (= C O)
       (= K J)
       (= G F)
       (= F E)
       (= O (ite (<= 4 M) N a!3))
       (= L 7)
       (= J I)
       (= I H)
       (= R 0)
       (= M 3)
       (= Y 0)
       (= W 0)
       (= V C)
       (= U C)
       (= S Q)
       (= Q C)
       (= P C)
       (= C1 C)
       (= Z X)
       (= X V)
       (= L1 E1)
       (= D1 0)
       (= B1 C)
       (= F1 L1)
       (= K1 0)
       (>= O 0)
       (>= V 0)
       (>= U 0)
       (>= S 0)
       (>= Q 0)
       (>= P 0)
       (>= C1 0)
       (>= Z 0)
       (>= X 0)
       (>= B1 0)
       (>= F1 0)
       (<= O 255)
       (<= V 255)
       (<= U 255)
       (<= S 255)
       (<= Q 255)
       (<= P 255)
       (<= C1 255)
       (<= Z 255)
       (<= X 255)
       (<= B1 255)
       (<= F1 4294967295)
       (or (not (<= 0 D1)) (>= D1 1))
       (= T (= P S)))))
      )
      (block_14_function_f__60_61_0 L I1 A D J1 G1 H1 L1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 state_type) (K1 state_type) (L1 Int) (M1 tx_type) (N1 Int) (O1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E L1 A D M1 J1 K1 N1 B)
        (let ((a!1 (ite (>= I1 0)
                ((_ int_to_bv 32) I1)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) I1)))))
      (a!2 (ite (>= N 0)
                ((_ int_to_bv 32) (* 8 N))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) N))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= B1 (= V A1))
       (= H1 16909060)
       (= H G)
       (= C P)
       (= B 0)
       (= K J)
       (= G F)
       (= F E)
       (= N 3)
       (= J I)
       (= I H)
       (= R C)
       (= M 8)
       (= L K)
       (= Q C)
       (= P (ite (<= 4 N) O a!3))
       (= Z 0)
       (= Y W)
       (= X 0)
       (= W C)
       (= V C)
       (= T R)
       (= S 0)
       (= F1 D1)
       (= D1 C)
       (= C1 C)
       (= A1 Y)
       (= O1 H1)
       (= G1 0)
       (= E1 0)
       (= I1 O1)
       (= N1 0)
       (>= R 0)
       (>= Q 0)
       (>= P 0)
       (>= Y 0)
       (>= W 0)
       (>= V 0)
       (>= T 0)
       (>= F1 0)
       (>= D1 0)
       (>= C1 0)
       (>= A1 0)
       (>= I1 0)
       (<= R 255)
       (<= Q 255)
       (<= P 255)
       (<= Y 255)
       (<= W 255)
       (<= V 255)
       (<= T 255)
       (<= F1 255)
       (<= D1 255)
       (<= C1 255)
       (<= A1 255)
       (<= I1 4294967295)
       (or (not (<= 0 G1)) (>= G1 1))
       (= U (= Q T)))))
      )
      (block_15_function_f__60_61_0 M L1 A D M1 J1 K1 O1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 state_type) (N1 state_type) (O1 Int) (P1 tx_type) (Q1 Int) (R1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E O1 A D P1 M1 N1 Q1 B)
        (let ((a!1 (ite (>= L1 0)
                ((_ int_to_bv 32) L1)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) L1)))))
      (a!2 (ite (>= O 0)
                ((_ int_to_bv 32) (* 8 O))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) O))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= C1 (= W B1))
       (= K1 16909060)
       (= G F)
       (= C Q)
       (= B 0)
       (= K J)
       (= H G)
       (= F E)
       (= N 9)
       (= J I)
       (= I H)
       (= Q (ite (<= 4 O) P a!3))
       (= M L)
       (= L K)
       (= U S)
       (= R C)
       (= O 3)
       (= X C)
       (= T 0)
       (= S C)
       (= E1 C)
       (= B1 Z)
       (= A1 0)
       (= Z X)
       (= Y 0)
       (= W C)
       (= I1 G1)
       (= G1 E1)
       (= F1 0)
       (= D1 C)
       (= R1 K1)
       (= J1 0)
       (= H1 0)
       (= L1 R1)
       (= Q1 0)
       (>= Q 0)
       (>= U 0)
       (>= R 0)
       (>= X 0)
       (>= S 0)
       (>= E1 0)
       (>= B1 0)
       (>= Z 0)
       (>= W 0)
       (>= I1 0)
       (>= G1 0)
       (>= D1 0)
       (>= L1 0)
       (<= Q 255)
       (<= U 255)
       (<= R 255)
       (<= X 255)
       (<= S 255)
       (<= E1 255)
       (<= B1 255)
       (<= Z 255)
       (<= W 255)
       (<= I1 255)
       (<= G1 255)
       (<= D1 255)
       (<= L1 4294967295)
       (or (not (<= 0 J1)) (>= J1 1))
       (= V (= R U)))))
      )
      (block_16_function_f__60_61_0 N O1 A D P1 M1 N1 R1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 state_type) (Q1 state_type) (R1 Int) (S1 tx_type) (T1 Int) (U1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E R1 A D S1 P1 Q1 T1 B)
        (let ((a!1 (ite (>= O1 0)
                ((_ int_to_bv 32) O1)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) O1)))))
      (a!2 (ite (>= P 0)
                ((_ int_to_bv 32) (* 8 P))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) P))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= D1 (= X C1))
       (= N1 16909060)
       (= G 10)
       (= C R)
       (= B 0)
       (= J I)
       (= F E)
       (= N M)
       (= K J)
       (= I H)
       (= H F)
       (= M L)
       (= L K)
       (= T C)
       (= P 3)
       (= O N)
       (= X C)
       (= U 0)
       (= S C)
       (= R (ite (<= 4 P) Q a!3))
       (= A1 Y)
       (= V T)
       (= H1 F1)
       (= F1 C)
       (= E1 C)
       (= C1 A1)
       (= B1 0)
       (= Z 0)
       (= Y C)
       (= L1 J1)
       (= J1 H1)
       (= I1 0)
       (= G1 0)
       (= U1 N1)
       (= M1 0)
       (= K1 0)
       (= O1 U1)
       (= T1 0)
       (>= T 0)
       (>= X 0)
       (>= S 0)
       (>= R 0)
       (>= A1 0)
       (>= V 0)
       (>= H1 0)
       (>= F1 0)
       (>= E1 0)
       (>= C1 0)
       (>= Y 0)
       (>= L1 0)
       (>= J1 0)
       (>= O1 0)
       (<= T 255)
       (<= X 255)
       (<= S 255)
       (<= R 255)
       (<= A1 255)
       (<= V 255)
       (<= H1 255)
       (<= F1 255)
       (<= E1 255)
       (<= C1 255)
       (<= Y 255)
       (<= L1 255)
       (<= J1 255)
       (<= O1 4294967295)
       (or (not (<= 0 M1)) (>= M1 1))
       (= W (= S V)))))
      )
      (block_17_function_f__60_61_0 G R1 A D S1 P1 Q1 U1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 state_type) (T1 state_type) (U1 Int) (V1 tx_type) (W1 Int) (X1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E U1 A D V1 S1 T1 W1 B)
        (let ((a!1 (ite (>= R1 0)
                ((_ int_to_bv 32) R1)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) R1)))))
      (a!2 (ite (>= Q 0)
                ((_ int_to_bv 32) (* 8 Q))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) Q))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= X (= T W))
       (= Q1 16909060)
       (= G P)
       (= C S)
       (= B 0)
       (= J I)
       (= F E)
       (= M L)
       (= I F)
       (= H 11)
       (= Q 3)
       (= N M)
       (= L K)
       (= K J)
       (= T C)
       (= P O)
       (= O N)
       (= W U)
       (= S (ite (<= 4 Q) R a!3))
       (= A1 0)
       (= V 0)
       (= U C)
       (= D1 B1)
       (= Z C)
       (= Y C)
       (= K1 I1)
       (= I1 G1)
       (= H1 0)
       (= G1 C)
       (= F1 C)
       (= C1 0)
       (= B1 Z)
       (= O1 M1)
       (= M1 K1)
       (= L1 0)
       (= J1 0)
       (= X1 Q1)
       (= P1 0)
       (= N1 0)
       (= R1 X1)
       (= W1 0)
       (>= T 0)
       (>= W 0)
       (>= S 0)
       (>= U 0)
       (>= D1 0)
       (>= Z 0)
       (>= Y 0)
       (>= K1 0)
       (>= I1 0)
       (>= G1 0)
       (>= F1 0)
       (>= B1 0)
       (>= O1 0)
       (>= M1 0)
       (>= R1 0)
       (<= T 255)
       (<= W 255)
       (<= S 255)
       (<= U 255)
       (<= D1 255)
       (<= Z 255)
       (<= Y 255)
       (<= K1 255)
       (<= I1 255)
       (<= G1 255)
       (<= F1 255)
       (<= B1 255)
       (<= O1 255)
       (<= M1 255)
       (<= R1 4294967295)
       (or (not (<= 0 P1)) (>= P1 1))
       (= E1 (= Y D1)))))
      )
      (block_18_function_f__60_61_0 H U1 A D V1 S1 T1 X1 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Bool) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 state_type) (W1 state_type) (X1 Int) (Y1 tx_type) (Z1 Int) (A2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E X1 A D Y1 V1 W1 Z1 B)
        (let ((a!1 (ite (>= U1 0)
                ((_ int_to_bv 32) U1)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) U1)))))
      (a!2 (ite (>= R 0)
                ((_ int_to_bv 32) (* 8 R))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) R))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= Y (= U X))
       (= T1 16909060)
       (= G Q)
       (= C T)
       (= B 0)
       (= J F)
       (= F E)
       (= M L)
       (= I 12)
       (= H G)
       (= P O)
       (= L K)
       (= K J)
       (= T (ite (<= 4 R) S a!3))
       (= Q P)
       (= O N)
       (= N M)
       (= W 0)
       (= R 3)
       (= Z C)
       (= V C)
       (= U C)
       (= D1 0)
       (= A1 C)
       (= X V)
       (= G1 C)
       (= C1 A1)
       (= B1 0)
       (= N1 L1)
       (= L1 J1)
       (= K1 0)
       (= J1 H1)
       (= I1 0)
       (= H1 C)
       (= E1 C1)
       (= R1 P1)
       (= P1 N1)
       (= O1 0)
       (= M1 0)
       (= A2 T1)
       (= S1 0)
       (= Q1 0)
       (= U1 A2)
       (= Z1 0)
       (>= T 0)
       (>= Z 0)
       (>= V 0)
       (>= U 0)
       (>= A1 0)
       (>= X 0)
       (>= G1 0)
       (>= C1 0)
       (>= N1 0)
       (>= L1 0)
       (>= J1 0)
       (>= H1 0)
       (>= E1 0)
       (>= R1 0)
       (>= P1 0)
       (>= U1 0)
       (<= T 255)
       (<= Z 255)
       (<= V 255)
       (<= U 255)
       (<= A1 255)
       (<= X 255)
       (<= G1 255)
       (<= C1 255)
       (<= N1 255)
       (<= L1 255)
       (<= J1 255)
       (<= H1 255)
       (<= E1 255)
       (<= R1 255)
       (<= P1 255)
       (<= U1 4294967295)
       (or (not (<= 0 S1)) (>= S1 1))
       (= F1 (= Z E1)))))
      )
      (block_19_function_f__60_61_0 I X1 A D Y1 V1 W1 A2 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 state_type) (Z1 state_type) (A2 Int) (B2 tx_type) (C2 Int) (D2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E A2 A D B2 Y1 Z1 C2 B)
        (let ((a!1 (ite (>= X1 0)
                ((_ int_to_bv 32) X1)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) X1)))))
      (a!2 (ite (>= S 0)
                ((_ int_to_bv 32) (* 8 S))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) S))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= Z (= V Y))
       (= W1 16909060)
       (= G R)
       (= C U)
       (= B 0)
       (= J 13)
       (= F E)
       (= M L)
       (= I H)
       (= H G)
       (= P O)
       (= L K)
       (= K F)
       (= S 3)
       (= O N)
       (= N M)
       (= W C)
       (= R Q)
       (= Q P)
       (= V C)
       (= U (ite (<= 4 S) T a!3))
       (= C1 0)
       (= Y W)
       (= X 0)
       (= D1 B1)
       (= B1 C)
       (= A1 C)
       (= J1 0)
       (= F1 D1)
       (= E1 0)
       (= Q1 O1)
       (= O1 M1)
       (= N1 0)
       (= M1 K1)
       (= L1 0)
       (= K1 I1)
       (= I1 C)
       (= H1 C)
       (= U1 S1)
       (= S1 Q1)
       (= R1 0)
       (= P1 0)
       (= D2 W1)
       (= V1 0)
       (= T1 0)
       (= X1 D2)
       (= C2 0)
       (>= W 0)
       (>= V 0)
       (>= U 0)
       (>= Y 0)
       (>= D1 0)
       (>= B1 0)
       (>= A1 0)
       (>= F1 0)
       (>= Q1 0)
       (>= O1 0)
       (>= M1 0)
       (>= K1 0)
       (>= I1 0)
       (>= H1 0)
       (>= U1 0)
       (>= S1 0)
       (>= X1 0)
       (<= W 255)
       (<= V 255)
       (<= U 255)
       (<= Y 255)
       (<= D1 255)
       (<= B1 255)
       (<= A1 255)
       (<= F1 255)
       (<= Q1 255)
       (<= O1 255)
       (<= M1 255)
       (<= K1 255)
       (<= I1 255)
       (<= H1 255)
       (<= U1 255)
       (<= S1 255)
       (<= X1 4294967295)
       (or (not (<= 0 V1)) (>= V1 1))
       (= G1 (= A1 F1)))))
      )
      (block_20_function_f__60_61_0 J A2 A D B2 Y1 Z1 D2 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 state_type) (C2 state_type) (D2 Int) (E2 tx_type) (F2 Int) (G2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E D2 A D E2 B2 C2 F2 B)
        (let ((a!1 (ite (>= A2 0)
                ((_ int_to_bv 32) A2)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) A2)))))
      (a!2 (ite (>= T 0)
                ((_ int_to_bv 32) (* 8 T))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) T))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= A1 (= W Z))
       (= Z1 16909060)
       (= G S)
       (= C V)
       (= B 0)
       (= J I)
       (= F E)
       (= M L)
       (= I H)
       (= H G)
       (= P O)
       (= L F)
       (= K 14)
       (= S R)
       (= O N)
       (= N M)
       (= V (ite (<= 4 T) U a!3))
       (= R Q)
       (= Q P)
       (= Z X)
       (= W C)
       (= T 3)
       (= C1 C)
       (= Y 0)
       (= X C)
       (= F1 0)
       (= B1 C)
       (= J1 C)
       (= G1 E1)
       (= E1 C1)
       (= D1 0)
       (= M1 0)
       (= I1 C)
       (= T1 R1)
       (= R1 P1)
       (= Q1 0)
       (= P1 N1)
       (= O1 0)
       (= N1 L1)
       (= L1 J1)
       (= K1 0)
       (= X1 V1)
       (= V1 T1)
       (= U1 0)
       (= S1 0)
       (= G2 Z1)
       (= Y1 0)
       (= W1 0)
       (= A2 G2)
       (= F2 0)
       (>= V 0)
       (>= Z 0)
       (>= W 0)
       (>= C1 0)
       (>= X 0)
       (>= B1 0)
       (>= J1 0)
       (>= G1 0)
       (>= E1 0)
       (>= I1 0)
       (>= T1 0)
       (>= R1 0)
       (>= P1 0)
       (>= N1 0)
       (>= L1 0)
       (>= X1 0)
       (>= V1 0)
       (>= A2 0)
       (<= V 255)
       (<= Z 255)
       (<= W 255)
       (<= C1 255)
       (<= X 255)
       (<= B1 255)
       (<= J1 255)
       (<= G1 255)
       (<= E1 255)
       (<= I1 255)
       (<= T1 255)
       (<= R1 255)
       (<= P1 255)
       (<= N1 255)
       (<= L1 255)
       (<= X1 255)
       (<= V1 255)
       (<= A2 4294967295)
       (or (not (<= 0 Y1)) (>= Y1 1))
       (= H1 (= B1 G1)))))
      )
      (block_21_function_f__60_61_0 K D2 A D E2 B2 C2 G2 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 state_type) (F2 state_type) (G2 Int) (H2 tx_type) (I2 Int) (J2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E G2 A D H2 E2 F2 I2 B)
        (let ((a!1 (ite (>= D2 0)
                ((_ int_to_bv 32) D2)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) D2)))))
      (a!2 (ite (>= U 0)
                ((_ int_to_bv 32) (* 8 U))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) U))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= B1 (= X A1))
       (= C2 16909060)
       (= G T)
       (= C W)
       (= B 0)
       (= J I)
       (= F E)
       (= M F)
       (= I H)
       (= H G)
       (= P O)
       (= L 15)
       (= K J)
       (= S R)
       (= O N)
       (= N M)
       (= R Q)
       (= Q P)
       (= Y C)
       (= U 3)
       (= T S)
       (= C1 C)
       (= Z 0)
       (= X C)
       (= W (ite (<= 4 U) V a!3))
       (= F1 D1)
       (= A1 Y)
       (= E1 0)
       (= D1 C)
       (= M1 K1)
       (= J1 C)
       (= H1 F1)
       (= G1 0)
       (= P1 0)
       (= L1 0)
       (= K1 C)
       (= W1 U1)
       (= U1 S1)
       (= T1 0)
       (= S1 Q1)
       (= R1 0)
       (= Q1 O1)
       (= O1 M1)
       (= N1 0)
       (= A2 Y1)
       (= Y1 W1)
       (= X1 0)
       (= V1 0)
       (= J2 C2)
       (= B2 0)
       (= Z1 0)
       (= D2 J2)
       (= I2 0)
       (>= Y 0)
       (>= C1 0)
       (>= X 0)
       (>= W 0)
       (>= F1 0)
       (>= A1 0)
       (>= D1 0)
       (>= M1 0)
       (>= J1 0)
       (>= H1 0)
       (>= K1 0)
       (>= W1 0)
       (>= U1 0)
       (>= S1 0)
       (>= Q1 0)
       (>= O1 0)
       (>= A2 0)
       (>= Y1 0)
       (>= D2 0)
       (<= Y 255)
       (<= C1 255)
       (<= X 255)
       (<= W 255)
       (<= F1 255)
       (<= A1 255)
       (<= D1 255)
       (<= M1 255)
       (<= J1 255)
       (<= H1 255)
       (<= K1 255)
       (<= W1 255)
       (<= U1 255)
       (<= S1 255)
       (<= Q1 255)
       (<= O1 255)
       (<= A2 255)
       (<= Y1 255)
       (<= D2 4294967295)
       (or (not (<= 0 B2)) (>= B2 1))
       (= I1 (= C1 H1)))))
      )
      (block_22_function_f__60_61_0 L G2 A D H2 E2 F2 J2 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Bool) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 state_type) (I2 state_type) (J2 Int) (K2 tx_type) (L2 Int) (M2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E J2 A D K2 H2 I2 L2 B)
        (let ((a!1 (ite (>= G2 0)
                ((_ int_to_bv 32) G2)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) G2)))))
      (a!2 (ite (>= V 0)
                ((_ int_to_bv 32) (* 8 V))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) V))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= C1 (= Y B1))
       (= F2 16909060)
       (= G U)
       (= C X)
       (= B 0)
       (= J I)
       (= F E)
       (= M 16)
       (= I H)
       (= H G)
       (= P O)
       (= L K)
       (= K J)
       (= S R)
       (= O N)
       (= N F)
       (= V 3)
       (= R Q)
       (= Q P)
       (= Y C)
       (= U T)
       (= T S)
       (= B1 Z)
       (= X (ite (<= 4 V) W a!3))
       (= F1 0)
       (= A1 0)
       (= Z C)
       (= I1 G1)
       (= E1 C)
       (= D1 C)
       (= L1 C)
       (= H1 0)
       (= G1 E1)
       (= P1 N1)
       (= M1 0)
       (= K1 C)
       (= S1 0)
       (= O1 0)
       (= N1 L1)
       (= Z1 X1)
       (= X1 V1)
       (= W1 0)
       (= V1 T1)
       (= U1 0)
       (= T1 R1)
       (= R1 P1)
       (= Q1 0)
       (= D2 B2)
       (= B2 Z1)
       (= A2 0)
       (= Y1 0)
       (= M2 F2)
       (= E2 0)
       (= C2 0)
       (= G2 M2)
       (= L2 0)
       (>= Y 0)
       (>= B1 0)
       (>= X 0)
       (>= Z 0)
       (>= I1 0)
       (>= E1 0)
       (>= D1 0)
       (>= L1 0)
       (>= G1 0)
       (>= P1 0)
       (>= K1 0)
       (>= N1 0)
       (>= Z1 0)
       (>= X1 0)
       (>= V1 0)
       (>= T1 0)
       (>= R1 0)
       (>= D2 0)
       (>= B2 0)
       (>= G2 0)
       (<= Y 255)
       (<= B1 255)
       (<= X 255)
       (<= Z 255)
       (<= I1 255)
       (<= E1 255)
       (<= D1 255)
       (<= L1 255)
       (<= G1 255)
       (<= P1 255)
       (<= K1 255)
       (<= N1 255)
       (<= Z1 255)
       (<= X1 255)
       (<= V1 255)
       (<= T1 255)
       (<= R1 255)
       (<= D2 255)
       (<= B2 255)
       (<= G2 4294967295)
       (or (not (<= 0 E2)) (>= E2 1))
       (= J1 (= D1 I1)))))
      )
      (block_23_function_f__60_61_0 M J2 A D K2 H2 I2 M2 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Bool) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int) (I2 Int) (J2 Int) (K2 state_type) (L2 state_type) (M2 Int) (N2 tx_type) (O2 Int) (P2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E M2 A D N2 K2 L2 O2 B)
        (let ((a!1 (ite (>= J2 0)
                ((_ int_to_bv 32) J2)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) J2)))))
      (a!2 (ite (>= W 0)
                ((_ int_to_bv 32) (* 8 W))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) W))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= D1 (= Z C1))
       (= I2 16909060)
       (= G V)
       (= C Y)
       (= B 0)
       (= J I)
       (= F E)
       (= M L)
       (= I H)
       (= H G)
       (= P O)
       (= L K)
       (= K J)
       (= S R)
       (= O F)
       (= N 17)
       (= V U)
       (= R Q)
       (= Q P)
       (= Y (ite (<= 4 W) X a!3))
       (= U T)
       (= T S)
       (= B1 0)
       (= W 3)
       (= E1 C)
       (= A1 C)
       (= Z C)
       (= I1 0)
       (= F1 C)
       (= C1 A1)
       (= L1 C)
       (= H1 F1)
       (= G1 0)
       (= O1 M1)
       (= J1 H1)
       (= S1 Q1)
       (= P1 0)
       (= N1 0)
       (= M1 C)
       (= V1 0)
       (= R1 0)
       (= Q1 O1)
       (= C2 A2)
       (= A2 Y1)
       (= Z1 0)
       (= Y1 W1)
       (= X1 0)
       (= W1 U1)
       (= U1 S1)
       (= T1 0)
       (= G2 E2)
       (= E2 C2)
       (= D2 0)
       (= B2 0)
       (= P2 I2)
       (= H2 0)
       (= F2 0)
       (= J2 P2)
       (= O2 0)
       (>= Y 0)
       (>= E1 0)
       (>= A1 0)
       (>= Z 0)
       (>= F1 0)
       (>= C1 0)
       (>= L1 0)
       (>= H1 0)
       (>= O1 0)
       (>= J1 0)
       (>= S1 0)
       (>= M1 0)
       (>= Q1 0)
       (>= C2 0)
       (>= A2 0)
       (>= Y1 0)
       (>= W1 0)
       (>= U1 0)
       (>= G2 0)
       (>= E2 0)
       (>= J2 0)
       (<= Y 255)
       (<= E1 255)
       (<= A1 255)
       (<= Z 255)
       (<= F1 255)
       (<= C1 255)
       (<= L1 255)
       (<= H1 255)
       (<= O1 255)
       (<= J1 255)
       (<= S1 255)
       (<= M1 255)
       (<= Q1 255)
       (<= C2 255)
       (<= A2 255)
       (<= Y1 255)
       (<= W1 255)
       (<= U1 255)
       (<= G2 255)
       (<= E2 255)
       (<= J2 4294967295)
       (or (not (<= 0 H2)) (>= H2 1))
       (= K1 (= E1 J1)))))
      )
      (block_24_function_f__60_61_0 N M2 A D N2 K2 L2 P2 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int) (I2 Int) (J2 Int) (K2 Bool) (L2 Int) (M2 Int) (N2 state_type) (O2 state_type) (P2 Int) (Q2 tx_type) (R2 Int) (S2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E P2 A D Q2 N2 O2 R2 B)
        (let ((a!1 (ite (>= M2 0)
                ((_ int_to_bv 32) M2)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) M2)))))
      (a!2 (ite (>= X 0)
                ((_ int_to_bv 32) (* 8 X))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) X))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= L1 (= F1 K1))
       (= E1 (= A1 D1))
       (= L2 16909060)
       (= G W)
       (= C Z)
       (= B 0)
       (= J I)
       (= F E)
       (= M L)
       (= I H)
       (= H G)
       (= P F)
       (= L K)
       (= K J)
       (= S R)
       (= O 18)
       (= N M)
       (= V U)
       (= R Q)
       (= Q P)
       (= U T)
       (= T S)
       (= B1 C)
       (= X 3)
       (= W V)
       (= A1 C)
       (= Z (ite (<= 4 X) Y a!3))
       (= H1 0)
       (= D1 B1)
       (= C1 0)
       (= I1 G1)
       (= G1 C)
       (= F1 C)
       (= O1 0)
       (= K1 I1)
       (= J1 0)
       (= R1 P1)
       (= N1 C)
       (= M1 C)
       (= V1 T1)
       (= S1 0)
       (= Q1 0)
       (= P1 N1)
       (= Y1 0)
       (= U1 0)
       (= T1 R1)
       (= F2 D2)
       (= D2 B2)
       (= C2 0)
       (= B2 Z1)
       (= A2 0)
       (= Z1 X1)
       (= X1 V1)
       (= W1 0)
       (= J2 H2)
       (= H2 F2)
       (= G2 0)
       (= E2 0)
       (= S2 L2)
       (= I2 0)
       (= M2 S2)
       (= R2 0)
       (>= B1 0)
       (>= A1 0)
       (>= Z 0)
       (>= D1 0)
       (>= I1 0)
       (>= G1 0)
       (>= F1 0)
       (>= K1 0)
       (>= R1 0)
       (>= N1 0)
       (>= M1 0)
       (>= V1 0)
       (>= P1 0)
       (>= T1 0)
       (>= F2 0)
       (>= D2 0)
       (>= B2 0)
       (>= Z1 0)
       (>= X1 0)
       (>= J2 0)
       (>= H2 0)
       (>= M2 0)
       (<= B1 255)
       (<= A1 255)
       (<= Z 255)
       (<= D1 255)
       (<= I1 255)
       (<= G1 255)
       (<= F1 255)
       (<= K1 255)
       (<= R1 255)
       (<= N1 255)
       (<= M1 255)
       (<= V1 255)
       (<= P1 255)
       (<= T1 255)
       (<= F2 255)
       (<= D2 255)
       (<= B2 255)
       (<= Z1 255)
       (<= X1 255)
       (<= J2 255)
       (<= H2 255)
       (<= M2 4294967295)
       (not K2)
       (= K2 (= M1 J2)))))
      )
      (block_25_function_f__60_61_0 O P2 A D Q2 N2 O2 S2 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C Int) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int) (I2 Int) (J2 Int) (K2 Bool) (L2 Int) (M2 Int) (N2 state_type) (O2 state_type) (P2 Int) (Q2 tx_type) (R2 Int) (S2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 E P2 A D Q2 N2 O2 R2 B)
        (let ((a!1 (ite (>= M2 0)
                ((_ int_to_bv 32) M2)
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 1) M2)))))
      (a!2 (ite (>= X 0)
                ((_ int_to_bv 32) (* 8 X))
                (bvmul #xffffffff ((_ int_to_bv 32) (* (- 8) X))))))
(let ((a!3 (+ (* 256 (ubv_to_int #x000000))
              (ubv_to_int ((_ extract 31 24) (bvshl a!1 a!2))))))
  (and (= L1 (= F1 K1))
       (= E1 (= A1 D1))
       (= L2 16909060)
       (= G W)
       (= C Z)
       (= B 0)
       (= J I)
       (= F E)
       (= M L)
       (= I H)
       (= H G)
       (= P F)
       (= L K)
       (= K J)
       (= S R)
       (= O N)
       (= N M)
       (= V U)
       (= R Q)
       (= Q P)
       (= U T)
       (= T S)
       (= B1 C)
       (= X 3)
       (= W V)
       (= A1 C)
       (= Z (ite (<= 4 X) Y a!3))
       (= H1 0)
       (= D1 B1)
       (= C1 0)
       (= I1 G1)
       (= G1 C)
       (= F1 C)
       (= O1 0)
       (= K1 I1)
       (= J1 0)
       (= R1 P1)
       (= N1 C)
       (= M1 C)
       (= V1 T1)
       (= S1 0)
       (= Q1 0)
       (= P1 N1)
       (= Y1 0)
       (= U1 0)
       (= T1 R1)
       (= F2 D2)
       (= D2 B2)
       (= C2 0)
       (= B2 Z1)
       (= A2 0)
       (= Z1 X1)
       (= X1 V1)
       (= W1 0)
       (= J2 H2)
       (= H2 F2)
       (= G2 0)
       (= E2 0)
       (= S2 L2)
       (= I2 0)
       (= M2 S2)
       (= R2 0)
       (>= B1 0)
       (>= A1 0)
       (>= Z 0)
       (>= D1 0)
       (>= I1 0)
       (>= G1 0)
       (>= F1 0)
       (>= K1 0)
       (>= R1 0)
       (>= N1 0)
       (>= M1 0)
       (>= V1 0)
       (>= P1 0)
       (>= T1 0)
       (>= F2 0)
       (>= D2 0)
       (>= B2 0)
       (>= Z1 0)
       (>= X1 0)
       (>= J2 0)
       (>= H2 0)
       (>= M2 0)
       (<= B1 255)
       (<= A1 255)
       (<= Z 255)
       (<= D1 255)
       (<= I1 255)
       (<= G1 255)
       (<= F1 255)
       (<= K1 255)
       (<= R1 255)
       (<= N1 255)
       (<= M1 255)
       (<= V1 255)
       (<= P1 255)
       (<= T1 255)
       (<= F2 255)
       (<= D2 255)
       (<= B2 255)
       (<= Z1 255)
       (<= X1 255)
       (<= J2 255)
       (<= H2 255)
       (<= M2 4294967295)
       (= K2 (= M1 J2)))))
      )
      (block_7_return_function_f__60_61_0 O P2 A D Q2 N2 O2 S2 C)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) ) 
    (=>
      (and
        true
      )
      (block_26_function_f__60_61_0 D G A C H E F I B)
    )
  )
)
(assert
  (forall ( (A abi_type) (B Int) (C crypto_type) (D Int) (E Int) (F Int) (G state_type) (H state_type) (I state_type) (J state_type) (K Int) (L tx_type) (M Int) ) 
    (=>
      (and
        (block_26_function_f__60_61_0 D K A C L G H M B)
        (summary_3_function_f__60_61_0 E K A C L I J)
        (let ((a!1 (store (balances H) K (+ (select (balances H) K) F)))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data L)) 2) 31))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data L)) 1) 18))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data L)) 3) 240))
      (a!5 (= (select (bytes_tuple_accessor_array (msg.data L)) 0) 38))
      (a!6 (>= (+ (select (balances H) K) F) 0))
      (a!7 (<= (+ (select (balances H) K) F)
               115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  (and (= I (state_type a!1))
       a!2
       a!3
       a!4
       a!5
       (= (msg.value L) 0)
       (= (msg.sig L) 638722032)
       (= D 0)
       (>= (tx.origin L) 0)
       (>= (tx.gasprice L) 0)
       (>= (msg.value L) 0)
       (>= (msg.sender L) 0)
       (>= (block.timestamp L) 0)
       (>= (block.number L) 0)
       (>= (block.gaslimit L) 0)
       (>= (block.difficulty L) 0)
       (>= (block.coinbase L) 0)
       (>= (block.chainid L) 0)
       (>= (block.basefee L) 0)
       (>= (bytes_tuple_accessor_length (msg.data L)) 4)
       a!6
       (>= F (msg.value L))
       (<= (tx.origin L) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender L) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase L) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!7
       (= H G)))
      )
      (summary_4_function_f__60_61_0 E K A C L G J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__60_61_0 C F A B G D E)
        (interface_0_C_61_0 F A B D)
        (= C 0)
      )
      (interface_0_C_61_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_61_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_61_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_28_C_61_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_28_C_61_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_29_C_61_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_29_C_61_0 C F A B G D E)
        true
      )
      (contract_initializer_27_C_61_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_30_C_61_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_30_C_61_0 C H A B I E F)
        (contract_initializer_27_C_61_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_61_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_27_C_61_0 D H A B I F G)
        (implicit_constructor_entry_30_C_61_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_61_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__60_61_0 C F A B G D E)
        (interface_0_C_61_0 F A B D)
        (= C 16)
      )
      error_target_35_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_35_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
