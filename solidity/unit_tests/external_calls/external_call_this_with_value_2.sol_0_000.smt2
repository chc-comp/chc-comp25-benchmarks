(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_8_g_42_48_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_10_function_h__47_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_return_function_g__43_48_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_14_function_h__47_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_17_function_h__47_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |implicit_constructor_entry_21_C_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_5_function_h__47_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |error_target_6_0| ( ) Bool)
(declare-fun |interface_0_C_48_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |summary_constructor_2_C_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_18_C_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_15_h_46_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_11_function_g__43_48_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_12_function_g__43_48_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_13_function_g__43_48_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_16_return_function_h__47_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_after_init_20_C_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_3_function_g__43_48_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_6_function_h__47_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_4_function_g__43_48_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_7_function_g__43_48_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |contract_initializer_entry_19_C_48_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        true
      )
      (block_7_function_g__43_48_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_7_function_g__43_48_0 C H A B I F D G E)
        (and (= E D) (= C 0) (= G F))
      )
      (block_8_g_42_48_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_5_function_h__47_48_0 C F A B G D E)
        true
      )
      (summary_10_function_h__47_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N state_type) (O state_type) (P state_type) (Q Int) (R tx_type) (S tx_type) (T tx_type) ) 
    (=>
      (and
        (block_8_g_42_48_0 C Q A B R N L O M)
        (summary_10_function_h__47_48_0 D H A B S O P)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data S)) 3) 101))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data S)) 2) 211))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data S)) 1) 201))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data S)) 0) 184)))
  (and (= R T)
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin S) (tx.origin R))
       (= (msg.value S) 0)
       (= (msg.sig S) 3100234597)
       (= (msg.sender S) Q)
       (= J Q)
       (= I M)
       (= H Q)
       (= E (select (balances O) K))
       (= F 100)
       (= K J)
       (>= (tx.origin S) 0)
       (>= (tx.gasprice S) 0)
       (>= (msg.value S) 0)
       (>= (msg.sender S) 0)
       (>= (block.timestamp S) 0)
       (>= (block.number S) 0)
       (>= (block.gaslimit S) 0)
       (>= (block.difficulty S) 0)
       (>= (block.coinbase S) 0)
       (>= (block.chainid S) 0)
       (>= (block.basefee S) 0)
       (>= (bytes_tuple_accessor_length (msg.data S)) 4)
       (>= I 0)
       (>= E 0)
       (>= K 0)
       (>= M 0)
       (<= (tx.origin S) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice S)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value S)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender S) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp S)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number S)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit S)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty S)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase S) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid S)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee S)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= I
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= E
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (not (<= D 0))
       (<= K 1461501637330902918203684832716283019655932542975)
       (<= M
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (= G true)
       (= G (= E F))))
      )
      (summary_3_function_g__43_48_0 D Q A B R N L P M)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_11_function_g__43_48_0 C H A B I F D G E)
        true
      )
      (summary_3_function_g__43_48_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_12_function_g__43_48_0 C H A B I F D G E)
        true
      )
      (summary_3_function_g__43_48_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_9_return_function_g__43_48_0 C H A B I F D G E)
        true
      )
      (summary_3_function_g__43_48_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Bool) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Int) (S Int) (T state_type) (U state_type) (V state_type) (W Int) (X tx_type) (Y tx_type) (Z tx_type) ) 
    (=>
      (and
        (block_8_g_42_48_0 C W A B X T R U S)
        (summary_10_function_h__47_48_0 D I A B Y U V)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data Y)) 3) 101))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data Y)) 2) 211))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data Y)) 1) 201))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data Y)) 0) 184)))
  (and (= O (= M N))
       (= X Z)
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin Y) (tx.origin X))
       (= (msg.value Y) 0)
       (= (msg.sig Y) 3100234597)
       (= (msg.sender Y) W)
       (= G 100)
       (= M (select (balances V) L))
       (= F (select (balances U) Q))
       (= E 1)
       (= D 0)
       (= P W)
       (= N 100)
       (= I W)
       (= K W)
       (= L K)
       (= J S)
       (= Q P)
       (>= (tx.origin Y) 0)
       (>= (tx.gasprice Y) 0)
       (>= (msg.value Y) 0)
       (>= (msg.sender Y) 0)
       (>= (block.timestamp Y) 0)
       (>= (block.number Y) 0)
       (>= (block.gaslimit Y) 0)
       (>= (block.difficulty Y) 0)
       (>= (block.coinbase Y) 0)
       (>= (block.chainid Y) 0)
       (>= (block.basefee Y) 0)
       (>= (bytes_tuple_accessor_length (msg.data Y)) 4)
       (>= M 0)
       (>= F 0)
       (>= L 0)
       (>= J 0)
       (>= Q 0)
       (>= S 0)
       (<= (tx.origin Y) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice Y)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value Y)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender Y) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp Y)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number Y)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit Y)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty Y)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase Y) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid Y)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee Y)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= M
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= F
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= L 1461501637330902918203684832716283019655932542975)
       (<= J
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= Q 1461501637330902918203684832716283019655932542975)
       (<= S
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (= H true)
       (not O)
       (= H (= F G))))
      )
      (block_11_function_g__43_48_0 E W A B X T R V S)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Int) (Y Int) (Z state_type) (A1 state_type) (B1 state_type) (C1 Int) (D1 tx_type) (E1 tx_type) (F1 tx_type) ) 
    (=>
      (and
        (block_8_g_42_48_0 C C1 A B D1 Z X A1 Y)
        (summary_10_function_h__47_48_0 D J A B E1 A1 B1)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data E1)) 3) 101))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data E1)) 2) 211))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data E1)) 1) 201))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data E1)) 0) 184)))
  (and (= P (= N O))
       (= U (= S T))
       (= D1 F1)
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin E1) (tx.origin D1))
       (= (msg.value E1) 0)
       (= (msg.sig E1) 3100234597)
       (= (msg.sender E1) C1)
       (= M L)
       (= G (select (balances A1) W))
       (= F 2)
       (= E D)
       (= D 0)
       (= S (select (balances B1) R))
       (= L C1)
       (= K Y)
       (= J C1)
       (= H 100)
       (= V C1)
       (= T 90)
       (= N (select (balances B1) M))
       (= O 100)
       (= Q C1)
       (= R Q)
       (= W V)
       (>= (tx.origin E1) 0)
       (>= (tx.gasprice E1) 0)
       (>= (msg.value E1) 0)
       (>= (msg.sender E1) 0)
       (>= (block.timestamp E1) 0)
       (>= (block.number E1) 0)
       (>= (block.gaslimit E1) 0)
       (>= (block.difficulty E1) 0)
       (>= (block.coinbase E1) 0)
       (>= (block.chainid E1) 0)
       (>= (block.basefee E1) 0)
       (>= (bytes_tuple_accessor_length (msg.data E1)) 4)
       (>= M 0)
       (>= G 0)
       (>= S 0)
       (>= K 0)
       (>= N 0)
       (>= R 0)
       (>= W 0)
       (>= Y 0)
       (<= (tx.origin E1) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender E1) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase E1)
           1461501637330902918203684832716283019655932542975)
       (<= (block.chainid E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= M 1461501637330902918203684832716283019655932542975)
       (<= G
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= S
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= K
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= N
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= R 1461501637330902918203684832716283019655932542975)
       (<= W 1461501637330902918203684832716283019655932542975)
       (<= Y
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (= I true)
       (not U)
       (= I (= G H))))
      )
      (block_12_function_g__43_48_0 F C1 A B D1 Z X B1 Y)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Int) (Y Int) (Z state_type) (A1 state_type) (B1 state_type) (C1 Int) (D1 tx_type) (E1 tx_type) (F1 tx_type) ) 
    (=>
      (and
        (block_8_g_42_48_0 C C1 A B D1 Z X A1 Y)
        (summary_10_function_h__47_48_0 D J A B E1 A1 B1)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data E1)) 3) 101))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data E1)) 2) 211))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data E1)) 1) 201))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data E1)) 0) 184)))
  (and (= P (= N O))
       (= U (= S T))
       (= D1 F1)
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin E1) (tx.origin D1))
       (= (msg.value E1) 0)
       (= (msg.sig E1) 3100234597)
       (= (msg.sender E1) C1)
       (= M L)
       (= G (select (balances A1) W))
       (= F E)
       (= E D)
       (= D 0)
       (= S (select (balances B1) R))
       (= L C1)
       (= K Y)
       (= J C1)
       (= H 100)
       (= V C1)
       (= T 90)
       (= N (select (balances B1) M))
       (= O 100)
       (= Q C1)
       (= R Q)
       (= W V)
       (>= (tx.origin E1) 0)
       (>= (tx.gasprice E1) 0)
       (>= (msg.value E1) 0)
       (>= (msg.sender E1) 0)
       (>= (block.timestamp E1) 0)
       (>= (block.number E1) 0)
       (>= (block.gaslimit E1) 0)
       (>= (block.difficulty E1) 0)
       (>= (block.coinbase E1) 0)
       (>= (block.chainid E1) 0)
       (>= (block.basefee E1) 0)
       (>= (bytes_tuple_accessor_length (msg.data E1)) 4)
       (>= M 0)
       (>= G 0)
       (>= S 0)
       (>= K 0)
       (>= N 0)
       (>= R 0)
       (>= W 0)
       (>= Y 0)
       (<= (tx.origin E1) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender E1) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase E1)
           1461501637330902918203684832716283019655932542975)
       (<= (block.chainid E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= M 1461501637330902918203684832716283019655932542975)
       (<= G
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= S
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= K
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= N
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= R 1461501637330902918203684832716283019655932542975)
       (<= W 1461501637330902918203684832716283019655932542975)
       (<= Y
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (= I true)
       (= I (= G H))))
      )
      (block_9_return_function_g__43_48_0 F C1 A B D1 Z X B1 Y)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        true
      )
      (block_13_function_g__43_48_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K state_type) (L state_type) (M Int) (N tx_type) ) 
    (=>
      (and
        (block_13_function_g__43_48_0 C M A B N I F J G)
        (summary_3_function_g__43_48_0 D M A B N K G L H)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data N)) 3) 74))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data N)) 2) 38))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data N)) 1) 32))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data N)) 0) 228))
      (a!5 (>= (+ (select (balances J) M) E) 0))
      (a!6 (<= (+ (select (balances J) M) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances J) M (+ (select (balances J) M) E))))
  (and (= J I)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value N) 0)
       (= (msg.sig N) 3827312202)
       (= C 0)
       (= G F)
       (>= (tx.origin N) 0)
       (>= (tx.gasprice N) 0)
       (>= (msg.value N) 0)
       (>= (msg.sender N) 0)
       (>= (block.timestamp N) 0)
       (>= (block.number N) 0)
       (>= (block.gaslimit N) 0)
       (>= (block.difficulty N) 0)
       (>= (block.coinbase N) 0)
       (>= (block.chainid N) 0)
       (>= (block.basefee N) 0)
       (>= (bytes_tuple_accessor_length (msg.data N)) 4)
       a!5
       (>= E (msg.value N))
       (<= (tx.origin N) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender N) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase N) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= K (state_type a!7))))
      )
      (summary_4_function_g__43_48_0 D M A B N I F L H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (summary_4_function_g__43_48_0 C H A B I F D G E)
        (interface_0_C_48_0 H A B F)
        (= C 0)
      )
      (interface_0_C_48_0 H A B G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_6_function_h__47_48_0 C F A B G D E)
        (interface_0_C_48_0 F A B D)
        (= C 0)
      )
      (interface_0_C_48_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_48_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_48_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        true
      )
      (block_14_function_h__47_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_14_function_h__47_48_0 C F A B G D E)
        (and (= C 0) (= E D))
      )
      (block_15_h_46_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_15_h_46_48_0 C F A B G D E)
        true
      )
      (block_16_return_function_h__47_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_16_return_function_h__47_48_0 C F A B G D E)
        true
      )
      (summary_5_function_h__47_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        true
      )
      (block_17_function_h__47_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) ) 
    (=>
      (and
        (block_17_function_h__47_48_0 C J A B K F G)
        (summary_5_function_h__47_48_0 D J A B K H I)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 101))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 211))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 201))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 184))
      (a!5 (>= (+ (select (balances G) J) E) 0))
      (a!6 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances G) J (+ (select (balances G) J) E))))
  (and (= G F)
       a!1
       a!2
       a!3
       a!4
       (= (msg.sig K) 3100234597)
       (= C 0)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!5
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= H (state_type a!7))))
      )
      (summary_6_function_h__47_48_0 D J A B K F I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_19_C_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_19_C_48_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_20_C_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_20_C_48_0 C F A B G D E)
        true
      )
      (contract_initializer_18_C_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_21_C_48_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_21_C_48_0 C H A B I E F)
        (contract_initializer_18_C_48_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_48_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_18_C_48_0 D H A B I F G)
        (implicit_constructor_entry_21_C_48_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_48_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (summary_4_function_g__43_48_0 C H A B I F D G E)
        (interface_0_C_48_0 H A B F)
        (= C 2)
      )
      error_target_6_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_6_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
