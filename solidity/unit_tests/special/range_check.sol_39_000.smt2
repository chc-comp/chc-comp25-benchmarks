(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_43_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_53_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_47_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_50_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_49_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_constructor_6_D_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_55_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_58_D_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_45_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_44_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_54_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_41_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_40_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_51_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_entry_59_D_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_39_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_48_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_after_init_60_D_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_38_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_37_return_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_7_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_56_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_42_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |error_target_72_0| ( ) Bool)
(declare-fun |block_46_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_35_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_52_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_36__405_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_57_constructor_406_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |implicit_constructor_entry_61_D_407_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        true
      )
      (block_35_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_35_constructor_406_407_0 C F A B G D E)
        (and (= C 0) (= E D))
      )
      (block_36__405_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Bool) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C K A B L I J)
        (and (= E (tx.origin L)) (= G F) (= F 0) (= D 21) (not H) (= H (>= E G)))
      )
      (block_38_constructor_406_407_0 D K A B L I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_38_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_39_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_40_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_41_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_42_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_43_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_44_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_45_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_46_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_47_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_48_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_49_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_50_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_51_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_52_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_53_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_54_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_55_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_56_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_57_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (block_37_return_constructor_406_407_0 C F A B G D E)
        true
      )
      (summary_7_constructor_406_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool) (J Int) (K Int) (L Int) (M Bool) (N state_type) (O state_type) (P Int) (Q tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C P A B Q N O)
        (and (= M (<= J L))
     (= J (tx.origin Q))
     (= F (tx.origin Q))
     (= G 0)
     (= E 22)
     (= D C)
     (= L K)
     (= K 1461501637330902918203684832716283019655932542975)
     (= H G)
     (not M)
     (= I (>= F H)))
      )
      (block_39_constructor_406_407_0 E P A B Q N O)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Bool) (R state_type) (S state_type) (T Int) (U tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C T A B U R S)
        (and (= J (>= G I))
     (= N (<= K M))
     (= F 23)
     (= E D)
     (= D C)
     (= K (tx.origin U))
     (= I H)
     (= H 0)
     (= G (tx.origin U))
     (= P 0)
     (= O (tx.gasprice U))
     (= M L)
     (= L 1461501637330902918203684832716283019655932542975)
     (not Q)
     (= Q (>= O P)))
      )
      (block_40_constructor_406_407_0 F T A B U R S)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Bool) (V state_type) (W state_type) (X Int) (Y tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C X A B Y V W)
        (and (= O (<= L N))
     (= K (>= H J))
     (= R (>= P Q))
     (= F E)
     (= E D)
     (= D C)
     (= N M)
     (= J I)
     (= I 0)
     (= H (tx.origin Y))
     (= G 24)
     (= M 1461501637330902918203684832716283019655932542975)
     (= L (tx.origin Y))
     (= T
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= S (tx.gasprice Y))
     (= Q 0)
     (= P (tx.gasprice Y))
     (not U)
     (= U (<= S T)))
      )
      (block_41_constructor_406_407_0 G X A B Y V W)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Bool) (A1 state_type) (B1 state_type) (C1 Int) (D1 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C C1 A B D1 A1 B1)
        (and (= Z (>= W Y))
     (= L (>= I K))
     (= P (<= M O))
     (= S (>= Q R))
     (= W (msg.sender D1))
     (= G F)
     (= F E)
     (= E D)
     (= D C)
     (= K J)
     (= J 0)
     (= I (tx.origin D1))
     (= H 25)
     (= O N)
     (= N 1461501637330902918203684832716283019655932542975)
     (= M (tx.origin D1))
     (= T (tx.gasprice D1))
     (= R 0)
     (= Q (tx.gasprice D1))
     (= Y X)
     (= X 0)
     (= U
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (not Z)
     (= V (<= T U)))
      )
      (block_42_constructor_406_407_0 H C1 A B D1 A1 B1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 state_type) (G1 state_type) (H1 Int) (I1 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C H1 A B I1 F1 G1)
        (and (= E1 (<= B1 D1))
     (= M (>= J L))
     (= W (<= U V))
     (= T (>= R S))
     (= Q (<= N P))
     (= B1 (msg.sender I1))
     (= G F)
     (= F E)
     (= E D)
     (= D C)
     (= L K)
     (= K 0)
     (= J (tx.origin I1))
     (= I 26)
     (= H G)
     (= P O)
     (= O 1461501637330902918203684832716283019655932542975)
     (= N (tx.origin I1))
     (= X (msg.sender I1))
     (= S 0)
     (= R (tx.gasprice I1))
     (= Y 0)
     (= V
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= U (tx.gasprice I1))
     (= D1 C1)
     (= C1 1461501637330902918203684832716283019655932542975)
     (= Z Y)
     (not E1)
     (= A1 (>= X Z)))
      )
      (block_43_constructor_406_407_0 I H1 A B I1 F1 G1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Bool) (G1 Int) (H1 Int) (I1 Bool) (J1 state_type) (K1 state_type) (L1 Int) (M1 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C L1 A B M1 J1 K1)
        (and (= X (<= V W))
     (= U (>= S T))
     (= N (>= K M))
     (= R (<= O Q))
     (= B1 (>= Y A1))
     (= F1 (<= C1 E1))
     (= F E)
     (= E D)
     (= D C)
     (= K (tx.origin M1))
     (= J 27)
     (= I H)
     (= H G)
     (= G F)
     (= P 1461501637330902918203684832716283019655932542975)
     (= O (tx.origin M1))
     (= M L)
     (= L 0)
     (= T 0)
     (= S (tx.gasprice M1))
     (= Q P)
     (= W
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= V (tx.gasprice M1))
     (= C1 (msg.sender M1))
     (= A1 Z)
     (= Z 0)
     (= Y (msg.sender M1))
     (= H1 0)
     (= G1 (msg.value M1))
     (= E1 D1)
     (= D1 1461501637330902918203684832716283019655932542975)
     (not I1)
     (= I1 (>= G1 H1)))
      )
      (block_44_constructor_406_407_0 J L1 A B M1 J1 K1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 Bool) (K1 Int) (L1 Int) (M1 Bool) (N1 state_type) (O1 state_type) (P1 Int) (Q1 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C P1 A B Q1 N1 O1)
        (and (= S (<= P R))
     (= O (>= L N))
     (= Y (<= W X))
     (= V (>= T U))
     (= G1 (<= D1 F1))
     (= C1 (>= Z B1))
     (= J1 (>= H1 I1))
     (= F E)
     (= E D)
     (= D C)
     (= J I)
     (= I H)
     (= H G)
     (= G F)
     (= N M)
     (= M 0)
     (= L (tx.origin Q1))
     (= K 28)
     (= T (tx.gasprice Q1))
     (= R Q)
     (= Q 1461501637330902918203684832716283019655932542975)
     (= P (tx.origin Q1))
     (= X
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= W (tx.gasprice Q1))
     (= U 0)
     (= F1 E1)
     (= B1 A1)
     (= A1 0)
     (= Z (msg.sender Q1))
     (= E1 1461501637330902918203684832716283019655932542975)
     (= D1 (msg.sender Q1))
     (= L1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= K1 (msg.value Q1))
     (= I1 0)
     (= H1 (msg.value Q1))
     (not M1)
     (= M1 (<= K1 L1)))
      )
      (block_45_constructor_406_407_0 K P1 A B Q1 N1 O1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Bool) (L1 Int) (M1 Int) (N1 Bool) (O1 Int) (P1 Int) (Q1 Int) (R1 Bool) (S1 state_type) (T1 state_type) (U1 Int) (V1 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C U1 A B V1 S1 T1)
        (and (= R1 (>= O1 Q1))
     (= Z (<= X Y))
     (= P (>= M O))
     (= T (<= Q S))
     (= D1 (>= A1 C1))
     (= W (>= U V))
     (= H1 (<= E1 G1))
     (= K1 (>= I1 J1))
     (= G F)
     (= F E)
     (= E D)
     (= D C)
     (= K J)
     (= J I)
     (= I H)
     (= H G)
     (= O N)
     (= N 0)
     (= M (tx.origin V1))
     (= L 29)
     (= O1 (block.coinbase V1))
     (= S R)
     (= R 1461501637330902918203684832716283019655932542975)
     (= Q (tx.origin V1))
     (= Y
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= X (tx.gasprice V1))
     (= V 0)
     (= U (tx.gasprice V1))
     (= C1 B1)
     (= B1 0)
     (= A1 (msg.sender V1))
     (= G1 F1)
     (= F1 1461501637330902918203684832716283019655932542975)
     (= E1 (msg.sender V1))
     (= L1 (msg.value V1))
     (= J1 0)
     (= I1 (msg.value V1))
     (= Q1 P1)
     (= P1 0)
     (= M1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (not R1)
     (= N1 (<= L1 M1)))
      )
      (block_46_constructor_406_407_0 L U1 A B V1 S1 T1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Bool) (P1 Int) (Q1 Int) (R1 Int) (S1 Bool) (T1 Int) (U1 Int) (V1 Int) (W1 Bool) (X1 state_type) (Y1 state_type) (Z1 Int) (A2 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C Z1 A B A2 X1 Y1)
        (and (= W1 (<= T1 V1))
     (= E1 (>= B1 D1))
     (= A1 (<= Y Z))
     (= X (>= V W))
     (= U (<= R T))
     (= Q (>= N P))
     (= O1 (<= M1 N1))
     (= L1 (>= J1 K1))
     (= I1 (<= F1 H1))
     (= G F)
     (= F D)
     (= E 30)
     (= D C)
     (= L K)
     (= K J)
     (= J I)
     (= I H)
     (= H G)
     (= P O)
     (= O 0)
     (= N (tx.origin A2))
     (= M L)
     (= T S)
     (= S 1461501637330902918203684832716283019655932542975)
     (= R (tx.origin A2))
     (= T1 (block.coinbase A2))
     (= Y (tx.gasprice A2))
     (= W 0)
     (= V (tx.gasprice A2))
     (= D1 C1)
     (= C1 0)
     (= B1 (msg.sender A2))
     (= Z
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= H1 G1)
     (= G1 1461501637330902918203684832716283019655932542975)
     (= F1 (msg.sender A2))
     (= P1 (block.coinbase A2))
     (= K1 0)
     (= J1 (msg.value A2))
     (= Q1 0)
     (= N1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= M1 (msg.value A2))
     (= V1 U1)
     (= U1 1461501637330902918203684832716283019655932542975)
     (= R1 Q1)
     (not W1)
     (= S1 (>= P1 R1)))
      )
      (block_47_constructor_406_407_0 E Z1 A B A2 X1 Y1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Bool) (G1 Int) (H1 Int) (I1 Int) (J1 Bool) (K1 Int) (L1 Int) (M1 Bool) (N1 Int) (O1 Int) (P1 Bool) (Q1 Int) (R1 Int) (S1 Int) (T1 Bool) (U1 Int) (V1 Int) (W1 Int) (X1 Bool) (Y1 Int) (Z1 Int) (A2 Bool) (B2 state_type) (C2 state_type) (D2 Int) (E2 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C D2 A B E2 B2 C2)
        (and (= R (>= O Q))
     (= B1 (<= Z A1))
     (= Y (>= W X))
     (= V (<= S U))
     (= P1 (<= N1 O1))
     (= M1 (>= K1 L1))
     (= F1 (>= C1 E1))
     (= J1 (<= G1 I1))
     (= T1 (>= Q1 S1))
     (= X1 (<= U1 W1))
     (= F 31)
     (= E N)
     (= D C)
     (= K J)
     (= J I)
     (= I H)
     (= H G)
     (= G D)
     (= P 0)
     (= O (tx.origin E2))
     (= N M)
     (= M L)
     (= L K)
     (= T 1461501637330902918203684832716283019655932542975)
     (= S (tx.origin E2))
     (= Q P)
     (= X 0)
     (= W (tx.gasprice E2))
     (= U T)
     (= C1 (msg.sender E2))
     (= A1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= Z (tx.gasprice E2))
     (= H1 1461501637330902918203684832716283019655932542975)
     (= G1 (msg.sender E2))
     (= E1 D1)
     (= D1 0)
     (= L1 0)
     (= K1 (msg.value E2))
     (= I1 H1)
     (= O1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= N1 (msg.value E2))
     (= U1 (block.coinbase E2))
     (= S1 R1)
     (= R1 0)
     (= Q1 (block.coinbase E2))
     (= Z1 0)
     (= Y1 (block.timestamp E2))
     (= W1 V1)
     (= V1 1461501637330902918203684832716283019655932542975)
     (not A2)
     (= A2 (>= Y1 Z1)))
      )
      (block_48_constructor_406_407_0 F D2 A B E2 B2 C2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 Int) (K1 Bool) (L1 Int) (M1 Int) (N1 Bool) (O1 Int) (P1 Int) (Q1 Bool) (R1 Int) (S1 Int) (T1 Int) (U1 Bool) (V1 Int) (W1 Int) (X1 Int) (Y1 Bool) (Z1 Int) (A2 Int) (B2 Bool) (C2 Int) (D2 Int) (E2 Bool) (F2 state_type) (G2 state_type) (H2 Int) (I2 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C H2 A B I2 F2 G2)
        (and (= W (<= T V))
     (= S (>= P R))
     (= C1 (<= A1 B1))
     (= Z (>= X Y))
     (= K1 (<= H1 J1))
     (= G1 (>= D1 F1))
     (= Q1 (<= O1 P1))
     (= N1 (>= L1 M1))
     (= Y1 (<= V1 X1))
     (= U1 (>= R1 T1))
     (= B2 (>= Z1 A2))
     (= F E)
     (= E O)
     (= D C)
     (= J I)
     (= I H)
     (= H D)
     (= G 32)
     (= O N)
     (= N M)
     (= M L)
     (= L K)
     (= K J)
     (= T (tx.origin I2))
     (= R Q)
     (= Q 0)
     (= P (tx.origin I2))
     (= X (tx.gasprice I2))
     (= V U)
     (= U 1461501637330902918203684832716283019655932542975)
     (= B1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= A1 (tx.gasprice I2))
     (= Y 0)
     (= F1 E1)
     (= E1 0)
     (= D1 (msg.sender I2))
     (= L1 (msg.value I2))
     (= J1 I1)
     (= I1 1461501637330902918203684832716283019655932542975)
     (= H1 (msg.sender I2))
     (= P1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= O1 (msg.value I2))
     (= M1 0)
     (= X1 W1)
     (= T1 S1)
     (= S1 0)
     (= R1 (block.coinbase I2))
     (= W1 1461501637330902918203684832716283019655932542975)
     (= V1 (block.coinbase I2))
     (= D2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= C2 (block.timestamp I2))
     (= A2 0)
     (= Z1 (block.timestamp I2))
     (not E2)
     (= E2 (<= C2 D2)))
      )
      (block_49_constructor_406_407_0 G H2 A B I2 F2 G2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Bool) (P1 Int) (Q1 Int) (R1 Bool) (S1 Int) (T1 Int) (U1 Int) (V1 Bool) (W1 Int) (X1 Int) (Y1 Int) (Z1 Bool) (A2 Int) (B2 Int) (C2 Bool) (D2 Int) (E2 Int) (F2 Bool) (G2 Int) (H2 Int) (I2 Bool) (J2 state_type) (K2 state_type) (L2 Int) (M2 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C L2 A B M2 J2 K2)
        (and (= X (<= U W))
     (= A1 (>= Y Z))
     (= T (>= Q S))
     (= D1 (<= B1 C1))
     (= L1 (<= I1 K1))
     (= H1 (>= E1 G1))
     (= O1 (>= M1 N1))
     (= R1 (<= P1 Q1))
     (= Z1 (<= W1 Y1))
     (= V1 (>= S1 U1))
     (= C2 (>= A2 B2))
     (= F2 (<= D2 E2))
     (= F E)
     (= E P)
     (= D C)
     (= J I)
     (= I D)
     (= H 33)
     (= G F)
     (= N M)
     (= M L)
     (= L K)
     (= K J)
     (= S R)
     (= R 0)
     (= Q (tx.origin M2))
     (= P O)
     (= O N)
     (= W V)
     (= V 1461501637330902918203684832716283019655932542975)
     (= U (tx.origin M2))
     (= B1 (tx.gasprice M2))
     (= Z 0)
     (= Y (tx.gasprice M2))
     (= F1 0)
     (= E1 (msg.sender M2))
     (= C1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= K1 J1)
     (= J1 1461501637330902918203684832716283019655932542975)
     (= I1 (msg.sender M2))
     (= G1 F1)
     (= P1 (msg.value M2))
     (= N1 0)
     (= M1 (msg.value M2))
     (= T1 0)
     (= S1 (block.coinbase M2))
     (= Q1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= B2 0)
     (= X1 1461501637330902918203684832716283019655932542975)
     (= W1 (block.coinbase M2))
     (= U1 T1)
     (= A2 (block.timestamp M2))
     (= Y1 X1)
     (= H2 0)
     (= G2 (block.chainid M2))
     (= E2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= D2 (block.timestamp M2))
     (not I2)
     (= I2 (>= G2 H2)))
      )
      (block_50_constructor_406_407_0 H L2 A B M2 J2 K2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 Int) (M1 Bool) (N1 Int) (O1 Int) (P1 Bool) (Q1 Int) (R1 Int) (S1 Bool) (T1 Int) (U1 Int) (V1 Int) (W1 Bool) (X1 Int) (Y1 Int) (Z1 Int) (A2 Bool) (B2 Int) (C2 Int) (D2 Bool) (E2 Int) (F2 Int) (G2 Bool) (H2 Int) (I2 Int) (J2 Bool) (K2 Int) (L2 Int) (M2 Bool) (N2 state_type) (O2 state_type) (P2 Int) (Q2 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C P2 A B Q2 N2 O2)
        (and (= W1 (>= T1 V1))
     (= M1 (<= J1 L1))
     (= I1 (>= F1 H1))
     (= Y (<= V X))
     (= B1 (>= Z A1))
     (= E1 (<= C1 D1))
     (= U (>= R T))
     (= A2 (<= X1 Z1))
     (= P1 (>= N1 O1))
     (= S1 (<= Q1 R1))
     (= D2 (>= B2 C2))
     (= G2 (<= E2 F2))
     (= J2 (>= H2 I2))
     (= F E)
     (= E Q)
     (= D C)
     (= J D)
     (= I 34)
     (= H G)
     (= G F)
     (= N M)
     (= M L)
     (= L K)
     (= K J)
     (= R (tx.origin Q2))
     (= Q P)
     (= P O)
     (= O N)
     (= W 1461501637330902918203684832716283019655932542975)
     (= V (tx.origin Q2))
     (= T S)
     (= S 0)
     (= A1 0)
     (= Z (tx.gasprice Q2))
     (= X W)
     (= F1 (msg.sender Q2))
     (= D1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= C1 (tx.gasprice Q2))
     (= J1 (msg.sender Q2))
     (= H1 G1)
     (= G1 0)
     (= O1 0)
     (= N1 (msg.value Q2))
     (= L1 K1)
     (= K1 1461501637330902918203684832716283019655932542975)
     (= T1 (block.coinbase Q2))
     (= R1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= Q1 (msg.value Q2))
     (= X1 (block.coinbase Q2))
     (= V1 U1)
     (= U1 0)
     (= F2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= B2 (block.timestamp Q2))
     (= Z1 Y1)
     (= Y1 1461501637330902918203684832716283019655932542975)
     (= E2 (block.timestamp Q2))
     (= C2 0)
     (= L2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= K2 (block.chainid Q2))
     (= I2 0)
     (= H2 (block.chainid Q2))
     (not M2)
     (= M2 (<= K2 L2)))
      )
      (block_51_constructor_406_407_0 I P2 A B Q2 N2 O2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 Bool) (G1 Int) (H1 Int) (I1 Int) (J1 Bool) (K1 Int) (L1 Int) (M1 Int) (N1 Bool) (O1 Int) (P1 Int) (Q1 Bool) (R1 Int) (S1 Int) (T1 Bool) (U1 Int) (V1 Int) (W1 Int) (X1 Bool) (Y1 Int) (Z1 Int) (A2 Int) (B2 Bool) (C2 Int) (D2 Int) (E2 Bool) (F2 Int) (G2 Int) (H2 Bool) (I2 Int) (J2 Int) (K2 Bool) (L2 Int) (M2 Int) (N2 Bool) (O2 Int) (P2 Int) (Q2 Bool) (R2 state_type) (S2 state_type) (T2 Int) (U2 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C T2 A B U2 R2 S2)
        (and (= B2 (<= Y1 A2))
     (= Q2 (>= O2 P2))
     (= Q1 (>= O1 P1))
     (= N1 (<= K1 M1))
     (= Z (<= W Y))
     (= C1 (>= A1 B1))
     (= F1 (<= D1 E1))
     (= V (>= S U))
     (= J1 (>= G1 I1))
     (= E2 (>= C2 D2))
     (= T1 (<= R1 S1))
     (= H2 (<= F2 G2))
     (= K2 (>= I2 J2))
     (= N2 (<= L2 M2))
     (= F E)
     (= E R)
     (= D C)
     (= J 35)
     (= I H)
     (= H G)
     (= G F)
     (= N M)
     (= M L)
     (= L K)
     (= K D)
     (= R Q)
     (= Q P)
     (= P O)
     (= O N)
     (= U T)
     (= T 0)
     (= S (tx.origin U2))
     (= A1 (tx.gasprice U2))
     (= Y X)
     (= X 1461501637330902918203684832716283019655932542975)
     (= W (tx.origin U2))
     (= E1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= D1 (tx.gasprice U2))
     (= B1 0)
     (= I1 H1)
     (= H1 0)
     (= G1 (msg.sender U2))
     (= M1 L1)
     (= L1 1461501637330902918203684832716283019655932542975)
     (= K1 (msg.sender U2))
     (= S1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= R1 (msg.value U2))
     (= P1 0)
     (= O1 (msg.value U2))
     (= W1 V1)
     (= V1 0)
     (= U1 (block.coinbase U2))
     (= A2 Z1)
     (= Z1 1461501637330902918203684832716283019655932542975)
     (= Y1 (block.coinbase U2))
     (= J2 0)
     (= F2 (block.timestamp U2))
     (= D2 0)
     (= C2 (block.timestamp U2))
     (= I2 (block.chainid U2))
     (= G2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= P2 0)
     (= O2 (block.difficulty U2))
     (= M2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= L2 (block.chainid U2))
     (not Q2)
     (= X1 (>= U1 W1)))
      )
      (block_52_constructor_406_407_0 J T2 A B U2 R2 S2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 Int) (K1 Bool) (L1 Int) (M1 Int) (N1 Int) (O1 Bool) (P1 Int) (Q1 Int) (R1 Bool) (S1 Int) (T1 Int) (U1 Bool) (V1 Int) (W1 Int) (X1 Int) (Y1 Bool) (Z1 Int) (A2 Int) (B2 Int) (C2 Bool) (D2 Int) (E2 Int) (F2 Bool) (G2 Int) (H2 Int) (I2 Bool) (J2 Int) (K2 Int) (L2 Bool) (M2 Int) (N2 Int) (O2 Bool) (P2 Int) (Q2 Int) (R2 Bool) (S2 Int) (T2 Int) (U2 Bool) (V2 state_type) (W2 state_type) (X2 Int) (Y2 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C X2 A B Y2 V2 W2)
        (and (= U2 (<= S2 T2))
     (= U1 (<= S1 T1))
     (= R1 (>= P1 Q1))
     (= A1 (<= X Z))
     (= D1 (>= B1 C1))
     (= G1 (<= E1 F1))
     (= W (>= T V))
     (= K1 (>= H1 J1))
     (= C2 (<= Z1 B2))
     (= Y1 (>= V1 X1))
     (= O1 (<= L1 N1))
     (= I2 (<= G2 H2))
     (= L2 (>= J2 K2))
     (= O2 (<= M2 N2))
     (= R2 (>= P2 Q2))
     (= F E)
     (= E S)
     (= D C)
     (= J I)
     (= I H)
     (= H G)
     (= G F)
     (= N M)
     (= M L)
     (= L D)
     (= K 36)
     (= R Q)
     (= Q P)
     (= P O)
     (= O N)
     (= V U)
     (= U 0)
     (= T (tx.origin Y2))
     (= S R)
     (= Z Y)
     (= Y 1461501637330902918203684832716283019655932542975)
     (= X (tx.origin Y2))
     (= E1 (tx.gasprice Y2))
     (= C1 0)
     (= B1 (tx.gasprice Y2))
     (= J1 I1)
     (= I1 0)
     (= H1 (msg.sender Y2))
     (= F1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= N1 M1)
     (= M1 1461501637330902918203684832716283019655932542975)
     (= L1 (msg.sender Y2))
     (= Q1 0)
     (= P1 (msg.value Y2))
     (= W1 0)
     (= V1 (block.coinbase Y2))
     (= T1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= S1 (msg.value Y2))
     (= B2 A2)
     (= A2 1461501637330902918203684832716283019655932542975)
     (= Z1 (block.coinbase Y2))
     (= X1 W1)
     (= E2 0)
     (= D2 (block.timestamp Y2))
     (= N2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= J2 (block.chainid Y2))
     (= H2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= G2 (block.timestamp Y2))
     (= M2 (block.chainid Y2))
     (= K2 0)
     (= T2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= S2 (block.difficulty Y2))
     (= Q2 0)
     (= P2 (block.difficulty Y2))
     (not U2)
     (= F2 (>= D2 E2)))
      )
      (block_53_constructor_406_407_0 K X2 A B Y2 V2 W2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Int) (P1 Bool) (Q1 Int) (R1 Int) (S1 Bool) (T1 Int) (U1 Int) (V1 Bool) (W1 Int) (X1 Int) (Y1 Int) (Z1 Bool) (A2 Int) (B2 Int) (C2 Int) (D2 Bool) (E2 Int) (F2 Int) (G2 Bool) (H2 Int) (I2 Int) (J2 Bool) (K2 Int) (L2 Int) (M2 Bool) (N2 Int) (O2 Int) (P2 Bool) (Q2 Int) (R2 Int) (S2 Bool) (T2 Int) (U2 Int) (V2 Bool) (W2 Int) (X2 Int) (Y2 Bool) (Z2 state_type) (A3 state_type) (B3 Int) (C3 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C B3 A B C3 Z2 A3)
        (and (= Y2 (>= W2 X2))
     (= B1 (<= Y A1))
     (= V1 (<= T1 U1))
     (= E1 (>= C1 D1))
     (= H1 (<= F1 G1))
     (= X (>= U W))
     (= L1 (>= I1 K1))
     (= P1 (<= M1 O1))
     (= G2 (>= E2 F2))
     (= Z1 (>= W1 Y1))
     (= S1 (>= Q1 R1))
     (= M2 (>= K2 L2))
     (= D2 (<= A2 C2))
     (= P2 (<= N2 O2))
     (= S2 (>= Q2 R2))
     (= V2 (<= T2 U2))
     (= F E)
     (= E T)
     (= D C)
     (= J I)
     (= I H)
     (= H G)
     (= G F)
     (= N M)
     (= M D)
     (= L 37)
     (= K J)
     (= R Q)
     (= Q P)
     (= P O)
     (= O N)
     (= V 0)
     (= U (tx.origin C3))
     (= T S)
     (= S R)
     (= Z 1461501637330902918203684832716283019655932542975)
     (= Y (tx.origin C3))
     (= W V)
     (= D1 0)
     (= C1 (tx.gasprice C3))
     (= A1 Z)
     (= I1 (msg.sender C3))
     (= G1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= F1 (tx.gasprice C3))
     (= N1 1461501637330902918203684832716283019655932542975)
     (= M1 (msg.sender C3))
     (= K1 J1)
     (= J1 0)
     (= R1 0)
     (= Q1 (msg.value C3))
     (= O1 N1)
     (= U1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= T1 (msg.value C3))
     (= A2 (block.coinbase C3))
     (= Y1 X1)
     (= X1 0)
     (= W1 (block.coinbase C3))
     (= F2 0)
     (= E2 (block.timestamp C3))
     (= C2 B2)
     (= B2 1461501637330902918203684832716283019655932542975)
     (= I2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= H2 (block.timestamp C3))
     (= R2 0)
     (= N2 (block.chainid C3))
     (= L2 0)
     (= K2 (block.chainid C3))
     (= Q2 (block.difficulty C3))
     (= O2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= X2 0)
     (= W2 (block.gaslimit C3))
     (= U2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= T2 (block.difficulty C3))
     (not Y2)
     (= J2 (<= H2 I2)))
      )
      (block_54_constructor_406_407_0 L B3 A B C3 Z2 A3)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 Bool) (G1 Int) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 Int) (M1 Bool) (N1 Int) (O1 Int) (P1 Int) (Q1 Bool) (R1 Int) (S1 Int) (T1 Bool) (U1 Int) (V1 Int) (W1 Bool) (X1 Int) (Y1 Int) (Z1 Int) (A2 Bool) (B2 Int) (C2 Int) (D2 Int) (E2 Bool) (F2 Int) (G2 Int) (H2 Bool) (I2 Int) (J2 Int) (K2 Bool) (L2 Int) (M2 Int) (N2 Bool) (O2 Int) (P2 Int) (Q2 Bool) (R2 Int) (S2 Int) (T2 Bool) (U2 Int) (V2 Int) (W2 Bool) (X2 Int) (Y2 Int) (Z2 Bool) (A3 Int) (B3 Int) (C3 Bool) (D3 state_type) (E3 state_type) (F3 Int) (G3 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C F3 A B G3 D3 E3)
        (and (= C3 (<= A3 B3))
     (= C1 (<= Z B1))
     (= F1 (>= D1 E1))
     (= I1 (<= G1 H1))
     (= Y (>= V X))
     (= M1 (>= J1 L1))
     (= Q1 (<= N1 P1))
     (= T1 (>= R1 S1))
     (= K2 (<= I2 J2))
     (= A2 (>= X1 Z1))
     (= W1 (<= U1 V1))
     (= Q2 (<= O2 P2))
     (= E2 (<= B2 D2))
     (= H2 (>= F2 G2))
     (= T2 (>= R2 S2))
     (= W2 (<= U2 V2))
     (= Z2 (>= X2 Y2))
     (= F E)
     (= E U)
     (= D C)
     (= J I)
     (= I H)
     (= H G)
     (= G F)
     (= N D)
     (= M 38)
     (= L K)
     (= K J)
     (= R Q)
     (= Q P)
     (= P O)
     (= O N)
     (= V (tx.origin G3))
     (= U T)
     (= T S)
     (= S R)
     (= Z (tx.origin G3))
     (= X W)
     (= W 0)
     (= D1 (tx.gasprice G3))
     (= B1 A1)
     (= A1 1461501637330902918203684832716283019655932542975)
     (= H1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= G1 (tx.gasprice G3))
     (= E1 0)
     (= L1 K1)
     (= K1 0)
     (= J1 (msg.sender G3))
     (= R1 (msg.value G3))
     (= P1 O1)
     (= O1 1461501637330902918203684832716283019655932542975)
     (= N1 (msg.sender G3))
     (= V1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= U1 (msg.value G3))
     (= S1 0)
     (= Z1 Y1)
     (= Y1 0)
     (= X1 (block.coinbase G3))
     (= D2 C2)
     (= C2 1461501637330902918203684832716283019655932542975)
     (= B2 (block.coinbase G3))
     (= J2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= I2 (block.timestamp G3))
     (= G2 0)
     (= F2 (block.timestamp G3))
     (= M2 0)
     (= L2 (block.chainid G3))
     (= V2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= R2 (block.difficulty G3))
     (= P2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= O2 (block.chainid G3))
     (= U2 (block.difficulty G3))
     (= S2 0)
     (= B3
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= A3 (block.gaslimit G3))
     (= Y2 0)
     (= X2 (block.gaslimit G3))
     (not C3)
     (= N2 (>= L2 M2)))
      )
      (block_55_constructor_406_407_0 M F3 A B G3 D3 E3)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 Bool) (K1 Int) (L1 Int) (M1 Int) (N1 Bool) (O1 Int) (P1 Int) (Q1 Int) (R1 Bool) (S1 Int) (T1 Int) (U1 Bool) (V1 Int) (W1 Int) (X1 Bool) (Y1 Int) (Z1 Int) (A2 Int) (B2 Bool) (C2 Int) (D2 Int) (E2 Int) (F2 Bool) (G2 Int) (H2 Int) (I2 Bool) (J2 Int) (K2 Int) (L2 Bool) (M2 Int) (N2 Int) (O2 Bool) (P2 Int) (Q2 Int) (R2 Bool) (S2 Int) (T2 Int) (U2 Bool) (V2 Int) (W2 Int) (X2 Bool) (Y2 Int) (Z2 Int) (A3 Bool) (B3 Int) (C3 Int) (D3 Bool) (E3 Int) (F3 Int) (G3 Bool) (H3 state_type) (I3 state_type) (J3 Int) (K3 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C J3 A B K3 H3 I3)
        (and (= G3 (>= E3 F3))
     (= D1 (<= A1 C1))
     (= G1 (>= E1 F1))
     (= J1 (<= H1 I1))
     (= Z (>= W Y))
     (= N1 (>= K1 M1))
     (= R1 (<= O1 Q1))
     (= U1 (>= S1 T1))
     (= X1 (<= V1 W1))
     (= O2 (>= M2 N2))
     (= U2 (>= S2 T2))
     (= B2 (>= Y1 A2))
     (= F2 (<= C2 E2))
     (= I2 (>= G2 H2))
     (= L2 (<= J2 K2))
     (= X2 (<= V2 W2))
     (= A3 (>= Y2 Z2))
     (= D3 (<= B3 C3))
     (= F E)
     (= E V)
     (= D C)
     (= J I)
     (= I H)
     (= H G)
     (= G F)
     (= N 39)
     (= M L)
     (= L K)
     (= K J)
     (= R Q)
     (= Q P)
     (= P O)
     (= O D)
     (= V U)
     (= U T)
     (= T S)
     (= S R)
     (= Y X)
     (= X 0)
     (= W (tx.origin K3))
     (= C1 B1)
     (= B1 1461501637330902918203684832716283019655932542975)
     (= A1 (tx.origin K3))
     (= H1 (tx.gasprice K3))
     (= F1 0)
     (= E1 (tx.gasprice K3))
     (= L1 0)
     (= K1 (msg.sender K3))
     (= I1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= Q1 P1)
     (= P1 1461501637330902918203684832716283019655932542975)
     (= O1 (msg.sender K3))
     (= M1 L1)
     (= V1 (msg.value K3))
     (= T1 0)
     (= S1 (msg.value K3))
     (= Z1 0)
     (= Y1 (block.coinbase K3))
     (= W1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= D2 1461501637330902918203684832716283019655932542975)
     (= C2 (block.coinbase K3))
     (= A2 Z1)
     (= H2 0)
     (= G2 (block.timestamp K3))
     (= E2 D2)
     (= N2 0)
     (= M2 (block.chainid K3))
     (= K2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= J2 (block.timestamp K3))
     (= Q2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= P2 (block.chainid K3))
     (= Z2 0)
     (= V2 (block.difficulty K3))
     (= T2 0)
     (= S2 (block.difficulty K3))
     (= Y2 (block.gaslimit K3))
     (= W2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= F3 0)
     (= E3 (block.number K3))
     (= C3
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= B3 (block.gaslimit K3))
     (not G3)
     (= R2 (<= P2 Q2)))
      )
      (block_56_constructor_406_407_0 N J3 A B K3 H3 I3)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Bool) (L1 Int) (M1 Int) (N1 Int) (O1 Bool) (P1 Int) (Q1 Int) (R1 Int) (S1 Bool) (T1 Int) (U1 Int) (V1 Bool) (W1 Int) (X1 Int) (Y1 Bool) (Z1 Int) (A2 Int) (B2 Int) (C2 Bool) (D2 Int) (E2 Int) (F2 Int) (G2 Bool) (H2 Int) (I2 Int) (J2 Bool) (K2 Int) (L2 Int) (M2 Bool) (N2 Int) (O2 Int) (P2 Bool) (Q2 Int) (R2 Int) (S2 Bool) (T2 Int) (U2 Int) (V2 Bool) (W2 Int) (X2 Int) (Y2 Bool) (Z2 Int) (A3 Int) (B3 Bool) (C3 Int) (D3 Int) (E3 Bool) (F3 Int) (G3 Int) (H3 Bool) (I3 Int) (J3 Int) (K3 Bool) (L3 state_type) (M3 state_type) (N3 Int) (O3 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C N3 A B O3 L3 M3)
        (and (= K3 (<= I3 J3))
     (= E1 (<= B1 D1))
     (= H1 (>= F1 G1))
     (= K1 (<= I1 J1))
     (= G2 (<= D2 F2))
     (= A1 (>= X Z))
     (= C2 (>= Z1 B2))
     (= O1 (>= L1 N1))
     (= S1 (<= P1 R1))
     (= V1 (>= T1 U1))
     (= Y1 (<= W1 X1))
     (= S2 (<= Q2 R2))
     (= Y2 (<= W2 X2))
     (= J2 (>= H2 I2))
     (= M2 (<= K2 L2))
     (= P2 (>= N2 O2))
     (= B3 (>= Z2 A3))
     (= E3 (<= C3 D3))
     (= H3 (>= F3 G3))
     (= F E)
     (= E W)
     (= D C)
     (= J I)
     (= I H)
     (= H G)
     (= G F)
     (= N M)
     (= M L)
     (= L K)
     (= K J)
     (= R Q)
     (= Q O)
     (= P 40)
     (= O D)
     (= V U)
     (= U T)
     (= T S)
     (= S R)
     (= Z Y)
     (= Y 0)
     (= X (tx.origin O3))
     (= W V)
     (= D1 C1)
     (= C1 1461501637330902918203684832716283019655932542975)
     (= B1 (tx.origin O3))
     (= G1 0)
     (= F1 (tx.gasprice O3))
     (= L1 (msg.sender O3))
     (= J1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= I1 (tx.gasprice O3))
     (= P1 (msg.sender O3))
     (= N1 M1)
     (= M1 0)
     (= U1 0)
     (= T1 (msg.value O3))
     (= R1 Q1)
     (= Q1 1461501637330902918203684832716283019655932542975)
     (= Z1 (block.coinbase O3))
     (= X1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= W1 (msg.value O3))
     (= D2 (block.coinbase O3))
     (= B2 A2)
     (= A2 0)
     (= H2 (block.timestamp O3))
     (= F2 E2)
     (= E2 1461501637330902918203684832716283019655932542975)
     (= L2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= K2 (block.timestamp O3))
     (= I2 0)
     (= R2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= Q2 (block.chainid O3))
     (= O2 0)
     (= N2 (block.chainid O3))
     (= U2 0)
     (= T2 (block.difficulty O3))
     (= D3
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= Z2 (block.gaslimit O3))
     (= X2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= W2 (block.difficulty O3))
     (= C3 (block.gaslimit O3))
     (= A3 0)
     (= J3
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= I3 (block.number O3))
     (= G3 0)
     (= F3 (block.number O3))
     (not K3)
     (= V2 (>= T2 U2)))
      )
      (block_57_constructor_406_407_0 P N3 A B O3 L3 M3)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Bool) (L1 Int) (M1 Int) (N1 Int) (O1 Bool) (P1 Int) (Q1 Int) (R1 Int) (S1 Bool) (T1 Int) (U1 Int) (V1 Bool) (W1 Int) (X1 Int) (Y1 Bool) (Z1 Int) (A2 Int) (B2 Int) (C2 Bool) (D2 Int) (E2 Int) (F2 Int) (G2 Bool) (H2 Int) (I2 Int) (J2 Bool) (K2 Int) (L2 Int) (M2 Bool) (N2 Int) (O2 Int) (P2 Bool) (Q2 Int) (R2 Int) (S2 Bool) (T2 Int) (U2 Int) (V2 Bool) (W2 Int) (X2 Int) (Y2 Bool) (Z2 Int) (A3 Int) (B3 Bool) (C3 Int) (D3 Int) (E3 Bool) (F3 Int) (G3 Int) (H3 Bool) (I3 Int) (J3 Int) (K3 Bool) (L3 state_type) (M3 state_type) (N3 Int) (O3 tx_type) ) 
    (=>
      (and
        (block_36__405_407_0 C N3 A B O3 L3 M3)
        (and (= K3 (<= I3 J3))
     (= E1 (<= B1 D1))
     (= H1 (>= F1 G1))
     (= K1 (<= I1 J1))
     (= G2 (<= D2 F2))
     (= A1 (>= X Z))
     (= C2 (>= Z1 B2))
     (= O1 (>= L1 N1))
     (= S1 (<= P1 R1))
     (= V1 (>= T1 U1))
     (= Y1 (<= W1 X1))
     (= S2 (<= Q2 R2))
     (= Y2 (<= W2 X2))
     (= J2 (>= H2 I2))
     (= M2 (<= K2 L2))
     (= P2 (>= N2 O2))
     (= B3 (>= Z2 A3))
     (= E3 (<= C3 D3))
     (= H3 (>= F3 G3))
     (= F E)
     (= E W)
     (= D C)
     (= J I)
     (= I H)
     (= H G)
     (= G F)
     (= N M)
     (= M L)
     (= L K)
     (= K J)
     (= R Q)
     (= Q O)
     (= P N)
     (= O D)
     (= V U)
     (= U T)
     (= T S)
     (= S R)
     (= Z Y)
     (= Y 0)
     (= X (tx.origin O3))
     (= W V)
     (= D1 C1)
     (= C1 1461501637330902918203684832716283019655932542975)
     (= B1 (tx.origin O3))
     (= G1 0)
     (= F1 (tx.gasprice O3))
     (= L1 (msg.sender O3))
     (= J1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= I1 (tx.gasprice O3))
     (= P1 (msg.sender O3))
     (= N1 M1)
     (= M1 0)
     (= U1 0)
     (= T1 (msg.value O3))
     (= R1 Q1)
     (= Q1 1461501637330902918203684832716283019655932542975)
     (= Z1 (block.coinbase O3))
     (= X1
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= W1 (msg.value O3))
     (= D2 (block.coinbase O3))
     (= B2 A2)
     (= A2 0)
     (= H2 (block.timestamp O3))
     (= F2 E2)
     (= E2 1461501637330902918203684832716283019655932542975)
     (= L2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= K2 (block.timestamp O3))
     (= I2 0)
     (= R2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= Q2 (block.chainid O3))
     (= O2 0)
     (= N2 (block.chainid O3))
     (= U2 0)
     (= T2 (block.difficulty O3))
     (= D3
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= Z2 (block.gaslimit O3))
     (= X2
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= W2 (block.difficulty O3))
     (= C3 (block.gaslimit O3))
     (= A3 0)
     (= J3
        115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= I3 (block.number O3))
     (= G3 0)
     (= F3 (block.number O3))
     (= V2 (>= T2 U2)))
      )
      (block_37_return_constructor_406_407_0 P N3 A B O3 L3 M3)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_59_D_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_59_D_407_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_60_D_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_60_D_407_0 C H A B I E F)
        (summary_7_constructor_406_407_0 D H A B I F G)
        (not (<= D 0))
      )
      (contract_initializer_58_D_407_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (summary_7_constructor_406_407_0 D H A B I F G)
        (contract_initializer_after_init_60_D_407_0 C H A B I E F)
        (= D 0)
      )
      (contract_initializer_58_D_407_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_61_D_407_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_61_D_407_0 C H A B I E F)
        (contract_initializer_58_D_407_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_6_D_407_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_58_D_407_0 D H A B I F G)
        (implicit_constructor_entry_61_D_407_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_6_D_407_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_6_D_407_0 C F A B G D E)
        (and (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= C 32))
      )
      error_target_72_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_72_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
