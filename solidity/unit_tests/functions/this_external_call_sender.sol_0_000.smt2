(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_24__10_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |implicit_constructor_entry_29_C_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_10_return_test_20_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_13_function_g__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_9_test_62_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |interface_0_C_70_0| ( Int abi_type crypto_type state_type Int ) Bool)
(declare-fun |block_15_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_6_function_g__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_4_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_17_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_7_function_g__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_18_function_g__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_14_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_8_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_5_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |contract_initializer_26_C_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |contract_initializer_after_init_28_C_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_3_constructor_11_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_20_return_g_20_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_25_return_constructor_11_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_19_g_68_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_12_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |error_target_9_0| ( ) Bool)
(declare-fun |block_11_return_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |summary_constructor_2_C_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_22_function_g__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_23_constructor_11_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |contract_initializer_entry_27_C_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_21_return_function_g__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |block_16_function_test__63_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        true
      )
      (block_8_function_test__63_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_8_function_test__63_70_0 C H A B I F D G E)
        (and (= C 0) (= E D) (= G F))
      )
      (block_9_test_62_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M Int) (N state_type) (O state_type) (P Int) (Q tx_type) ) 
    (=>
      (and
        (block_9_test_62_70_0 C P A B Q N K O L)
        (and (= F (msg.sender Q))
     (= E L)
     (= D 1)
     (= G F)
     (= I (msg.sender Q))
     (= H M)
     (= M G)
     (>= F 0)
     (>= E 0)
     (>= G 0)
     (>= I 0)
     (>= H 0)
     (<= F 1461501637330902918203684832716283019655932542975)
     (<= E 1461501637330902918203684832716283019655932542975)
     (<= G 1461501637330902918203684832716283019655932542975)
     (<= I 1461501637330902918203684832716283019655932542975)
     (<= H 1461501637330902918203684832716283019655932542975)
     (not J)
     (= J (= H I)))
      )
      (block_12_function_test__63_70_0 D P A B Q N K O M)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_12_function_test__63_70_0 C H A B I F D G E)
        true
      )
      (summary_4_function_test__63_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Int) (M Int) (N Int) (O Int) (P Int) (Q state_type) (R state_type) (S state_type) (T Int) (U tx_type) (V tx_type) (W tx_type) ) 
    (=>
      (and
        (block_9_test_62_70_0 C T A B U Q M R N)
        (summary_13_function_g__69_70_0 E L A B V R O S P)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data V)) 3) 142))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data V)) 2) 155))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data V)) 1) 23))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data V)) 0) 226)))
  (and (= K (= I J))
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin V) (tx.origin U))
       (= (msg.value V) 0)
       (= (msg.sig V) 3793197966)
       (= (msg.sender V) T)
       (= I O)
       (= F N)
       (= D C)
       (= L T)
       (= J (msg.sender U))
       (= H G)
       (= G (msg.sender U))
       (= O H)
       (>= (tx.origin V) 0)
       (>= (tx.gasprice V) 0)
       (>= (msg.value V) 0)
       (>= (msg.sender V) 0)
       (>= (block.timestamp V) 0)
       (>= (block.number V) 0)
       (>= (block.gaslimit V) 0)
       (>= (block.difficulty V) 0)
       (>= (block.coinbase V) 0)
       (>= (block.chainid V) 0)
       (>= (block.basefee V) 0)
       (>= (bytes_tuple_accessor_length (msg.data V)) 4)
       (>= I 0)
       (>= F 0)
       (>= J 0)
       (>= H 0)
       (>= G 0)
       (<= (tx.origin V) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice V)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value V)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender V) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp V)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number V)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit V)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty V)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase V) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid V)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee V)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= I 1461501637330902918203684832716283019655932542975)
       (not (<= E 0))
       (<= F 1461501637330902918203684832716283019655932542975)
       (<= J 1461501637330902918203684832716283019655932542975)
       (<= H 1461501637330902918203684832716283019655932542975)
       (<= G 1461501637330902918203684832716283019655932542975)
       (= U W)))
      )
      (summary_4_function_test__63_70_0 E T A B U Q M S P)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_14_function_test__63_70_0 C H A B I F D G E)
        true
      )
      (summary_4_function_test__63_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_15_function_test__63_70_0 C H A B I F D G E)
        true
      )
      (summary_4_function_test__63_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_16_function_test__63_70_0 C H A B I F D G E)
        true
      )
      (summary_4_function_test__63_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_10_return_test_20_70_0 C H A B I F D G E)
        true
      )
      (summary_4_function_test__63_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (summary_6_function_g__69_70_0 C H A B I F D G E)
        true
      )
      (summary_13_function_g__69_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V state_type) (W state_type) (X state_type) (Y Int) (Z tx_type) (A1 tx_type) (B1 tx_type) ) 
    (=>
      (and
        (block_9_test_62_70_0 C Y A B Z V R W S)
        (summary_13_function_g__69_70_0 E M A B A1 W T X U)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data A1)) 3) 142))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data A1)) 2) 155))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data A1)) 1) 23))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data A1)) 0) 226)))
  (and (= L (= J K))
       (= Q (= N P))
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin A1) (tx.origin Z))
       (= (msg.value A1) 0)
       (= (msg.sig A1) 3793197966)
       (= (msg.sender A1) Y)
       (= G S)
       (= F 2)
       (= E 0)
       (= D C)
       (= N U)
       (= J T)
       (= K (msg.sender Z))
       (= H (msg.sender Z))
       (= I H)
       (= P O)
       (= O Y)
       (= M Y)
       (= T I)
       (>= (tx.origin A1) 0)
       (>= (tx.gasprice A1) 0)
       (>= (msg.value A1) 0)
       (>= (msg.sender A1) 0)
       (>= (block.timestamp A1) 0)
       (>= (block.number A1) 0)
       (>= (block.gaslimit A1) 0)
       (>= (block.difficulty A1) 0)
       (>= (block.coinbase A1) 0)
       (>= (block.chainid A1) 0)
       (>= (block.basefee A1) 0)
       (>= (bytes_tuple_accessor_length (msg.data A1)) 4)
       (>= G 0)
       (>= N 0)
       (>= J 0)
       (>= K 0)
       (>= H 0)
       (>= I 0)
       (>= P 0)
       (<= (tx.origin A1) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice A1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value A1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender A1) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp A1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number A1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit A1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty A1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase A1)
           1461501637330902918203684832716283019655932542975)
       (<= (block.chainid A1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee A1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= G 1461501637330902918203684832716283019655932542975)
       (<= N 1461501637330902918203684832716283019655932542975)
       (<= J 1461501637330902918203684832716283019655932542975)
       (<= K 1461501637330902918203684832716283019655932542975)
       (<= H 1461501637330902918203684832716283019655932542975)
       (<= I 1461501637330902918203684832716283019655932542975)
       (<= P 1461501637330902918203684832716283019655932542975)
       (not Q)
       (= Z B1)))
      )
      (block_14_function_test__63_70_0 F Y A B Z V R X U)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Int) (Y Int) (Z state_type) (A1 state_type) (B1 state_type) (C1 Int) (D1 tx_type) (E1 tx_type) (F1 tx_type) ) 
    (=>
      (and
        (block_9_test_62_70_0 C C1 A B D1 Z V A1 W)
        (summary_13_function_g__69_70_0 E N A B E1 A1 X B1 Y)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data E1)) 3) 142))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data E1)) 2) 155))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data E1)) 1) 23))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data E1)) 0) 226)))
  (and (= M (= K L))
       (= R (= O Q))
       (= U (= S T))
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin E1) (tx.origin D1))
       (= (msg.value E1) 0)
       (= (msg.sig E1) 3793197966)
       (= (msg.sender E1) C1)
       (= E 0)
       (= D C)
       (= K X)
       (= J I)
       (= I (msg.sender D1))
       (= H W)
       (= G 3)
       (= F E)
       (= N C1)
       (= O Y)
       (= L (msg.sender D1))
       (= T (msg.sender F1))
       (= S Y)
       (= Q P)
       (= P C1)
       (= X J)
       (>= (tx.origin E1) 0)
       (>= (tx.gasprice E1) 0)
       (>= (msg.value E1) 0)
       (>= (msg.sender E1) 0)
       (>= (block.timestamp E1) 0)
       (>= (block.number E1) 0)
       (>= (block.gaslimit E1) 0)
       (>= (block.difficulty E1) 0)
       (>= (block.coinbase E1) 0)
       (>= (block.chainid E1) 0)
       (>= (block.basefee E1) 0)
       (>= (bytes_tuple_accessor_length (msg.data E1)) 4)
       (>= K 0)
       (>= J 0)
       (>= I 0)
       (>= H 0)
       (>= O 0)
       (>= L 0)
       (>= T 0)
       (>= S 0)
       (>= Q 0)
       (<= (tx.origin E1) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender E1) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase E1)
           1461501637330902918203684832716283019655932542975)
       (<= (block.chainid E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee E1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= K 1461501637330902918203684832716283019655932542975)
       (<= J 1461501637330902918203684832716283019655932542975)
       (<= I 1461501637330902918203684832716283019655932542975)
       (<= H 1461501637330902918203684832716283019655932542975)
       (<= O 1461501637330902918203684832716283019655932542975)
       (<= L 1461501637330902918203684832716283019655932542975)
       (<= T 1461501637330902918203684832716283019655932542975)
       (<= S 1461501637330902918203684832716283019655932542975)
       (<= Q 1461501637330902918203684832716283019655932542975)
       (not U)
       (= D1 F1)))
      )
      (block_15_function_test__63_70_0 G C1 A B D1 Z V B1 Y)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 state_type) (F1 state_type) (G1 state_type) (H1 Int) (I1 tx_type) (J1 tx_type) (K1 tx_type) ) 
    (=>
      (and
        (block_9_test_62_70_0 C H1 A B I1 E1 A1 F1 B1)
        (summary_13_function_g__69_70_0 E O A B J1 F1 C1 G1 D1)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data J1)) 3) 142))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data J1)) 2) 155))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data J1)) 1) 23))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data J1)) 0) 226)))
  (and (= N (= L M))
       (= V (= T U))
       (= S (= P R))
       (= Z (= W Y))
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin J1) (tx.origin I1))
       (= (msg.value J1) 0)
       (= (msg.sig J1) 3793197966)
       (= (msg.sender J1) H1)
       (= F E)
       (= E 0)
       (= D C)
       (= J (msg.sender I1))
       (= I B1)
       (= H 4)
       (= G F)
       (= P D1)
       (= O H1)
       (= M (msg.sender I1))
       (= L C1)
       (= K J)
       (= W D1)
       (= T D1)
       (= Q H1)
       (= R Q)
       (= Y X)
       (= X 0)
       (= U (msg.sender K1))
       (= C1 K)
       (>= (tx.origin J1) 0)
       (>= (tx.gasprice J1) 0)
       (>= (msg.value J1) 0)
       (>= (msg.sender J1) 0)
       (>= (block.timestamp J1) 0)
       (>= (block.number J1) 0)
       (>= (block.gaslimit J1) 0)
       (>= (block.difficulty J1) 0)
       (>= (block.coinbase J1) 0)
       (>= (block.chainid J1) 0)
       (>= (block.basefee J1) 0)
       (>= (bytes_tuple_accessor_length (msg.data J1)) 4)
       (>= J 0)
       (>= I 0)
       (>= P 0)
       (>= M 0)
       (>= L 0)
       (>= K 0)
       (>= W 0)
       (>= T 0)
       (>= R 0)
       (>= Y 0)
       (>= U 0)
       (<= (tx.origin J1) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender J1) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase J1)
           1461501637330902918203684832716283019655932542975)
       (<= (block.chainid J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= J 1461501637330902918203684832716283019655932542975)
       (<= I 1461501637330902918203684832716283019655932542975)
       (<= P 1461501637330902918203684832716283019655932542975)
       (<= M 1461501637330902918203684832716283019655932542975)
       (<= L 1461501637330902918203684832716283019655932542975)
       (<= K 1461501637330902918203684832716283019655932542975)
       (<= W 1461501637330902918203684832716283019655932542975)
       (<= T 1461501637330902918203684832716283019655932542975)
       (<= R 1461501637330902918203684832716283019655932542975)
       (<= Y 1461501637330902918203684832716283019655932542975)
       (<= U 1461501637330902918203684832716283019655932542975)
       (not Z)
       (= I1 K1)))
      )
      (block_16_function_test__63_70_0 H H1 A B I1 E1 A1 G1 D1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 state_type) (F1 state_type) (G1 state_type) (H1 Int) (I1 tx_type) (J1 tx_type) (K1 tx_type) ) 
    (=>
      (and
        (block_9_test_62_70_0 C H1 A B I1 E1 A1 F1 B1)
        (summary_13_function_g__69_70_0 E O A B J1 F1 C1 G1 D1)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data J1)) 3) 142))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data J1)) 2) 155))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data J1)) 1) 23))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data J1)) 0) 226)))
  (and (= N (= L M))
       (= V (= T U))
       (= S (= P R))
       (= Z (= W Y))
       a!1
       a!2
       a!3
       a!4
       (= (tx.origin J1) (tx.origin I1))
       (= (msg.value J1) 0)
       (= (msg.sig J1) 3793197966)
       (= (msg.sender J1) H1)
       (= F E)
       (= E 0)
       (= D C)
       (= J (msg.sender I1))
       (= I B1)
       (= H G)
       (= G F)
       (= P D1)
       (= O H1)
       (= M (msg.sender I1))
       (= L C1)
       (= K J)
       (= W D1)
       (= T D1)
       (= Q H1)
       (= R Q)
       (= Y X)
       (= X 0)
       (= U (msg.sender K1))
       (= C1 K)
       (>= (tx.origin J1) 0)
       (>= (tx.gasprice J1) 0)
       (>= (msg.value J1) 0)
       (>= (msg.sender J1) 0)
       (>= (block.timestamp J1) 0)
       (>= (block.number J1) 0)
       (>= (block.gaslimit J1) 0)
       (>= (block.difficulty J1) 0)
       (>= (block.coinbase J1) 0)
       (>= (block.chainid J1) 0)
       (>= (block.basefee J1) 0)
       (>= (bytes_tuple_accessor_length (msg.data J1)) 4)
       (>= J 0)
       (>= I 0)
       (>= P 0)
       (>= M 0)
       (>= L 0)
       (>= K 0)
       (>= W 0)
       (>= T 0)
       (>= R 0)
       (>= Y 0)
       (>= U 0)
       (<= (tx.origin J1) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender J1) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase J1)
           1461501637330902918203684832716283019655932542975)
       (<= (block.chainid J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee J1)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= J 1461501637330902918203684832716283019655932542975)
       (<= I 1461501637330902918203684832716283019655932542975)
       (<= P 1461501637330902918203684832716283019655932542975)
       (<= M 1461501637330902918203684832716283019655932542975)
       (<= L 1461501637330902918203684832716283019655932542975)
       (<= K 1461501637330902918203684832716283019655932542975)
       (<= W 1461501637330902918203684832716283019655932542975)
       (<= T 1461501637330902918203684832716283019655932542975)
       (<= R 1461501637330902918203684832716283019655932542975)
       (<= Y 1461501637330902918203684832716283019655932542975)
       (<= U 1461501637330902918203684832716283019655932542975)
       (= I1 K1)))
      )
      (block_11_return_function_test__63_70_0 H H1 A B I1 E1 A1 G1 D1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_11_return_function_test__63_70_0 C H A B I F D G E)
        true
      )
      (block_10_return_test_20_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        true
      )
      (block_17_function_test__63_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K state_type) (L state_type) (M Int) (N tx_type) ) 
    (=>
      (and
        (block_17_function_test__63_70_0 C M A B N I F J G)
        (summary_4_function_test__63_70_0 D M A B N K G L H)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data N)) 3) 109))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data N)) 2) 253))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data N)) 1) 168))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data N)) 0) 248))
      (a!5 (>= (+ (select (balances J) M) E) 0))
      (a!6 (<= (+ (select (balances J) M) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances J) M (+ (select (balances J) M) E))))
  (and (= J I)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value N) 0)
       (= (msg.sig N) 4171824493)
       (= C 0)
       (= G F)
       (>= (tx.origin N) 0)
       (>= (tx.gasprice N) 0)
       (>= (msg.value N) 0)
       (>= (msg.sender N) 0)
       (>= (block.timestamp N) 0)
       (>= (block.number N) 0)
       (>= (block.gaslimit N) 0)
       (>= (block.difficulty N) 0)
       (>= (block.coinbase N) 0)
       (>= (block.chainid N) 0)
       (>= (block.basefee N) 0)
       (>= (bytes_tuple_accessor_length (msg.data N)) 4)
       a!5
       (>= E (msg.value N))
       (<= (tx.origin N) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender N) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase N) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= K (state_type a!7))))
      )
      (summary_5_function_test__63_70_0 D M A B N I F L H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (summary_5_function_test__63_70_0 C H A B I F D G E)
        (interface_0_C_70_0 H A B F D)
        (= C 0)
      )
      (interface_0_C_70_0 H A B G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (summary_7_function_g__69_70_0 C H A B I F D G E)
        (interface_0_C_70_0 H A B F D)
        (= C 0)
      )
      (interface_0_C_70_0 H A B G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_70_0 C H A B I F D G E)
        (and (= C 0)
     (>= (tx.origin I) 0)
     (>= (tx.gasprice I) 0)
     (>= (msg.value I) 0)
     (>= (msg.sender I) 0)
     (>= (block.timestamp I) 0)
     (>= (block.number I) 0)
     (>= (block.gaslimit I) 0)
     (>= (block.difficulty I) 0)
     (>= (block.coinbase I) 0)
     (>= (block.chainid I) 0)
     (>= (block.basefee I) 0)
     (<= (tx.origin I) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice I)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value I)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender I) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp I)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number I)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit I)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty I)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase I) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid I)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee I)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value I) 0))
      )
      (interface_0_C_70_0 H A B G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        true
      )
      (block_18_function_g__69_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_18_function_g__69_70_0 C H A B I F D G E)
        (and (= C 0) (= E D) (= G F))
      )
      (block_19_g_68_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J state_type) (K state_type) (L Int) (M tx_type) ) 
    (=>
      (and
        (block_19_g_68_70_0 C L A B M J G K H)
        (and (= E (msg.sender M))
     (= D H)
     (= I F)
     (>= F 0)
     (>= E 0)
     (>= D 0)
     (<= F 1461501637330902918203684832716283019655932542975)
     (<= E 1461501637330902918203684832716283019655932542975)
     (<= D 1461501637330902918203684832716283019655932542975)
     (= F E))
      )
      (block_21_return_function_g__69_70_0 C L A B M J G K I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_21_return_function_g__69_70_0 C H A B I F D G E)
        true
      )
      (block_20_return_g_20_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_20_return_g_20_70_0 C H A B I F D G E)
        true
      )
      (summary_6_function_g__69_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        true
      )
      (block_22_function_g__69_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K state_type) (L state_type) (M Int) (N tx_type) ) 
    (=>
      (and
        (block_22_function_g__69_70_0 C M A B N I F J G)
        (summary_6_function_g__69_70_0 D M A B N K G L H)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data N)) 3) 142))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data N)) 2) 155))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data N)) 1) 23))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data N)) 0) 226))
      (a!5 (>= (+ (select (balances J) M) E) 0))
      (a!6 (<= (+ (select (balances J) M) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances J) M (+ (select (balances J) M) E))))
  (and (= J I)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value N) 0)
       (= (msg.sig N) 3793197966)
       (= C 0)
       (= G F)
       (>= (tx.origin N) 0)
       (>= (tx.gasprice N) 0)
       (>= (msg.value N) 0)
       (>= (msg.sender N) 0)
       (>= (block.timestamp N) 0)
       (>= (block.number N) 0)
       (>= (block.gaslimit N) 0)
       (>= (block.difficulty N) 0)
       (>= (block.coinbase N) 0)
       (>= (block.chainid N) 0)
       (>= (block.basefee N) 0)
       (>= (bytes_tuple_accessor_length (msg.data N)) 4)
       a!5
       (>= E (msg.value N))
       (<= (tx.origin N) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender N) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase N) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= K (state_type a!7))))
      )
      (summary_7_function_g__69_70_0 D M A B N I F L H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        true
      )
      (block_23_constructor_11_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_23_constructor_11_70_0 C H A B I F D G E)
        (and (= C 0) (= E D) (= G F))
      )
      (block_24__10_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J state_type) (K state_type) (L Int) (M tx_type) ) 
    (=>
      (and
        (block_24__10_70_0 C L A B M J G K H)
        (and (= E (msg.sender M))
     (= D H)
     (= I F)
     (>= F 0)
     (>= E 0)
     (>= D 0)
     (<= F 1461501637330902918203684832716283019655932542975)
     (<= E 1461501637330902918203684832716283019655932542975)
     (<= D 1461501637330902918203684832716283019655932542975)
     (= F E))
      )
      (block_25_return_constructor_11_70_0 C L A B M J G K I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (block_25_return_constructor_11_70_0 C H A B I F D G E)
        true
      )
      (summary_3_constructor_11_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D) (= G F))
      )
      (contract_initializer_entry_27_C_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_27_C_70_0 C H A B I F D G E)
        true
      )
      (contract_initializer_after_init_28_C_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H state_type) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_28_C_70_0 C K A B L H E I F)
        (summary_3_constructor_11_70_0 D K A B L I F J G)
        (not (<= D 0))
      )
      (contract_initializer_26_C_70_0 D K A B L H E J G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H state_type) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (summary_3_constructor_11_70_0 D K A B L I F J G)
        (contract_initializer_after_init_28_C_70_0 C K A B L H E I F)
        (= D 0)
      )
      (contract_initializer_26_C_70_0 D K A B L H E J G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E 0) (= E D) (>= (select (balances G) H) (msg.value I)) (= G F))
      )
      (implicit_constructor_entry_29_C_70_0 C H A B I F D G E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H state_type) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_29_C_70_0 C K A B L H E I F)
        (contract_initializer_26_C_70_0 D K A B L I F J G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_70_0 D K A B L H E J G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H state_type) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (contract_initializer_26_C_70_0 D K A B L I F J G)
        (implicit_constructor_entry_29_C_70_0 C K A B L H E I F)
        (= D 0)
      )
      (summary_constructor_2_C_70_0 D K A B L H E J G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (summary_5_function_test__63_70_0 C H A B I F D G E)
        (interface_0_C_70_0 H A B F D)
        (= C 3)
      )
      error_target_9_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_9_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
