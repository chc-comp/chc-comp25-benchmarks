(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_6_f_68_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int Int Int ) Bool)
(declare-fun |block_12_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int Int Int ) Bool)
(declare-fun |block_8_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int Int Int ) Bool)
(declare-fun |block_5_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int Int Int ) Bool)
(declare-fun |summary_4_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |error_target_7_0| ( ) Bool)
(declare-fun |interface_0_C_70_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |contract_initializer_13_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_entry_14_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_constructor_2_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_10_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int Int Int ) Bool)
(declare-fun |block_11_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int Int Int ) Bool)
(declare-fun |contract_initializer_after_init_15_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |implicit_constructor_entry_16_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_7_return_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int Int Int ) Bool)
(declare-fun |block_9_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int Int Int ) Bool)
(declare-fun |summary_3_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)

(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__69_70_0 H K B E L I J A C D F G)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (block_5_function_f__69_70_0 H K B E L I J A C D F G)
        (and (= H 0) (= J I))
      )
      (block_6_f_68_70_0 H K B E L I J A C D F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E Int) (F Int) (G crypto_type) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R state_type) (S state_type) (T Int) (U tx_type) ) 
    (=>
      (and
        (block_6_f_68_70_0 J T C G U R S A D F H I)
        (and (= Q 4660)
     (= E M)
     (= B Q)
     (= M L)
     (= K 1)
     (= H 0)
     (= F 0)
     (= A 0)
     (= N E)
     (= L B)
     (= I 0)
     (= D 0)
     (= O 4660)
     (>= M 0)
     (>= N 0)
     (>= L 0)
     (<= M 65535)
     (<= N 4294967295)
     (<= L 65535)
     (not P)
     (= P (= N O)))
      )
      (block_8_function_f__69_70_0 K T C G U R S B E F H I)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (block_8_function_f__69_70_0 H K B E L I J A C D F G)
        true
      )
      (summary_3_function_f__69_70_0 H K B E L I J)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (block_9_function_f__69_70_0 H K B E L I J A C D F G)
        true
      )
      (summary_3_function_f__69_70_0 H K B E L I J)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (block_10_function_f__69_70_0 H K B E L I J A C D F G)
        true
      )
      (summary_3_function_f__69_70_0 H K B E L I J)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (block_11_function_f__69_70_0 H K B E L I J A C D F G)
        true
      )
      (summary_3_function_f__69_70_0 H K B E L I J)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        (block_7_return_function_f__69_70_0 H K B E L I J A C D F G)
        true
      )
      (summary_3_function_f__69_70_0 H K B E L I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E Int) (F Int) (G Int) (H crypto_type) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z state_type) (A1 state_type) (B1 Int) (C1 tx_type) ) 
    (=>
      (and
        (block_6_f_68_70_0 K B1 C H C1 Z A1 A D F I J)
        (let ((a!1 (bvmul #xffff ((_ extract 15 0) ((_ int_to_bv 32) (* (- 1) S))))))
(let ((a!2 (ubv_to_int (ite (>= S 0)
                            ((_ extract 15 0) ((_ int_to_bv 32) S))
                            a!1))))
  (and (= X (= V W))
       (= Y 4660)
       (= F 0)
       (= B Y)
       (= M 2)
       (= J 0)
       (= G U)
       (= A 0)
       (= U T)
       (= S B)
       (= P E)
       (= N B)
       (= I 0)
       (= V G)
       (= T (* 65536 a!2))
       (= Q 4660)
       (= E O)
       (= O N)
       (= D 0)
       (= L K)
       (= W 305397760)
       (>= U 0)
       (>= S 0)
       (>= P 0)
       (>= N 0)
       (>= V 0)
       (>= T 0)
       (>= O 0)
       (<= U 4294967295)
       (<= S 65535)
       (<= P 4294967295)
       (<= N 65535)
       (<= V 4294967295)
       (<= T 4294967295)
       (<= O 65535)
       (not X)
       (= R (= P Q)))))
      )
      (block_9_function_f__69_70_0 M B1 C H C1 Z A1 B E G I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E Int) (F Int) (G Int) (H crypto_type) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Bool) (G1 Int) (H1 state_type) (I1 state_type) (J1 Int) (K1 tx_type) ) 
    (=>
      (and
        (block_6_f_68_70_0 L J1 C H K1 H1 I1 A D F I K)
        (let ((a!1 (ite (>= B1 0)
                ((_ int_to_bv 8) B1)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) B1)))))
      (a!2 (bvmul #xffff ((_ extract 15 0) ((_ int_to_bv 32) (* (- 1) U))))))
(let ((a!3 (ubv_to_int (ite (>= U 0)
                            ((_ extract 15 0) ((_ int_to_bv 32) U))
                            a!2))))
  (and (= Z (= X Y))
       (= F1 (= D1 E1))
       (= G1 4660)
       (= F 0)
       (= B G1)
       (= N M)
       (= J C1)
       (= G W)
       (= A 0)
       (= U B)
       (= R E)
       (= O 3)
       (= K 0)
       (= I 0)
       (= C1 (ubv_to_int a!1))
       (= A1 B)
       (= X G)
       (= V (* 65536 a!3))
       (= S 4660)
       (= E Q)
       (= Q P)
       (= P B)
       (= D1 J)
       (= D 0)
       (= B1 A1)
       (= Y 305397760)
       (= M L)
       (= W V)
       (= E1 52)
       (>= U 0)
       (>= R 0)
       (>= C1 0)
       (>= A1 0)
       (>= X 0)
       (>= V 0)
       (>= Q 0)
       (>= P 0)
       (>= D1 0)
       (>= B1 0)
       (>= W 0)
       (<= U 65535)
       (<= R 4294967295)
       (<= C1 255)
       (<= A1 65535)
       (<= X 4294967295)
       (<= V 4294967295)
       (<= Q 65535)
       (<= P 65535)
       (<= D1 255)
       (<= B1 65535)
       (<= W 4294967295)
       (not F1)
       (= T (= R S)))))
      )
      (block_10_function_f__69_70_0 O J1 C H K1 H1 I1 B E G J K)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E Int) (F Int) (G Int) (H crypto_type) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Bool) (P1 state_type) (Q1 state_type) (R1 Int) (S1 tx_type) ) 
    (=>
      (and
        (block_6_f_68_70_0 M R1 C H S1 P1 Q1 A D F I K)
        (let ((a!1 (bvmul #xffff ((_ extract 15 0) ((_ int_to_bv 32) (* (- 1) W)))))
      (a!3 ((_ extract 15 8) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I1)))))
      (a!6 (ite (>= D1 0)
                ((_ int_to_bv 8) D1)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) D1))))))
(let ((a!2 (ubv_to_int (ite (>= W 0)
                            ((_ extract 15 0) ((_ int_to_bv 32) W))
                            a!1)))
      (a!4 (ubv_to_int (ite (>= I1 0)
                            ((_ extract 15 8) ((_ int_to_bv 16) I1))
                            a!3))))
(let ((a!5 (= J1 (+ (* 256 (ubv_to_int #x00)) a!4))))
  (and (= B1 (= Z A1))
       (= O1 (= M1 N1))
       (= H1 (= F1 G1))
       (= A 0)
       (= N M)
       (= J E1)
       (= G Y)
       (= F 0)
       (= B K1)
       (= R B)
       (= O N)
       (= K 0)
       (= I 0)
       (= C1 B)
       (= Z G)
       (= W B)
       (= S R)
       (= E S)
       (= Q 4)
       (= P O)
       (= D 0)
       (= K1 4660)
       (= I1 B)
       (= F1 J)
       (= D1 C1)
       (= A1 305397760)
       (= Y X)
       (= X (* 65536 a!2))
       (= L1 J1)
       (= L L1)
       a!5
       (= G1 52)
       (= U 4660)
       (= E1 (ubv_to_int a!6))
       (= T E)
       (= N1 18)
       (= M1 L)
       (>= R 0)
       (>= C1 0)
       (>= Z 0)
       (>= W 0)
       (>= S 0)
       (>= I1 0)
       (>= F1 0)
       (>= D1 0)
       (>= Y 0)
       (>= X 0)
       (>= L1 0)
       (>= J1 0)
       (>= E1 0)
       (>= T 0)
       (>= M1 0)
       (<= R 65535)
       (<= C1 65535)
       (<= Z 4294967295)
       (<= W 65535)
       (<= S 65535)
       (<= I1 65535)
       (<= F1 255)
       (<= D1 65535)
       (<= Y 4294967295)
       (<= X 4294967295)
       (<= L1 255)
       (<= J1 255)
       (<= E1 255)
       (<= T 4294967295)
       (<= M1 255)
       (not O1)
       (= V (= T U))))))
      )
      (block_11_function_f__69_70_0 Q R1 C H S1 P1 Q1 B E G J L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E Int) (F Int) (G Int) (H crypto_type) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Bool) (P1 state_type) (Q1 state_type) (R1 Int) (S1 tx_type) ) 
    (=>
      (and
        (block_6_f_68_70_0 M R1 C H S1 P1 Q1 A D F I K)
        (let ((a!1 (bvmul #xffff ((_ extract 15 0) ((_ int_to_bv 32) (* (- 1) W)))))
      (a!3 ((_ extract 15 8) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I1)))))
      (a!6 (ite (>= D1 0)
                ((_ int_to_bv 8) D1)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) D1))))))
(let ((a!2 (ubv_to_int (ite (>= W 0)
                            ((_ extract 15 0) ((_ int_to_bv 32) W))
                            a!1)))
      (a!4 (ubv_to_int (ite (>= I1 0)
                            ((_ extract 15 8) ((_ int_to_bv 16) I1))
                            a!3))))
(let ((a!5 (= J1 (+ (* 256 (ubv_to_int #x00)) a!4))))
  (and (= B1 (= Z A1))
       (= O1 (= M1 N1))
       (= H1 (= F1 G1))
       (= A 0)
       (= N M)
       (= J E1)
       (= G Y)
       (= F 0)
       (= B K1)
       (= R B)
       (= O N)
       (= K 0)
       (= I 0)
       (= C1 B)
       (= Z G)
       (= W B)
       (= S R)
       (= E S)
       (= Q P)
       (= P O)
       (= D 0)
       (= K1 4660)
       (= I1 B)
       (= F1 J)
       (= D1 C1)
       (= A1 305397760)
       (= Y X)
       (= X (* 65536 a!2))
       (= L1 J1)
       (= L L1)
       a!5
       (= G1 52)
       (= U 4660)
       (= E1 (ubv_to_int a!6))
       (= T E)
       (= N1 18)
       (= M1 L)
       (>= R 0)
       (>= C1 0)
       (>= Z 0)
       (>= W 0)
       (>= S 0)
       (>= I1 0)
       (>= F1 0)
       (>= D1 0)
       (>= Y 0)
       (>= X 0)
       (>= L1 0)
       (>= J1 0)
       (>= E1 0)
       (>= T 0)
       (>= M1 0)
       (<= R 65535)
       (<= C1 65535)
       (<= Z 4294967295)
       (<= W 65535)
       (<= S 65535)
       (<= I1 65535)
       (<= F1 255)
       (<= D1 65535)
       (<= Y 4294967295)
       (<= X 4294967295)
       (<= L1 255)
       (<= J1 255)
       (<= E1 255)
       (<= T 4294967295)
       (<= M1 255)
       (= V (= T U))))))
      )
      (block_7_return_function_f__69_70_0 Q R1 C H S1 P1 Q1 B E G J L)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) ) 
    (=>
      (and
        true
      )
      (block_12_function_f__69_70_0 H K B E L I J A C D F G)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C Int) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I Int) (J Int) (K state_type) (L state_type) (M state_type) (N state_type) (O Int) (P tx_type) ) 
    (=>
      (and
        (block_12_function_f__69_70_0 H O B E P K L A C D F G)
        (summary_3_function_f__69_70_0 I O B E P M N)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data P)) 3) 240))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data P)) 2) 31))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data P)) 1) 18))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data P)) 0) 38))
      (a!5 (>= (+ (select (balances L) O) J) 0))
      (a!6 (<= (+ (select (balances L) O) J)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances L) O (+ (select (balances L) O) J))))
  (and (= L K)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value P) 0)
       (= (msg.sig P) 638722032)
       (= H 0)
       (>= (tx.origin P) 0)
       (>= (tx.gasprice P) 0)
       (>= (msg.value P) 0)
       (>= (msg.sender P) 0)
       (>= (block.timestamp P) 0)
       (>= (block.number P) 0)
       (>= (block.gaslimit P) 0)
       (>= (block.difficulty P) 0)
       (>= (block.coinbase P) 0)
       (>= (block.chainid P) 0)
       (>= (block.basefee P) 0)
       (>= (bytes_tuple_accessor_length (msg.data P)) 4)
       a!5
       (>= J (msg.value P))
       (<= (tx.origin P) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice P)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value P)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender P) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp P)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number P)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit P)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty P)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase P) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid P)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee P)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= M (state_type a!7))))
      )
      (summary_4_function_f__69_70_0 I O B E P K N)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__69_70_0 C F A B G D E)
        (interface_0_C_70_0 F A B D)
        (= C 0)
      )
      (interface_0_C_70_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_70_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_70_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_14_C_70_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_14_C_70_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_15_C_70_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_15_C_70_0 C F A B G D E)
        true
      )
      (contract_initializer_13_C_70_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_16_C_70_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_16_C_70_0 C H A B I E F)
        (contract_initializer_13_C_70_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_70_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_13_C_70_0 D H A B I F G)
        (implicit_constructor_entry_16_C_70_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_70_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__69_70_0 C F A B G D E)
        (interface_0_C_70_0 F A B D)
        (= C 2)
      )
      error_target_7_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_7_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
