(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_7_return_function_f__36_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_9_function_f__36_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_5_function_f__36_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_10_function_f__36_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |summary_4_function_f__36_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |interface_0_C_37_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |summary_3_function_f__36_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |summary_constructor_2_C_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_entry_12_C_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_after_init_13_C_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_11_C_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_8_function_f__36_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |implicit_constructor_entry_14_C_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_6_f_35_37_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |error_target_4_0| ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E crypto_type) (F Int) (G state_type) (H state_type) (I Int) (J tx_type) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__36_37_0 F I C E J G H A B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E crypto_type) (F Int) (G state_type) (H state_type) (I Int) (J tx_type) ) 
    (=>
      (and
        (block_5_function_f__36_37_0 F I C E J G H A B D)
        (and (= F 0) (= H G))
      )
      (block_6_f_35_37_0 F I C E J G H A B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E abi_type) (F Int) (G Int) (H crypto_type) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T state_type) (U state_type) (V Int) (W tx_type) ) 
    (=>
      (and
        (block_6_f_35_37_0 I V E H W T U A B F)
        (let ((a!1 (ite (>= C 0)
                ((_ int_to_bv 8) C)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) C)))))
      (a!2 (ite (>= N 0)
                ((_ int_to_bv 8) N)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) N)))))
      (a!3 (ite (>= M 0)
                ((_ int_to_bv 8) M)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) M))))))
  (and (= S 255)
       (= G K)
       (= D O)
       (= C S)
       (= P D)
       (= M G)
       (= K 240)
       (= F 0)
       (= B 0)
       (= A 0)
       (= O (ubv_to_int (bvxor a!1 a!2)))
       (= L C)
       (= J 1)
       (= Q G)
       (= N (ubv_to_int (bvnot a!3)))
       (>= P 0)
       (>= M 0)
       (>= O 0)
       (>= L 0)
       (>= Q 0)
       (>= N 0)
       (<= P 255)
       (<= M 255)
       (<= O 255)
       (<= L 255)
       (<= Q 255)
       (<= N 255)
       (not R)
       (= R (= P Q))))
      )
      (block_8_function_f__36_37_0 J V E H W T U A D G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E crypto_type) (F Int) (G state_type) (H state_type) (I Int) (J tx_type) ) 
    (=>
      (and
        (block_8_function_f__36_37_0 F I C E J G H A B D)
        true
      )
      (summary_3_function_f__36_37_0 F I C E J G H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E crypto_type) (F Int) (G state_type) (H state_type) (I Int) (J tx_type) ) 
    (=>
      (and
        (block_9_function_f__36_37_0 F I C E J G H A B D)
        true
      )
      (summary_3_function_f__36_37_0 F I C E J G H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E crypto_type) (F Int) (G state_type) (H state_type) (I Int) (J tx_type) ) 
    (=>
      (and
        (block_7_return_function_f__36_37_0 F I C E J G H A B D)
        true
      )
      (summary_3_function_f__36_37_0 F I C E J G H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F abi_type) (G Int) (H Int) (I crypto_type) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 state_type) (D1 state_type) (E1 Int) (F1 tx_type) ) 
    (=>
      (and
        (block_6_f_35_37_0 J E1 F I F1 C1 D1 A B G)
        (let ((a!1 (ite (>= O 0)
                ((_ int_to_bv 8) O)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) O)))))
      (a!2 (ite (>= C 0)
                ((_ int_to_bv 8) C)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) C)))))
      (a!3 (ite (>= P 0)
                ((_ int_to_bv 8) P)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) P)))))
      (a!4 (ite (>= D 0)
                ((_ int_to_bv 8) D)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) D)))))
      (a!5 (ite (>= W 0)
                ((_ int_to_bv 8) W)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) W)))))
      (a!6 (ite (>= V 0)
                ((_ int_to_bv 8) V)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) V))))))
  (and (= T (= R S))
       (= E X)
       (= H M)
       (= D Q)
       (= B1 255)
       (= P (ubv_to_int (bvnot a!1)))
       (= M 240)
       (= L 2)
       (= C B1)
       (= B 0)
       (= A 0)
       (= Y E)
       (= V H)
       (= R D)
       (= Q (ubv_to_int (bvxor a!2 a!3)))
       (= O H)
       (= N C)
       (= K J)
       (= X (ubv_to_int (bvxor a!4 a!5)))
       (= U D)
       (= G 0)
       (= S H)
       (= Z 255)
       (= W (ubv_to_int (bvnot a!6)))
       (>= P 0)
       (>= Y 0)
       (>= V 0)
       (>= R 0)
       (>= Q 0)
       (>= O 0)
       (>= N 0)
       (>= X 0)
       (>= U 0)
       (>= S 0)
       (>= W 0)
       (<= P 255)
       (<= Y 255)
       (<= V 255)
       (<= R 255)
       (<= Q 255)
       (<= O 255)
       (<= N 255)
       (<= X 255)
       (<= U 255)
       (<= S 255)
       (<= W 255)
       (not A1)
       (not (= (= Y Z) A1))))
      )
      (block_9_function_f__36_37_0 L E1 F I F1 C1 D1 A E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F abi_type) (G Int) (H Int) (I crypto_type) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 state_type) (D1 state_type) (E1 Int) (F1 tx_type) ) 
    (=>
      (and
        (block_6_f_35_37_0 J E1 F I F1 C1 D1 A B G)
        (let ((a!1 (ite (>= O 0)
                ((_ int_to_bv 8) O)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) O)))))
      (a!2 (ite (>= C 0)
                ((_ int_to_bv 8) C)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) C)))))
      (a!3 (ite (>= P 0)
                ((_ int_to_bv 8) P)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) P)))))
      (a!4 (ite (>= D 0)
                ((_ int_to_bv 8) D)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) D)))))
      (a!5 (ite (>= W 0)
                ((_ int_to_bv 8) W)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) W)))))
      (a!6 (ite (>= V 0)
                ((_ int_to_bv 8) V)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) V))))))
  (and (= T (= R S))
       (= E X)
       (= H M)
       (= D Q)
       (= B1 255)
       (= P (ubv_to_int (bvnot a!1)))
       (= M 240)
       (= L K)
       (= C B1)
       (= B 0)
       (= A 0)
       (= Y E)
       (= V H)
       (= R D)
       (= Q (ubv_to_int (bvxor a!2 a!3)))
       (= O H)
       (= N C)
       (= K J)
       (= X (ubv_to_int (bvxor a!4 a!5)))
       (= U D)
       (= G 0)
       (= S H)
       (= Z 255)
       (= W (ubv_to_int (bvnot a!6)))
       (>= P 0)
       (>= Y 0)
       (>= V 0)
       (>= R 0)
       (>= Q 0)
       (>= O 0)
       (>= N 0)
       (>= X 0)
       (>= U 0)
       (>= S 0)
       (>= W 0)
       (<= P 255)
       (<= Y 255)
       (<= V 255)
       (<= R 255)
       (<= Q 255)
       (<= O 255)
       (<= N 255)
       (<= X 255)
       (<= U 255)
       (<= S 255)
       (<= W 255)
       (not (= (= Y Z) A1))))
      )
      (block_7_return_function_f__36_37_0 L E1 F I F1 C1 D1 A E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E crypto_type) (F Int) (G state_type) (H state_type) (I Int) (J tx_type) ) 
    (=>
      (and
        true
      )
      (block_10_function_f__36_37_0 F I C E J G H A B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D Int) (E crypto_type) (F Int) (G Int) (H Int) (I state_type) (J state_type) (K state_type) (L state_type) (M Int) (N tx_type) ) 
    (=>
      (and
        (block_10_function_f__36_37_0 F M C E N I J A B D)
        (summary_3_function_f__36_37_0 G M C E N K L A)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data N)) 3) 240))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data N)) 2) 31))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data N)) 1) 18))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data N)) 0) 38))
      (a!5 (>= (+ (select (balances J) M) H) 0))
      (a!6 (<= (+ (select (balances J) M) H)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances J) M (+ (select (balances J) M) H))))
  (and (= J I)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value N) 0)
       (= (msg.sig N) 638722032)
       (= F 0)
       (>= (tx.origin N) 0)
       (>= (tx.gasprice N) 0)
       (>= (msg.value N) 0)
       (>= (msg.sender N) 0)
       (>= (block.timestamp N) 0)
       (>= (block.number N) 0)
       (>= (block.gaslimit N) 0)
       (>= (block.difficulty N) 0)
       (>= (block.coinbase N) 0)
       (>= (block.chainid N) 0)
       (>= (block.basefee N) 0)
       (>= (bytes_tuple_accessor_length (msg.data N)) 4)
       a!5
       (>= H (msg.value N))
       (<= (tx.origin N) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender N) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase N) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee N)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= K (state_type a!7))))
      )
      (summary_4_function_f__36_37_0 G M C E N I L A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) ) 
    (=>
      (and
        (summary_4_function_f__36_37_0 D G B C H E F A)
        (interface_0_C_37_0 G B C E)
        (= D 0)
      )
      (interface_0_C_37_0 G B C F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_37_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_37_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_12_C_37_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_12_C_37_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_13_C_37_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_13_C_37_0 C F A B G D E)
        true
      )
      (contract_initializer_11_C_37_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_14_C_37_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_14_C_37_0 C H A B I E F)
        (contract_initializer_11_C_37_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_37_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_11_C_37_0 D H A B I F G)
        (implicit_constructor_entry_14_C_37_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_37_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) ) 
    (=>
      (and
        (summary_4_function_f__36_37_0 D G B C H E F A)
        (interface_0_C_37_0 G B C E)
        (= D 1)
      )
      error_target_4_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_4_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
