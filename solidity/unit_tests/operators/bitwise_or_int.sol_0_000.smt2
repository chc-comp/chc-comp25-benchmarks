(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_10_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_11_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |summary_4_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_6_f_81_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_8_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_12_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |implicit_constructor_entry_17_C_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_after_init_16_C_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_7_return_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |summary_3_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |interface_0_C_83_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |contract_initializer_14_C_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_13_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |contract_initializer_entry_15_C_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_5_function_f__82_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |error_target_9_0| ( ) Bool)
(declare-fun |summary_constructor_2_C_83_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__82_83_0 C F A B G D E H I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_5_function_f__82_83_0 C F A B G D E H I J)
        (and (= C 0) (= E D))
      )
      (block_6_f_81_83_0 C F A B G D E H I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool) (J Int) (K Int) (L state_type) (M state_type) (N Int) (O tx_type) (P Int) (Q Int) (R Int) (S Int) (T Int) ) 
    (=>
      (and
        (block_6_f_81_83_0 C N A B O L M P R T)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E)))))
      (a!5 (ite (>= E 0)
                ((_ int_to_bv 16) E)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E)))))
      (a!6 (ite (>= F 0)
                ((_ int_to_bv 16) F)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F))))))
(let ((a!2 (ite (>= F 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) F)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= E 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) E)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!5 a!6))))))
(let ((a!8 (= G (ite (or a!2 a!4) a!7 (ubv_to_int (bvor a!5 a!6))))))
  (and (= J 1)
       (= E Q)
       (= K 0)
       a!8
       (= F S)
       (= D 1)
       (= T 0)
       (= R 0)
       (= P 0)
       (= H 1)
       (= S K)
       (= Q J)
       (>= E (- 32768))
       (>= G (- 32768))
       (>= F (- 32768))
       (<= E 32767)
       (<= G 32767)
       (<= F 32767)
       (not I)
       (= I (= G H))))))
      )
      (block_8_function_f__82_83_0 D N A B O L M Q S T)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_8_function_f__82_83_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__82_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_9_function_f__82_83_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__82_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_10_function_f__82_83_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__82_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_11_function_f__82_83_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__82_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_12_function_f__82_83_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__82_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_7_return_function_f__82_83_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__82_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X state_type) (Y state_type) (Z Int) (A1 tx_type) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) ) 
    (=>
      (and
        (block_6_f_81_83_0 C Z A B A1 X Y B1 E1 H1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R)))))
      (a!5 (ite (>= Q 0)
                ((_ int_to_bv 16) Q)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q)))))
      (a!6 (ite (>= R 0)
                ((_ int_to_bv 16) R)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) G)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F)))))
      (a!13 (ite (>= F 0)
                 ((_ int_to_bv 16) F)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F)))))
      (a!14 (ite (>= G 0)
                 ((_ int_to_bv 16) G)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) G))))))
(let ((a!2 (ite (>= Q 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) Q)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= R 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) R)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!5 a!6)))))
      (a!10 (ite (>= G 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) G)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= F 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) F)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!13 a!14))))))
(let ((a!8 (= S (ite (or a!2 a!4) a!7 (ubv_to_int (bvor a!5 a!6)))))
      (a!16 (= H (ite (or a!10 a!12) a!15 (ubv_to_int (bvor a!13 a!14))))))
  (and (= J (= H I))
       (= F C1)
       (= W 0)
       a!8
       (= L 0)
       (= K C1)
       (= I 1)
       a!16
       (= G F1)
       (= E 2)
       (= D C)
       (= T 0)
       (= R G1)
       (= Q D1)
       (= P O)
       (= O 0)
       (= N F1)
       (= M L)
       (= H1 0)
       (= F1 W)
       (= D1 M)
       (= V 1)
       (= C1 V)
       (= B1 0)
       (= G1 P)
       (= E1 0)
       (>= F (- 32768))
       (>= S (- 32768))
       (>= K (- 32768))
       (>= H (- 32768))
       (>= G (- 32768))
       (>= R (- 32768))
       (>= Q (- 32768))
       (>= P (- 32768))
       (>= N (- 32768))
       (>= M (- 32768))
       (<= F 32767)
       (<= S 32767)
       (<= K 32767)
       (<= H 32767)
       (<= G 32767)
       (<= R 32767)
       (<= Q 32767)
       (<= P 32767)
       (<= N 32767)
       (<= M 32767)
       (not U)
       (not (= (= S T) U))))))
      )
      (block_9_function_f__82_83_0 E Z A B A1 X Y D1 G1 H1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 state_type) (L1 state_type) (M1 Int) (N1 tx_type) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) ) 
    (=>
      (and
        (block_6_f_81_83_0 C M1 A B N1 K1 L1 O1 S1 W1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) G)))))
      (a!5 (ite (>= G 0)
                ((_ int_to_bv 16) G)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) G)))))
      (a!6 (ite (>= H 0)
                ((_ int_to_bv 16) H)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!13 (ite (>= R 0)
                 ((_ int_to_bv 16) R)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R)))))
      (a!14 (ite (>= S 0)
                 ((_ int_to_bv 16) S)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) C1)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) D1)))))
      (a!21 (ite (>= C1 0)
                 ((_ int_to_bv 16) C1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) C1)))))
      (a!22 (ite (>= D1 0)
                 ((_ int_to_bv 16) D1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) D1))))))
(let ((a!2 (ite (>= H 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) H)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= G 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) G)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!5 a!6)))))
      (a!10 (ite (>= R 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) R)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= S 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) S)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!13 a!14)))))
      (a!18 (ite (>= C1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) C1)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= D1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) D1)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!21 a!22))))))
(let ((a!8 (= I (ite (or a!2 a!4) a!7 (ubv_to_int (bvor a!5 a!6)))))
      (a!16 (= T (ite (or a!10 a!12) a!15 (ubv_to_int (bvor a!13 a!14)))))
      (a!24 (= E1 (ite (or a!18 a!20) a!23 (ubv_to_int (bvor a!21 a!22))))))
  (and (= H1 (= F1 G1))
       (= K (= I J))
       (= G P1)
       (= N M)
       (= M 0)
       (= L P1)
       (= J 1)
       a!8
       (= H T1)
       (= F 3)
       (= E D)
       (= D C)
       (= P1 I1)
       (= I1 1)
       (= B1 A1)
       (= A1 15)
       (= Z Q1)
       (= Y X)
       (= X 240)
       (= W U1)
       (= U 0)
       a!16
       (= S U1)
       (= R Q1)
       (= Q P)
       (= P 0)
       (= O T1)
       (= O1 0)
       (= J1 0)
       (= G1 255)
       (= F1 X1)
       a!24
       (= D1 V1)
       (= C1 R1)
       (= X1 E1)
       (= V1 Y)
       (= T1 J1)
       (= Q1 N)
       (= S1 0)
       (= R1 B1)
       (= W1 0)
       (= U1 Q)
       (>= G (- 32768))
       (>= N (- 32768))
       (>= L (- 32768))
       (>= I (- 32768))
       (>= H (- 32768))
       (>= B1 (- 32768))
       (>= Z (- 32768))
       (>= Y (- 32768))
       (>= W (- 32768))
       (>= T (- 32768))
       (>= S (- 32768))
       (>= R (- 32768))
       (>= Q (- 32768))
       (>= O (- 32768))
       (>= F1 (- 32768))
       (>= E1 (- 32768))
       (>= D1 (- 32768))
       (>= C1 (- 32768))
       (<= G 32767)
       (<= N 32767)
       (<= L 32767)
       (<= I 32767)
       (<= H 32767)
       (<= B1 32767)
       (<= Z 32767)
       (<= Y 32767)
       (<= W 32767)
       (<= T 32767)
       (<= S 32767)
       (<= R 32767)
       (<= Q 32767)
       (<= O 32767)
       (<= F1 32767)
       (<= E1 32767)
       (<= D1 32767)
       (<= C1 32767)
       (not H1)
       (not (= (= T U) V))))))
      )
      (block_10_function_f__82_83_0 F M1 A B N1 K1 L1 R1 V1 X1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Bool) (V1 Int) (W1 state_type) (X1 state_type) (Y1 Int) (Z1 tx_type) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int) (I2 Int) (J2 Int) (K2 Int) (L2 Int) ) 
    (=>
      (and
        (block_6_f_81_83_0 C Y1 A B Z1 W1 X1 A2 F2 K2)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!5 (ite (>= S 0)
                ((_ int_to_bv 16) S)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!6 (ite (>= T 0)
                ((_ int_to_bv 16) T)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!13 (ite (>= H 0)
                 ((_ int_to_bv 16) H)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!14 (ite (>= I 0)
                 ((_ int_to_bv 16) I)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) D1)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E1)))))
      (a!21 (ite (>= D1 0)
                 ((_ int_to_bv 16) D1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) D1)))))
      (a!22 (ite (>= E1 0)
                 ((_ int_to_bv 16) E1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E1)))))
      (a!25 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q1)))))
      (a!27 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!29 (ite (>= Q1 0)
                 ((_ int_to_bv 16) Q1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q1)))))
      (a!30 (ite (>= R1 0)
                 ((_ int_to_bv 16) R1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1))))))
(let ((a!2 (ite (>= S 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) S)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= T 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) T)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!5 a!6)))))
      (a!10 (ite (>= I 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) I)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= H 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) H)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!13 a!14)))))
      (a!18 (ite (>= D1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) D1)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= E1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) E1)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!21 a!22)))))
      (a!26 (ite (>= Q1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) Q1)) #b1)
                 (= a!25 #b1)))
      (a!28 (ite (>= R1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) R1)) #b1)
                 (= a!27 #b1)))
      (a!31 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!29 a!30))))))
(let ((a!8 (= U (ite (or a!2 a!4) a!7 (ubv_to_int (bvor a!5 a!6)))))
      (a!16 (= J (ite (or a!10 a!12) a!15 (ubv_to_int (bvor a!13 a!14)))))
      (a!24 (= F1 (ite (or a!18 a!20) a!23 (ubv_to_int (bvor a!21 a!22)))))
      (a!32 (= S1 (ite (or a!26 a!28) a!31 (ubv_to_int (bvor a!29 a!30))))))
  (and (= I1 (= G1 H1))
       (= L (= J K))
       (= U1 (= S1 T1))
       (= H B2)
       a!8
       (= K 1)
       a!16
       (= I G2)
       (= G 4)
       (= F E)
       (= E D)
       (= D C)
       (= B2 M1)
       (= J1 D2)
       (= B1 15)
       (= A1 C2)
       (= Z Y)
       (= Y 240)
       (= X H2)
       (= V 0)
       (= T H2)
       (= S C2)
       (= R Q)
       (= Q 0)
       (= P G2)
       (= O N)
       (= N 0)
       (= M B2)
       (= D2 C1)
       (= A2 0)
       (= P1 O1)
       (= O1 200)
       (= N1 I2)
       (= M1 1)
       (= L1 K1)
       (= K1 (- 1))
       (= H1 255)
       (= G1 L2)
       a!24
       (= E1 I2)
       (= D1 D2)
       (= C1 B1)
       (= C2 O)
       (= V1 0)
       (= T1 E2)
       a!32
       (= R1 J2)
       (= Q1 E2)
       (= L2 F1)
       (= J2 P1)
       (= H2 R)
       (= E2 L1)
       (= G2 V1)
       (= F2 0)
       (= K2 0)
       (= I2 Z)
       (>= H (- 32768))
       (>= U (- 32768))
       (>= J (- 32768))
       (>= I (- 32768))
       (>= J1 (- 32768))
       (>= A1 (- 32768))
       (>= Z (- 32768))
       (>= X (- 32768))
       (>= T (- 32768))
       (>= S (- 32768))
       (>= R (- 32768))
       (>= P (- 32768))
       (>= O (- 32768))
       (>= M (- 32768))
       (>= P1 (- 32768))
       (>= N1 (- 32768))
       (>= L1 (- 32768))
       (>= G1 (- 32768))
       (>= F1 (- 32768))
       (>= E1 (- 32768))
       (>= D1 (- 32768))
       (>= C1 (- 32768))
       (>= T1 (- 32768))
       (>= S1 (- 32768))
       (>= R1 (- 32768))
       (>= Q1 (- 32768))
       (<= H 32767)
       (<= U 32767)
       (<= J 32767)
       (<= I 32767)
       (<= J1 32767)
       (<= A1 32767)
       (<= Z 32767)
       (<= X 32767)
       (<= T 32767)
       (<= S 32767)
       (<= R 32767)
       (<= P 32767)
       (<= O 32767)
       (<= M 32767)
       (<= P1 32767)
       (<= N1 32767)
       (<= L1 32767)
       (<= G1 32767)
       (<= F1 32767)
       (<= E1 32767)
       (<= D1 32767)
       (<= C1 32767)
       (<= T1 32767)
       (<= S1 32767)
       (<= R1 32767)
       (<= Q1 32767)
       (not U1)
       (not (= (= U V) W))))))
      )
      (block_11_function_f__82_83_0 G Y1 A B Z1 W1 X1 E2 J2 L2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Bool) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Bool) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Bool) (B2 Int) (C2 state_type) (D2 state_type) (E2 Int) (F2 tx_type) (G2 Int) (H2 Int) (I2 Int) (J2 Int) (K2 Int) (L2 Int) (M2 Int) (N2 Int) (O2 Int) (P2 Int) (Q2 Int) (R2 Int) ) 
    (=>
      (and
        (block_6_f_81_83_0 C E2 A B F2 C2 D2 G2 L2 Q2)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!5 (ite (>= I 0)
                ((_ int_to_bv 16) I)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!6 (ite (>= J 0)
                ((_ int_to_bv 16) J)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E1)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F1)))))
      (a!13 (ite (>= E1 0)
                 ((_ int_to_bv 16) E1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E1)))))
      (a!14 (ite (>= F1 0)
                 ((_ int_to_bv 16) F1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F1)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!21 (ite (>= T 0)
                 ((_ int_to_bv 16) T)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!22 (ite (>= U 0)
                 ((_ int_to_bv 16) U)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!25 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!27 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S1)))))
      (a!29 (ite (>= R1 0)
                 ((_ int_to_bv 16) R1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!30 (ite (>= S1 0)
                 ((_ int_to_bv 16) S1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S1)))))
      (a!33 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) W1)))))
      (a!35 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) X1)))))
      (a!37 (ite (>= W1 0)
                 ((_ int_to_bv 16) W1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) W1)))))
      (a!38 (ite (>= X1 0)
                 ((_ int_to_bv 16) X1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) X1))))))
(let ((a!2 (ite (>= I 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) I)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= J 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) J)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!5 a!6)))))
      (a!10 (ite (>= E1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) E1)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= F1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) F1)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!13 a!14)))))
      (a!18 (ite (>= T 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) T)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= U 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) U)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!21 a!22)))))
      (a!26 (ite (>= R1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) R1)) #b1)
                 (= a!25 #b1)))
      (a!28 (ite (>= S1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) S1)) #b1)
                 (= a!27 #b1)))
      (a!31 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!29 a!30)))))
      (a!34 (ite (>= W1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) W1)) #b1)
                 (= a!33 #b1)))
      (a!36 (ite (>= X1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) X1)) #b1)
                 (= a!35 #b1)))
      (a!39 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!37 a!38))))))
(let ((a!8 (= K (ite (or a!2 a!4) a!7 (ubv_to_int (bvor a!5 a!6)))))
      (a!16 (= G1 (ite (or a!10 a!12) a!15 (ubv_to_int (bvor a!13 a!14)))))
      (a!24 (= V (ite (or a!18 a!20) a!23 (ubv_to_int (bvor a!21 a!22)))))
      (a!32 (= T1 (ite (or a!26 a!28) a!31 (ubv_to_int (bvor a!29 a!30)))))
      (a!40 (= Y1 (ite (or a!34 a!36) a!39 (ubv_to_int (bvor a!37 a!38))))))
  (and (not (= (= Y1 Z1) A2))
       (= M (= K L))
       (= J1 (= H1 I1))
       (= V1 (= T1 U1))
       (= N H2)
       (= D C)
       (= A1 Z)
       (= R 0)
       (= Q M2)
       (= P O)
       (= O 0)
       (= L 1)
       a!8
       (= J M2)
       (= I H2)
       (= H 5)
       (= G F)
       (= F E)
       (= E D)
       (= H2 N1)
       (= P1 200)
       (= H1 R2)
       a!16
       (= F1 O2)
       (= E1 J2)
       (= D1 C1)
       (= C1 15)
       (= B1 I2)
       (= Z 240)
       (= Y N2)
       (= W 0)
       a!24
       (= U N2)
       (= T I2)
       (= S R)
       (= J2 D1)
       (= G2 0)
       (= U1 K2)
       a!32
       (= S1 P2)
       (= R1 K2)
       (= Q1 P1)
       (= O1 O2)
       (= N1 1)
       (= M1 L1)
       (= L1 (- 1))
       (= K1 J2)
       (= I1 255)
       (= I2 P)
       (= B2 0)
       (= Z1 (- 1))
       a!40
       (= X1 R2)
       (= W1 K2)
       (= R2 G1)
       (= P2 Q1)
       (= N2 S)
       (= K2 M1)
       (= M2 B2)
       (= L2 0)
       (= Q2 0)
       (= O2 A1)
       (>= N (- 32768))
       (>= A1 (- 32768))
       (>= Q (- 32768))
       (>= P (- 32768))
       (>= K (- 32768))
       (>= J (- 32768))
       (>= I (- 32768))
       (>= H1 (- 32768))
       (>= G1 (- 32768))
       (>= F1 (- 32768))
       (>= E1 (- 32768))
       (>= D1 (- 32768))
       (>= B1 (- 32768))
       (>= Y (- 32768))
       (>= V (- 32768))
       (>= U (- 32768))
       (>= T (- 32768))
       (>= S (- 32768))
       (>= U1 (- 32768))
       (>= T1 (- 32768))
       (>= S1 (- 32768))
       (>= R1 (- 32768))
       (>= Q1 (- 32768))
       (>= O1 (- 32768))
       (>= M1 (- 32768))
       (>= K1 (- 32768))
       (>= Y1 (- 32768))
       (>= X1 (- 32768))
       (>= W1 (- 32768))
       (<= N 32767)
       (<= A1 32767)
       (<= Q 32767)
       (<= P 32767)
       (<= K 32767)
       (<= J 32767)
       (<= I 32767)
       (<= H1 32767)
       (<= G1 32767)
       (<= F1 32767)
       (<= E1 32767)
       (<= D1 32767)
       (<= B1 32767)
       (<= Y 32767)
       (<= V 32767)
       (<= U 32767)
       (<= T 32767)
       (<= S 32767)
       (<= U1 32767)
       (<= T1 32767)
       (<= S1 32767)
       (<= R1 32767)
       (<= Q1 32767)
       (<= O1 32767)
       (<= M1 32767)
       (<= K1 32767)
       (<= Y1 32767)
       (<= X1 32767)
       (<= W1 32767)
       (not A2)
       (not (= (= V W) X))))))
      )
      (block_12_function_f__82_83_0 H E2 A B F2 C2 D2 K2 P2 R2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Bool) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Bool) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Bool) (B2 Int) (C2 state_type) (D2 state_type) (E2 Int) (F2 tx_type) (G2 Int) (H2 Int) (I2 Int) (J2 Int) (K2 Int) (L2 Int) (M2 Int) (N2 Int) (O2 Int) (P2 Int) (Q2 Int) (R2 Int) ) 
    (=>
      (and
        (block_6_f_81_83_0 C E2 A B F2 C2 D2 G2 L2 Q2)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!5 (ite (>= I 0)
                ((_ int_to_bv 16) I)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!6 (ite (>= J 0)
                ((_ int_to_bv 16) J)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E1)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F1)))))
      (a!13 (ite (>= E1 0)
                 ((_ int_to_bv 16) E1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E1)))))
      (a!14 (ite (>= F1 0)
                 ((_ int_to_bv 16) F1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F1)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!21 (ite (>= T 0)
                 ((_ int_to_bv 16) T)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!22 (ite (>= U 0)
                 ((_ int_to_bv 16) U)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!25 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!27 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S1)))))
      (a!29 (ite (>= R1 0)
                 ((_ int_to_bv 16) R1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!30 (ite (>= S1 0)
                 ((_ int_to_bv 16) S1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S1)))))
      (a!33 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) W1)))))
      (a!35 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) X1)))))
      (a!37 (ite (>= W1 0)
                 ((_ int_to_bv 16) W1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) W1)))))
      (a!38 (ite (>= X1 0)
                 ((_ int_to_bv 16) X1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) X1))))))
(let ((a!2 (ite (>= I 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) I)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= J 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) J)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!5 a!6)))))
      (a!10 (ite (>= E1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) E1)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= F1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) F1)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!13 a!14)))))
      (a!18 (ite (>= T 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) T)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= U 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) U)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!21 a!22)))))
      (a!26 (ite (>= R1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) R1)) #b1)
                 (= a!25 #b1)))
      (a!28 (ite (>= S1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) S1)) #b1)
                 (= a!27 #b1)))
      (a!31 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!29 a!30)))))
      (a!34 (ite (>= W1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) W1)) #b1)
                 (= a!33 #b1)))
      (a!36 (ite (>= X1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) X1)) #b1)
                 (= a!35 #b1)))
      (a!39 (* (- 1) (ubv_to_int (bvmul #xffff (bvor a!37 a!38))))))
(let ((a!8 (= K (ite (or a!2 a!4) a!7 (ubv_to_int (bvor a!5 a!6)))))
      (a!16 (= G1 (ite (or a!10 a!12) a!15 (ubv_to_int (bvor a!13 a!14)))))
      (a!24 (= V (ite (or a!18 a!20) a!23 (ubv_to_int (bvor a!21 a!22)))))
      (a!32 (= T1 (ite (or a!26 a!28) a!31 (ubv_to_int (bvor a!29 a!30)))))
      (a!40 (= Y1 (ite (or a!34 a!36) a!39 (ubv_to_int (bvor a!37 a!38))))))
  (and (not (= (= Y1 Z1) A2))
       (= M (= K L))
       (= J1 (= H1 I1))
       (= V1 (= T1 U1))
       (= N H2)
       (= D C)
       (= A1 Z)
       (= R 0)
       (= Q M2)
       (= P O)
       (= O 0)
       (= L 1)
       a!8
       (= J M2)
       (= I H2)
       (= H G)
       (= G F)
       (= F E)
       (= E D)
       (= H2 N1)
       (= P1 200)
       (= H1 R2)
       a!16
       (= F1 O2)
       (= E1 J2)
       (= D1 C1)
       (= C1 15)
       (= B1 I2)
       (= Z 240)
       (= Y N2)
       (= W 0)
       a!24
       (= U N2)
       (= T I2)
       (= S R)
       (= J2 D1)
       (= G2 0)
       (= U1 K2)
       a!32
       (= S1 P2)
       (= R1 K2)
       (= Q1 P1)
       (= O1 O2)
       (= N1 1)
       (= M1 L1)
       (= L1 (- 1))
       (= K1 J2)
       (= I1 255)
       (= I2 P)
       (= B2 0)
       (= Z1 (- 1))
       a!40
       (= X1 R2)
       (= W1 K2)
       (= R2 G1)
       (= P2 Q1)
       (= N2 S)
       (= K2 M1)
       (= M2 B2)
       (= L2 0)
       (= Q2 0)
       (= O2 A1)
       (>= N (- 32768))
       (>= A1 (- 32768))
       (>= Q (- 32768))
       (>= P (- 32768))
       (>= K (- 32768))
       (>= J (- 32768))
       (>= I (- 32768))
       (>= H1 (- 32768))
       (>= G1 (- 32768))
       (>= F1 (- 32768))
       (>= E1 (- 32768))
       (>= D1 (- 32768))
       (>= B1 (- 32768))
       (>= Y (- 32768))
       (>= V (- 32768))
       (>= U (- 32768))
       (>= T (- 32768))
       (>= S (- 32768))
       (>= U1 (- 32768))
       (>= T1 (- 32768))
       (>= S1 (- 32768))
       (>= R1 (- 32768))
       (>= Q1 (- 32768))
       (>= O1 (- 32768))
       (>= M1 (- 32768))
       (>= K1 (- 32768))
       (>= Y1 (- 32768))
       (>= X1 (- 32768))
       (>= W1 (- 32768))
       (<= N 32767)
       (<= A1 32767)
       (<= Q 32767)
       (<= P 32767)
       (<= K 32767)
       (<= J 32767)
       (<= I 32767)
       (<= H1 32767)
       (<= G1 32767)
       (<= F1 32767)
       (<= E1 32767)
       (<= D1 32767)
       (<= B1 32767)
       (<= Y 32767)
       (<= V 32767)
       (<= U 32767)
       (<= T 32767)
       (<= S 32767)
       (<= U1 32767)
       (<= T1 32767)
       (<= S1 32767)
       (<= R1 32767)
       (<= Q1 32767)
       (<= O1 32767)
       (<= M1 32767)
       (<= K1 32767)
       (<= Y1 32767)
       (<= X1 32767)
       (<= W1 32767)
       (not (= (= V W) X))))))
      )
      (block_7_return_function_f__82_83_0 H E2 A B F2 C2 D2 K2 P2 R2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        true
      )
      (block_13_function_f__82_83_0 C F A B G D E H I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (block_13_function_f__82_83_0 C J A B K F G L M N)
        (summary_3_function_f__82_83_0 D J A B K H I)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 240))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 31))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 18))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 38))
      (a!5 (>= (+ (select (balances G) J) E) 0))
      (a!6 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances G) J (+ (select (balances G) J) E))))
  (and (= G F)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value K) 0)
       (= (msg.sig K) 638722032)
       (= C 0)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!5
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= H (state_type a!7))))
      )
      (summary_4_function_f__82_83_0 D J A B K F I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__82_83_0 C F A B G D E)
        (interface_0_C_83_0 F A B D)
        (= C 0)
      )
      (interface_0_C_83_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_83_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_83_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_15_C_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_15_C_83_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_16_C_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_16_C_83_0 C F A B G D E)
        true
      )
      (contract_initializer_14_C_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_17_C_83_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_17_C_83_0 C H A B I E F)
        (contract_initializer_14_C_83_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_83_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_14_C_83_0 D H A B I F G)
        (implicit_constructor_entry_17_C_83_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_83_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__82_83_0 C F A B G D E)
        (interface_0_C_83_0 F A B D)
        (= C 3)
      )
      error_target_9_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_9_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
