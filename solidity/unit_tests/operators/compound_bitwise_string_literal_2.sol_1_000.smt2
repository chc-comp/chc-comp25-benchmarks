(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_9_function_f__52_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |summary_constructor_2_C_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |error_target_7_0| ( ) Bool)
(declare-fun |contract_initializer_after_init_14_C_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_10_function_f__52_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |block_5_function_f__52_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |block_8_function_f__52_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |block_7_return_function_f__52_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |block_11_function_f__52_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |summary_4_function_f__52_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |interface_0_C_53_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |implicit_constructor_entry_15_C_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_12_C_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_entry_13_C_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_3_function_f__52_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_6_f_51_53_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__52_53_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_5_function_f__52_53_0 C F A B G D E H)
        (and (= C 0) (= E D))
      )
      (block_6_f_51_53_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F bytes_tuple) (G Bool) (H bytes_tuple) (I Int) (J bytes_tuple) (K Int) (L state_type) (M state_type) (N Int) (O tx_type) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (block_6_f_51_53_0 C N A B O L M P)
        (let ((a!1 ((_ extract 22 21) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Q)))))
      (a!3 ((_ extract 18 18) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Q)))))
      (a!5 ((_ extract 14 13) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Q)))))
      (a!7 ((_ extract 10 10) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Q)))))
      (a!9 ((_ extract 8 8) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Q)))))
      (a!11 ((_ extract 6 5) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Q)))))
      (a!13 ((_ extract 2 1) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Q))))))
(let ((a!2 (ubv_to_int (ite (>= Q 0)
                            ((_ extract 22 21) ((_ int_to_bv 24) Q))
                            a!1)))
      (a!4 (ubv_to_int (ite (>= Q 0)
                            ((_ extract 18 18) ((_ int_to_bv 24) Q))
                            a!3)))
      (a!6 (ubv_to_int (ite (>= Q 0)
                            ((_ extract 14 13) ((_ int_to_bv 24) Q))
                            a!5)))
      (a!8 (ubv_to_int (ite (>= Q 0)
                            ((_ extract 10 10) ((_ int_to_bv 24) Q))
                            a!7)))
      (a!10 (ubv_to_int (ite (>= Q 0)
                             ((_ extract 8 8) ((_ int_to_bv 24) Q))
                             a!9)))
      (a!12 (ubv_to_int (ite (>= Q 0)
                             ((_ extract 6 5) ((_ int_to_bv 24) Q))
                             a!11)))
      (a!14 (ubv_to_int (ite (>= Q 0)
                             ((_ extract 2 1) ((_ int_to_bv 24) Q))
                             a!13))))
  (and (= (select (bytes_tuple_accessor_array J) 1) 101)
       (= (select (bytes_tuple_accessor_array J) 2) 102)
       (= (select (bytes_tuple_accessor_array J) 0) 100)
       (= (select (bytes_tuple_accessor_array H) 1) 101)
       (= (select (bytes_tuple_accessor_array H) 2) 102)
       (= (select (bytes_tuple_accessor_array H) 0) 100)
       (= (select (bytes_tuple_accessor_array F) 1) 101)
       (= (select (bytes_tuple_accessor_array F) 2) 102)
       (= (select (bytes_tuple_accessor_array F) 0) 100)
       (= (bytes_tuple_accessor_length J) 3)
       (= (bytes_tuple_accessor_length H) 3)
       (= (bytes_tuple_accessor_length F) 3)
       (= D 1)
       (= K
          (+ (* 2097152 a!2)
             (* 262144 a!4)
             (* 8192 a!6)
             (* 1024 a!8)
             (* 256 a!10)
             (* 32 a!12)
             (* 2 a!14)))
       (= E R)
       (= P 0)
       (= I Q)
       (= R K)
       (= Q 6579558)
       (>= K 0)
       (>= E 0)
       (>= I 0)
       (<= K 16777215)
       (<= E 16777215)
       (<= I 16777215)
       (not G)
       (= G (= E 6579558)))))
      )
      (block_8_function_f__52_53_0 D N A B O L M R)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_8_function_f__52_53_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__52_53_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_9_function_f__52_53_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__52_53_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_10_function_f__52_53_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__52_53_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_7_return_function_f__52_53_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__52_53_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G bytes_tuple) (H Bool) (I Int) (J bytes_tuple) (K Int) (L Int) (M bytes_tuple) (N Bool) (O bytes_tuple) (P Int) (Q bytes_tuple) (R Int) (S state_type) (T state_type) (U Int) (V tx_type) (W Int) (X Int) (Y Int) (Z Int) ) 
    (=>
      (and
        (block_6_f_51_53_0 C U A B V S T W)
        (let ((a!1 ((_ extract 23 23) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!3 ((_ extract 20 19) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!5 ((_ extract 17 15) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!7 ((_ extract 12 11) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!9 ((_ extract 9 9) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!11 ((_ extract 7 7) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!13 ((_ extract 4 3) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!15 ((_ extract 1 1) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!17 ((_ extract 22 21) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) X)))))
      (a!19 ((_ extract 18 18) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) X)))))
      (a!21 ((_ extract 14 13) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) X)))))
      (a!23 ((_ extract 10 10) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) X)))))
      (a!25 ((_ extract 8 8) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) X)))))
      (a!27 ((_ extract 6 5) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) X)))))
      (a!29 ((_ extract 2 1) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) X))))))
(let ((a!2 (ubv_to_int (ite (>= Y 0)
                            ((_ extract 23 23) ((_ int_to_bv 24) Y))
                            a!1)))
      (a!4 (ubv_to_int (ite (>= Y 0)
                            ((_ extract 20 19) ((_ int_to_bv 24) Y))
                            a!3)))
      (a!6 (ubv_to_int (ite (>= Y 0)
                            ((_ extract 17 15) ((_ int_to_bv 24) Y))
                            a!5)))
      (a!8 (ubv_to_int (ite (>= Y 0)
                            ((_ extract 12 11) ((_ int_to_bv 24) Y))
                            a!7)))
      (a!10 (ubv_to_int (ite (>= Y 0)
                             ((_ extract 9 9) ((_ int_to_bv 24) Y))
                             a!9)))
      (a!12 (ubv_to_int (ite (>= Y 0)
                             ((_ extract 7 7) ((_ int_to_bv 24) Y))
                             a!11)))
      (a!14 (ubv_to_int (ite (>= Y 0)
                             ((_ extract 4 3) ((_ int_to_bv 24) Y))
                             a!13)))
      (a!16 (ubv_to_int (ite (>= Y 0)
                             ((_ extract 1 1) ((_ int_to_bv 24) Y))
                             a!15)))
      (a!18 (ubv_to_int (ite (>= X 0)
                             ((_ extract 22 21) ((_ int_to_bv 24) X))
                             a!17)))
      (a!20 (ubv_to_int (ite (>= X 0)
                             ((_ extract 18 18) ((_ int_to_bv 24) X))
                             a!19)))
      (a!22 (ubv_to_int (ite (>= X 0)
                             ((_ extract 14 13) ((_ int_to_bv 24) X))
                             a!21)))
      (a!24 (ubv_to_int (ite (>= X 0)
                             ((_ extract 10 10) ((_ int_to_bv 24) X))
                             a!23)))
      (a!26 (ubv_to_int (ite (>= X 0)
                             ((_ extract 8 8) ((_ int_to_bv 24) X))
                             a!25)))
      (a!28 (ubv_to_int (ite (>= X 0)
                             ((_ extract 6 5) ((_ int_to_bv 24) X))
                             a!27)))
      (a!30 (ubv_to_int (ite (>= X 0)
                             ((_ extract 2 1) ((_ int_to_bv 24) X))
                             a!29))))
  (and (= N (= L 6579558))
       (= (select (bytes_tuple_accessor_array G) 1) 101)
       (= (select (bytes_tuple_accessor_array G) 2) 102)
       (= (select (bytes_tuple_accessor_array G) 0) 100)
       (= (select (bytes_tuple_accessor_array J) 1) 101)
       (= (select (bytes_tuple_accessor_array J) 2) 101)
       (= (select (bytes_tuple_accessor_array J) 0) 100)
       (= (select (bytes_tuple_accessor_array Q) 1) 101)
       (= (select (bytes_tuple_accessor_array Q) 2) 102)
       (= (select (bytes_tuple_accessor_array Q) 0) 100)
       (= (select (bytes_tuple_accessor_array O) 1) 101)
       (= (select (bytes_tuple_accessor_array O) 2) 102)
       (= (select (bytes_tuple_accessor_array O) 0) 100)
       (= (select (bytes_tuple_accessor_array M) 1) 101)
       (= (select (bytes_tuple_accessor_array M) 2) 102)
       (= (select (bytes_tuple_accessor_array M) 0) 100)
       (= (bytes_tuple_accessor_length G) 3)
       (= (bytes_tuple_accessor_length J) 3)
       (= (bytes_tuple_accessor_length Q) 3)
       (= (bytes_tuple_accessor_length O) 3)
       (= (bytes_tuple_accessor_length M) 3)
       (= L Z)
       (= F Y)
       (= E 2)
       (= P X)
       (= D C)
       (= X 6579558)
       (= K
          (+ 6579557
             (* 8388608 a!2)
             (* 524288 a!4)
             (* 32768 a!6)
             (* 2048 a!8)
             (* 512 a!10)
             (* 128 a!12)
             (* 8 a!14)
             (* 2 a!16)))
       (= I Y)
       (= Z K)
       (= R
          (+ (* 2097152 a!18)
             (* 262144 a!20)
             (* 8192 a!22)
             (* 1024 a!24)
             (* 256 a!26)
             (* 32 a!28)
             (* 2 a!30)))
       (= Y R)
       (= W 0)
       (>= L 0)
       (>= F 0)
       (>= P 0)
       (>= K 0)
       (>= I 0)
       (>= R 0)
       (<= L 16777215)
       (<= F 16777215)
       (<= P 16777215)
       (<= K 16777215)
       (<= I 16777215)
       (<= R 16777215)
       (not N)
       (= H (= F 6579558)))))
      )
      (block_9_function_f__52_53_0 E U A B V S T Z)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H bytes_tuple) (I Bool) (J Int) (K bytes_tuple) (L Int) (M Int) (N bytes_tuple) (O Bool) (P Int) (Q bytes_tuple) (R Int) (S Int) (T bytes_tuple) (U Int) (V bytes_tuple) (W Int) (X Int) (Y Int) (Z bytes_tuple) (A1 Int) (B1 Int) (C1 Bool) (D1 bytes_tuple) (E1 Int) (F1 bytes_tuple) (G1 Int) (H1 state_type) (I1 state_type) (J1 Int) (K1 tx_type) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) ) 
    (=>
      (and
        (block_6_f_51_53_0 C J1 A B K1 H1 I1 L1)
        (let ((a!1 (ite (>= U 0)
                ((_ int_to_bv 24) U)
                (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) U)))))
      (a!2 (ite (>= W 0)
                ((_ int_to_bv 24) W)
                (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) W)))))
      (a!3 (ite (>= Y 0)
                ((_ int_to_bv 24) Y)
                (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!4 (ite (>= A1 0)
                ((_ int_to_bv 24) A1)
                (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) A1)))))
      (a!5 ((_ extract 23 23) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!7 ((_ extract 20 19) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!9 ((_ extract 17 15) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!11 ((_ extract 12 11) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!13 ((_ extract 9 9) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!15 ((_ extract 7 7) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!17 ((_ extract 4 3) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!19 ((_ extract 1 1) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!21 ((_ extract 23 23) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!23 ((_ extract 22 21) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!25 ((_ extract 20 19) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!27 ((_ extract 18 17) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!29 ((_ extract 16 15) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!31 ((_ extract 14 13) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!33 ((_ extract 12 11) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!35 ((_ extract 10 10) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!37 ((_ extract 9 9) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!39 ((_ extract 8 8) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!41 ((_ extract 7 7) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!43 ((_ extract 6 5) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!45 ((_ extract 4 3) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!47 ((_ extract 2 2) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!49 (bvmul #b11 ((_ extract 1 0) ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!52 ((_ extract 22 21) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!54 ((_ extract 18 18) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!56 ((_ extract 14 13) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!58 ((_ extract 10 10) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!60 ((_ extract 8 8) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!62 ((_ extract 6 5) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!64 ((_ extract 2 1) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1))))))
(let ((a!6 (ubv_to_int (ite (>= N1 0)
                            ((_ extract 23 23) ((_ int_to_bv 24) N1))
                            a!5)))
      (a!8 (ubv_to_int (ite (>= N1 0)
                            ((_ extract 20 19) ((_ int_to_bv 24) N1))
                            a!7)))
      (a!10 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 17 15) ((_ int_to_bv 24) N1))
                             a!9)))
      (a!12 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 12 11) ((_ int_to_bv 24) N1))
                             a!11)))
      (a!14 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 9 9) ((_ int_to_bv 24) N1))
                             a!13)))
      (a!16 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 7 7) ((_ int_to_bv 24) N1))
                             a!15)))
      (a!18 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 4 3) ((_ int_to_bv 24) N1))
                             a!17)))
      (a!20 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 1 1) ((_ int_to_bv 24) N1))
                             a!19)))
      (a!22 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 23 23) ((_ int_to_bv 24) O1))
                             a!21)))
      (a!24 (bvnot (ite (>= O1 0)
                        ((_ extract 22 21) ((_ int_to_bv 24) O1))
                        a!23)))
      (a!26 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 20 19) ((_ int_to_bv 24) O1))
                             a!25)))
      (a!28 (bvnot (ite (>= O1 0)
                        ((_ extract 18 17) ((_ int_to_bv 24) O1))
                        a!27)))
      (a!30 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 16 15) ((_ int_to_bv 24) O1))
                             a!29)))
      (a!32 (bvnot (ite (>= O1 0)
                        ((_ extract 14 13) ((_ int_to_bv 24) O1))
                        a!31)))
      (a!34 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 12 11) ((_ int_to_bv 24) O1))
                             a!33)))
      (a!36 (bvnot (ite (>= O1 0)
                        ((_ extract 10 10) ((_ int_to_bv 24) O1))
                        a!35)))
      (a!38 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 9 9) ((_ int_to_bv 24) O1))
                             a!37)))
      (a!40 (bvnot (ite (>= O1 0) ((_ extract 8 8) ((_ int_to_bv 24) O1)) a!39)))
      (a!42 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 7 7) ((_ int_to_bv 24) O1))
                             a!41)))
      (a!44 (bvnot (ite (>= O1 0) ((_ extract 6 5) ((_ int_to_bv 24) O1)) a!43)))
      (a!46 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 4 3) ((_ int_to_bv 24) O1))
                             a!45)))
      (a!48 (bvnot (ite (>= O1 0) ((_ extract 2 2) ((_ int_to_bv 24) O1)) a!47)))
      (a!50 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 1 0) ((_ int_to_bv 24) O1))
                             a!49)))
      (a!53 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 22 21) ((_ int_to_bv 24) M1))
                             a!52)))
      (a!55 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 18 18) ((_ int_to_bv 24) M1))
                             a!54)))
      (a!57 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 14 13) ((_ int_to_bv 24) M1))
                             a!56)))
      (a!59 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 10 10) ((_ int_to_bv 24) M1))
                             a!58)))
      (a!61 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 8 8) ((_ int_to_bv 24) M1))
                             a!60)))
      (a!63 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 6 5) ((_ int_to_bv 24) M1))
                             a!62)))
      (a!65 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 2 1) ((_ int_to_bv 24) M1))
                             a!64))))
(let ((a!51 (= R
               (+ (* 8388608 a!22)
                  (* 2097152 (ubv_to_int a!24))
                  (* 524288 a!26)
                  (* 131072 (ubv_to_int a!28))
                  (* 32768 a!30)
                  (* 8192 (ubv_to_int a!32))
                  (* 2048 a!34)
                  (* 1024 (ubv_to_int a!36))
                  (* 512 a!38)
                  (* 256 (ubv_to_int a!40))
                  (* 128 a!42)
                  (* 32 (ubv_to_int a!44))
                  (* 8 a!46)
                  (* 4 (ubv_to_int a!48))
                  a!50))))
  (and (= I (= G 6579558))
       (= C1 (= S B1))
       (= (select (bytes_tuple_accessor_array N) 1) 101)
       (= (select (bytes_tuple_accessor_array N) 2) 102)
       (= (select (bytes_tuple_accessor_array N) 0) 100)
       (= (select (bytes_tuple_accessor_array Z) 1) 101)
       (= (select (bytes_tuple_accessor_array Z) 2) 100)
       (= (select (bytes_tuple_accessor_array Z) 0) 102)
       (= (select (bytes_tuple_accessor_array Q) 1) 101)
       (= (select (bytes_tuple_accessor_array Q) 2) 100)
       (= (select (bytes_tuple_accessor_array Q) 0) 102)
       (= (select (bytes_tuple_accessor_array V) 1) 101)
       (= (select (bytes_tuple_accessor_array V) 2) 101)
       (= (select (bytes_tuple_accessor_array V) 0) 100)
       (= (select (bytes_tuple_accessor_array K) 1) 101)
       (= (select (bytes_tuple_accessor_array K) 2) 101)
       (= (select (bytes_tuple_accessor_array K) 0) 100)
       (= (select (bytes_tuple_accessor_array H) 1) 101)
       (= (select (bytes_tuple_accessor_array H) 2) 102)
       (= (select (bytes_tuple_accessor_array H) 0) 100)
       (= (select (bytes_tuple_accessor_array T) 1) 101)
       (= (select (bytes_tuple_accessor_array T) 2) 102)
       (= (select (bytes_tuple_accessor_array T) 0) 100)
       (= (select (bytes_tuple_accessor_array F1) 1) 101)
       (= (select (bytes_tuple_accessor_array F1) 2) 102)
       (= (select (bytes_tuple_accessor_array F1) 0) 100)
       (= (select (bytes_tuple_accessor_array D1) 1) 101)
       (= (select (bytes_tuple_accessor_array D1) 2) 102)
       (= (select (bytes_tuple_accessor_array D1) 0) 100)
       (= (bytes_tuple_accessor_length N) 3)
       (= (bytes_tuple_accessor_length Z) 3)
       (= (bytes_tuple_accessor_length Q) 3)
       (= (bytes_tuple_accessor_length V) 3)
       (= (bytes_tuple_accessor_length K) 3)
       (= (bytes_tuple_accessor_length H) 3)
       (= (bytes_tuple_accessor_length T) 3)
       (= (bytes_tuple_accessor_length F1) 3)
       (= (bytes_tuple_accessor_length D1) 3)
       (= X (ubv_to_int (bvor a!1 a!2)))
       (= B1 (ubv_to_int (bvxor a!3 a!4)))
       (= M O1)
       (= L
          (+ 6579557
             (* 8388608 a!6)
             (* 524288 a!8)
             (* 32768 a!10)
             (* 2048 a!12)
             (* 512 a!14)
             (* 128 a!16)
             (* 8 a!18)
             (* 2 a!20)))
       (= F 3)
       (= G N1)
       (= L1 0)
       (= U 6579558)
       (= P O1)
       (= J N1)
       (= E D)
       (= D C)
       (= W 6579557)
       (= S P1)
       a!51
       (= N1 G1)
       (= G1
          (+ (* 2097152 a!53)
             (* 262144 a!55)
             (* 8192 a!57)
             (* 1024 a!59)
             (* 256 a!61)
             (* 32 a!63)
             (* 2 a!65)))
       (= E1 M1)
       (= A1 6710628)
       (= Y X)
       (= P1 R)
       (= O1 L)
       (= M1 6579558)
       (>= X 0)
       (>= B1 0)
       (>= M 0)
       (>= L 0)
       (>= G 0)
       (>= U 0)
       (>= P 0)
       (>= J 0)
       (>= W 0)
       (>= S 0)
       (>= R 0)
       (>= G1 0)
       (>= E1 0)
       (>= A1 0)
       (>= Y 0)
       (<= X 16777215)
       (<= B1 16777215)
       (<= M 16777215)
       (<= L 16777215)
       (<= G 16777215)
       (<= U 16777215)
       (<= P 16777215)
       (<= J 16777215)
       (<= W 16777215)
       (<= S 16777215)
       (<= R 16777215)
       (<= G1 16777215)
       (<= E1 16777215)
       (<= A1 16777215)
       (<= Y 16777215)
       (not C1)
       (= O (= M 6579558))))))
      )
      (block_10_function_f__52_53_0 F J1 A B K1 H1 I1 P1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H bytes_tuple) (I Bool) (J Int) (K bytes_tuple) (L Int) (M Int) (N bytes_tuple) (O Bool) (P Int) (Q bytes_tuple) (R Int) (S Int) (T bytes_tuple) (U Int) (V bytes_tuple) (W Int) (X Int) (Y Int) (Z bytes_tuple) (A1 Int) (B1 Int) (C1 Bool) (D1 bytes_tuple) (E1 Int) (F1 bytes_tuple) (G1 Int) (H1 state_type) (I1 state_type) (J1 Int) (K1 tx_type) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) ) 
    (=>
      (and
        (block_6_f_51_53_0 C J1 A B K1 H1 I1 L1)
        (let ((a!1 (ite (>= U 0)
                ((_ int_to_bv 24) U)
                (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) U)))))
      (a!2 (ite (>= W 0)
                ((_ int_to_bv 24) W)
                (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) W)))))
      (a!3 (ite (>= Y 0)
                ((_ int_to_bv 24) Y)
                (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) Y)))))
      (a!4 (ite (>= A1 0)
                ((_ int_to_bv 24) A1)
                (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) A1)))))
      (a!5 ((_ extract 23 23) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!7 ((_ extract 20 19) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!9 ((_ extract 17 15) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!11 ((_ extract 12 11) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!13 ((_ extract 9 9) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!15 ((_ extract 7 7) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!17 ((_ extract 4 3) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!19 ((_ extract 1 1) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) N1)))))
      (a!21 ((_ extract 23 23) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!23 ((_ extract 22 21) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!25 ((_ extract 20 19) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!27 ((_ extract 18 17) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!29 ((_ extract 16 15) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!31 ((_ extract 14 13) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!33 ((_ extract 12 11) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!35 ((_ extract 10 10) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!37 ((_ extract 9 9) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!39 ((_ extract 8 8) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!41 ((_ extract 7 7) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!43 ((_ extract 6 5) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!45 ((_ extract 4 3) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!47 ((_ extract 2 2) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!49 (bvmul #b11 ((_ extract 1 0) ((_ int_to_bv 24) (* (- 1) O1)))))
      (a!52 ((_ extract 22 21) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!54 ((_ extract 18 18) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!56 ((_ extract 14 13) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!58 ((_ extract 10 10) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!60 ((_ extract 8 8) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!62 ((_ extract 6 5) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1)))))
      (a!64 ((_ extract 2 1) (bvmul #xffffff ((_ int_to_bv 24) (* (- 1) M1))))))
(let ((a!6 (ubv_to_int (ite (>= N1 0)
                            ((_ extract 23 23) ((_ int_to_bv 24) N1))
                            a!5)))
      (a!8 (ubv_to_int (ite (>= N1 0)
                            ((_ extract 20 19) ((_ int_to_bv 24) N1))
                            a!7)))
      (a!10 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 17 15) ((_ int_to_bv 24) N1))
                             a!9)))
      (a!12 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 12 11) ((_ int_to_bv 24) N1))
                             a!11)))
      (a!14 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 9 9) ((_ int_to_bv 24) N1))
                             a!13)))
      (a!16 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 7 7) ((_ int_to_bv 24) N1))
                             a!15)))
      (a!18 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 4 3) ((_ int_to_bv 24) N1))
                             a!17)))
      (a!20 (ubv_to_int (ite (>= N1 0)
                             ((_ extract 1 1) ((_ int_to_bv 24) N1))
                             a!19)))
      (a!22 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 23 23) ((_ int_to_bv 24) O1))
                             a!21)))
      (a!24 (bvnot (ite (>= O1 0)
                        ((_ extract 22 21) ((_ int_to_bv 24) O1))
                        a!23)))
      (a!26 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 20 19) ((_ int_to_bv 24) O1))
                             a!25)))
      (a!28 (bvnot (ite (>= O1 0)
                        ((_ extract 18 17) ((_ int_to_bv 24) O1))
                        a!27)))
      (a!30 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 16 15) ((_ int_to_bv 24) O1))
                             a!29)))
      (a!32 (bvnot (ite (>= O1 0)
                        ((_ extract 14 13) ((_ int_to_bv 24) O1))
                        a!31)))
      (a!34 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 12 11) ((_ int_to_bv 24) O1))
                             a!33)))
      (a!36 (bvnot (ite (>= O1 0)
                        ((_ extract 10 10) ((_ int_to_bv 24) O1))
                        a!35)))
      (a!38 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 9 9) ((_ int_to_bv 24) O1))
                             a!37)))
      (a!40 (bvnot (ite (>= O1 0) ((_ extract 8 8) ((_ int_to_bv 24) O1)) a!39)))
      (a!42 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 7 7) ((_ int_to_bv 24) O1))
                             a!41)))
      (a!44 (bvnot (ite (>= O1 0) ((_ extract 6 5) ((_ int_to_bv 24) O1)) a!43)))
      (a!46 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 4 3) ((_ int_to_bv 24) O1))
                             a!45)))
      (a!48 (bvnot (ite (>= O1 0) ((_ extract 2 2) ((_ int_to_bv 24) O1)) a!47)))
      (a!50 (ubv_to_int (ite (>= O1 0)
                             ((_ extract 1 0) ((_ int_to_bv 24) O1))
                             a!49)))
      (a!53 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 22 21) ((_ int_to_bv 24) M1))
                             a!52)))
      (a!55 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 18 18) ((_ int_to_bv 24) M1))
                             a!54)))
      (a!57 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 14 13) ((_ int_to_bv 24) M1))
                             a!56)))
      (a!59 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 10 10) ((_ int_to_bv 24) M1))
                             a!58)))
      (a!61 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 8 8) ((_ int_to_bv 24) M1))
                             a!60)))
      (a!63 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 6 5) ((_ int_to_bv 24) M1))
                             a!62)))
      (a!65 (ubv_to_int (ite (>= M1 0)
                             ((_ extract 2 1) ((_ int_to_bv 24) M1))
                             a!64))))
(let ((a!51 (= R
               (+ (* 8388608 a!22)
                  (* 2097152 (ubv_to_int a!24))
                  (* 524288 a!26)
                  (* 131072 (ubv_to_int a!28))
                  (* 32768 a!30)
                  (* 8192 (ubv_to_int a!32))
                  (* 2048 a!34)
                  (* 1024 (ubv_to_int a!36))
                  (* 512 a!38)
                  (* 256 (ubv_to_int a!40))
                  (* 128 a!42)
                  (* 32 (ubv_to_int a!44))
                  (* 8 a!46)
                  (* 4 (ubv_to_int a!48))
                  a!50))))
  (and (= I (= G 6579558))
       (= C1 (= S B1))
       (= (select (bytes_tuple_accessor_array N) 1) 101)
       (= (select (bytes_tuple_accessor_array N) 2) 102)
       (= (select (bytes_tuple_accessor_array N) 0) 100)
       (= (select (bytes_tuple_accessor_array Z) 1) 101)
       (= (select (bytes_tuple_accessor_array Z) 2) 100)
       (= (select (bytes_tuple_accessor_array Z) 0) 102)
       (= (select (bytes_tuple_accessor_array Q) 1) 101)
       (= (select (bytes_tuple_accessor_array Q) 2) 100)
       (= (select (bytes_tuple_accessor_array Q) 0) 102)
       (= (select (bytes_tuple_accessor_array V) 1) 101)
       (= (select (bytes_tuple_accessor_array V) 2) 101)
       (= (select (bytes_tuple_accessor_array V) 0) 100)
       (= (select (bytes_tuple_accessor_array K) 1) 101)
       (= (select (bytes_tuple_accessor_array K) 2) 101)
       (= (select (bytes_tuple_accessor_array K) 0) 100)
       (= (select (bytes_tuple_accessor_array H) 1) 101)
       (= (select (bytes_tuple_accessor_array H) 2) 102)
       (= (select (bytes_tuple_accessor_array H) 0) 100)
       (= (select (bytes_tuple_accessor_array T) 1) 101)
       (= (select (bytes_tuple_accessor_array T) 2) 102)
       (= (select (bytes_tuple_accessor_array T) 0) 100)
       (= (select (bytes_tuple_accessor_array F1) 1) 101)
       (= (select (bytes_tuple_accessor_array F1) 2) 102)
       (= (select (bytes_tuple_accessor_array F1) 0) 100)
       (= (select (bytes_tuple_accessor_array D1) 1) 101)
       (= (select (bytes_tuple_accessor_array D1) 2) 102)
       (= (select (bytes_tuple_accessor_array D1) 0) 100)
       (= (bytes_tuple_accessor_length N) 3)
       (= (bytes_tuple_accessor_length Z) 3)
       (= (bytes_tuple_accessor_length Q) 3)
       (= (bytes_tuple_accessor_length V) 3)
       (= (bytes_tuple_accessor_length K) 3)
       (= (bytes_tuple_accessor_length H) 3)
       (= (bytes_tuple_accessor_length T) 3)
       (= (bytes_tuple_accessor_length F1) 3)
       (= (bytes_tuple_accessor_length D1) 3)
       (= X (ubv_to_int (bvor a!1 a!2)))
       (= B1 (ubv_to_int (bvxor a!3 a!4)))
       (= M O1)
       (= L
          (+ 6579557
             (* 8388608 a!6)
             (* 524288 a!8)
             (* 32768 a!10)
             (* 2048 a!12)
             (* 512 a!14)
             (* 128 a!16)
             (* 8 a!18)
             (* 2 a!20)))
       (= F E)
       (= G N1)
       (= L1 0)
       (= U 6579558)
       (= P O1)
       (= J N1)
       (= E D)
       (= D C)
       (= W 6579557)
       (= S P1)
       a!51
       (= N1 G1)
       (= G1
          (+ (* 2097152 a!53)
             (* 262144 a!55)
             (* 8192 a!57)
             (* 1024 a!59)
             (* 256 a!61)
             (* 32 a!63)
             (* 2 a!65)))
       (= E1 M1)
       (= A1 6710628)
       (= Y X)
       (= P1 R)
       (= O1 L)
       (= M1 6579558)
       (>= X 0)
       (>= B1 0)
       (>= M 0)
       (>= L 0)
       (>= G 0)
       (>= U 0)
       (>= P 0)
       (>= J 0)
       (>= W 0)
       (>= S 0)
       (>= R 0)
       (>= G1 0)
       (>= E1 0)
       (>= A1 0)
       (>= Y 0)
       (<= X 16777215)
       (<= B1 16777215)
       (<= M 16777215)
       (<= L 16777215)
       (<= G 16777215)
       (<= U 16777215)
       (<= P 16777215)
       (<= J 16777215)
       (<= W 16777215)
       (<= S 16777215)
       (<= R 16777215)
       (<= G1 16777215)
       (<= E1 16777215)
       (<= A1 16777215)
       (<= Y 16777215)
       (= O (= M 6579558))))))
      )
      (block_7_return_function_f__52_53_0 F J1 A B K1 H1 I1 P1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        true
      )
      (block_11_function_f__52_53_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) (L Int) ) 
    (=>
      (and
        (block_11_function_f__52_53_0 C J A B K F G L)
        (summary_3_function_f__52_53_0 D J A B K H I)
        (let ((a!1 (store (balances G) J (+ (select (balances G) J) E)))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 240))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 18))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 31))
      (a!5 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 38))
      (a!6 (>= (+ (select (balances G) J) E) 0))
      (a!7 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  (and (= H (state_type a!1))
       a!2
       a!3
       a!4
       a!5
       (= (msg.value K) 0)
       (= (msg.sig K) 638722032)
       (= C 0)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!6
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!7
       (= G F)))
      )
      (summary_4_function_f__52_53_0 D J A B K F I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__52_53_0 C F A B G D E)
        (interface_0_C_53_0 F A B D)
        (= C 0)
      )
      (interface_0_C_53_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_53_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_53_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_13_C_53_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_13_C_53_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_14_C_53_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_14_C_53_0 C F A B G D E)
        true
      )
      (contract_initializer_12_C_53_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_15_C_53_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_15_C_53_0 C H A B I E F)
        (contract_initializer_12_C_53_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_53_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_12_C_53_0 D H A B I F G)
        (implicit_constructor_entry_15_C_53_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_53_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__52_53_0 C F A B G D E)
        (interface_0_C_53_0 F A B D)
        (= C 3)
      )
      error_target_7_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_7_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
