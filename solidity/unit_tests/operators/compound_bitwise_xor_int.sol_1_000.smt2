(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |implicit_constructor_entry_15_C_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_10_function_f__56_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |error_target_5_0| ( ) Bool)
(declare-fun |block_6_f_55_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_7_return_function_f__56_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_5_function_f__56_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |contract_initializer_12_C_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_entry_13_C_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_after_init_14_C_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_11_function_f__56_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_8_function_f__56_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |summary_constructor_2_C_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_4_function_f__56_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_function_f__56_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |interface_0_C_57_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |summary_3_function_f__56_57_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__56_57_0 C F A B G D E H I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_5_function_f__56_57_0 C F A B G D E H I)
        (and (= C 0) (= E D))
      )
      (block_6_f_55_57_0 C F A B G D E H I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M state_type) (N state_type) (O Int) (P tx_type) (Q Int) (R Int) (S Int) (T Int) (U Int) ) 
    (=>
      (and
        (block_6_f_55_57_0 C O A B P M N Q T)
        (let ((a!1 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) R)))))
      (a!3 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) F)))))
      (a!5 (ite (>= R 0)
                ((_ int_to_bv 8) R)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) R)))))
      (a!6 (ite (>= F 0)
                ((_ int_to_bv 8) F)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) F))))))
(let ((a!2 (ite (>= R 0)
                (= ((_ extract 7 7) ((_ int_to_bv 8) R)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= F 0)
                (= ((_ extract 7 7) ((_ int_to_bv 8) F)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!5 a!6))))))
(let ((a!8 (= G (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7))))
  (and a!8
       (= L 0)
       (= Q 0)
       (= I 1)
       (= H S)
       (= F U)
       (= E R)
       (= D 1)
       (= U L)
       (= S G)
       (= K 1)
       (= T 0)
       (= R K)
       (>= G (- 128))
       (>= H (- 128))
       (>= F (- 128))
       (>= E (- 128))
       (<= G 127)
       (<= H 127)
       (<= F 127)
       (<= E 127)
       (not J)
       (not (= (= H I) J))))))
      )
      (block_8_function_f__56_57_0 D O A B P M N S U)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_8_function_f__56_57_0 C F A B G D E H I)
        true
      )
      (summary_3_function_f__56_57_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_9_function_f__56_57_0 C F A B G D E H I)
        true
      )
      (summary_3_function_f__56_57_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_10_function_f__56_57_0 C F A B G D E H I)
        true
      )
      (summary_3_function_f__56_57_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_7_return_function_f__56_57_0 C F A B G D E H I)
        true
      )
      (summary_3_function_f__56_57_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z state_type) (A1 state_type) (B1 Int) (C1 tx_type) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) ) 
    (=>
      (and
        (block_6_f_55_57_0 C B1 A B C1 Z A1 D1 I1)
        (let ((a!1 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) E1)))))
      (a!3 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) G)))))
      (a!5 (ite (>= E1 0)
                ((_ int_to_bv 8) E1)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) E1)))))
      (a!6 (ite (>= G 0)
                ((_ int_to_bv 8) G)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) G)))))
      (a!9 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) G1)))))
      (a!11 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) S)))))
      (a!13 (ite (>= G1 0)
                 ((_ int_to_bv 8) G1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) G1)))))
      (a!14 (ite (>= S 0)
                 ((_ int_to_bv 8) S)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) S))))))
(let ((a!2 (ite (>= E1 0)
                (= ((_ extract 7 7) ((_ int_to_bv 8) E1)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= G 0)
                (= ((_ extract 7 7) ((_ int_to_bv 8) G)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!5 a!6)))))
      (a!10 (ite (>= G1 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) G1)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= S 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) S)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!13 a!14))))))
(let ((a!8 (= H (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= T (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15))))
  (and (= W (= U V))
       a!8
       (= D1 0)
       (= O J1)
       (= N M)
       (= M (- 1))
       (= L F1)
       (= J 1)
       (= I F1)
       (= G J1)
       (= F E1)
       (= E 2)
       (= D C)
       (= G1 N)
       (= Y 0)
       (= X 1)
       (= V (- 2))
       (= U H1)
       a!16
       (= S K1)
       (= R G1)
       (= Q P)
       (= P 1)
       (= K1 Q)
       (= I1 0)
       (= F1 H)
       (= E1 X)
       (= J1 Y)
       (= H1 T)
       (>= H (- 128))
       (>= O (- 128))
       (>= N (- 128))
       (>= L (- 128))
       (>= I (- 128))
       (>= G (- 128))
       (>= F (- 128))
       (>= U (- 128))
       (>= T (- 128))
       (>= S (- 128))
       (>= R (- 128))
       (>= Q (- 128))
       (<= H 127)
       (<= O 127)
       (<= N 127)
       (<= L 127)
       (<= I 127)
       (<= G 127)
       (<= F 127)
       (<= U 127)
       (<= T 127)
       (<= S 127)
       (<= R 127)
       (<= Q 127)
       (not W)
       (not (= (= I J) K))))))
      )
      (block_9_function_f__56_57_0 E B1 A B C1 Z A1 H1 K1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 state_type) (K1 state_type) (L1 Int) (M1 tx_type) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) ) 
    (=>
      (and
        (block_6_f_55_57_0 C L1 A B M1 J1 K1 N1 T1)
        (let ((a!1 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) O1)))))
      (a!3 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) H)))))
      (a!5 (ite (>= O1 0)
                ((_ int_to_bv 8) O1)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) O1)))))
      (a!6 (ite (>= H 0)
                ((_ int_to_bv 8) H)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) H)))))
      (a!9 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) Q1)))))
      (a!11 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) T)))))
      (a!13 (ite (>= Q1 0)
                 ((_ int_to_bv 8) Q1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) Q1)))))
      (a!14 (ite (>= T 0)
                 ((_ int_to_bv 8) T)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) T)))))
      (a!17 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) V1)))))
      (a!19 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) C1)))))
      (a!21 (ite (>= V1 0)
                 ((_ int_to_bv 8) V1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) V1)))))
      (a!22 (ite (>= C1 0)
                 ((_ int_to_bv 8) C1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) C1))))))
(let ((a!2 (ite (>= O1 0)
                (= ((_ extract 7 7) ((_ int_to_bv 8) O1)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= H 0)
                (= ((_ extract 7 7) ((_ int_to_bv 8) H)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!5 a!6)))))
      (a!10 (ite (>= Q1 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) Q1)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= T 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) T)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!13 a!14)))))
      (a!18 (ite (>= V1 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) V1)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= C1 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) C1)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!21 a!22))))))
(let ((a!8 (= I (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= U (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15)))
      (a!24 (= D1 (ite (= a!18 a!20) (ubv_to_int (bvxor a!21 a!22)) a!23))))
  (and (= X (= V W))
       (= G1 (= E1 F1))
       a!8
       (= I1 0)
       (= N1 0)
       (= T V1)
       (= K 1)
       (= J P1)
       (= H U1)
       (= G O1)
       (= F 3)
       (= E D)
       (= D C)
       (= P1 I)
       (= A1 Z)
       (= Z 4)
       (= Y R1)
       (= W (- 2))
       (= V R1)
       a!16
       (= S Q1)
       (= R Q)
       (= Q 1)
       (= P U1)
       (= O N)
       (= N (- 1))
       (= M P1)
       (= S1 A1)
       (= O1 H1)
       (= H1 1)
       (= F1 5)
       (= E1 W1)
       a!24
       (= C1 S1)
       (= B1 V1)
       (= W1 D1)
       (= U1 I1)
       (= R1 U)
       (= Q1 O)
       (= V1 R)
       (= T1 0)
       (>= I (- 128))
       (>= T (- 128))
       (>= J (- 128))
       (>= H (- 128))
       (>= G (- 128))
       (>= A1 (- 128))
       (>= Y (- 128))
       (>= V (- 128))
       (>= U (- 128))
       (>= S (- 128))
       (>= R (- 128))
       (>= P (- 128))
       (>= O (- 128))
       (>= M (- 128))
       (>= E1 (- 128))
       (>= D1 (- 128))
       (>= C1 (- 128))
       (>= B1 (- 128))
       (<= I 127)
       (<= T 127)
       (<= J 127)
       (<= H 127)
       (<= G 127)
       (<= A1 127)
       (<= Y 127)
       (<= V 127)
       (<= U 127)
       (<= S 127)
       (<= R 127)
       (<= P 127)
       (<= O 127)
       (<= M 127)
       (<= E1 127)
       (<= D1 127)
       (<= C1 127)
       (<= B1 127)
       (not G1)
       (not (= (= J K) L))))))
      )
      (block_10_function_f__56_57_0 F L1 A B M1 J1 K1 S1 W1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 state_type) (K1 state_type) (L1 Int) (M1 tx_type) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) ) 
    (=>
      (and
        (block_6_f_55_57_0 C L1 A B M1 J1 K1 N1 T1)
        (let ((a!1 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) O1)))))
      (a!3 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) H)))))
      (a!5 (ite (>= O1 0)
                ((_ int_to_bv 8) O1)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) O1)))))
      (a!6 (ite (>= H 0)
                ((_ int_to_bv 8) H)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) H)))))
      (a!9 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) Q1)))))
      (a!11 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) T)))))
      (a!13 (ite (>= Q1 0)
                 ((_ int_to_bv 8) Q1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) Q1)))))
      (a!14 (ite (>= T 0)
                 ((_ int_to_bv 8) T)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) T)))))
      (a!17 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) V1)))))
      (a!19 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) C1)))))
      (a!21 (ite (>= V1 0)
                 ((_ int_to_bv 8) V1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) V1)))))
      (a!22 (ite (>= C1 0)
                 ((_ int_to_bv 8) C1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) C1))))))
(let ((a!2 (ite (>= O1 0)
                (= ((_ extract 7 7) ((_ int_to_bv 8) O1)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= H 0)
                (= ((_ extract 7 7) ((_ int_to_bv 8) H)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!5 a!6)))))
      (a!10 (ite (>= Q1 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) Q1)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= T 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) T)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!13 a!14)))))
      (a!18 (ite (>= V1 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) V1)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= C1 0)
                 (= ((_ extract 7 7) ((_ int_to_bv 8) C1)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xff (bvxor a!21 a!22))))))
(let ((a!8 (= I (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= U (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15)))
      (a!24 (= D1 (ite (= a!18 a!20) (ubv_to_int (bvxor a!21 a!22)) a!23))))
  (and (= X (= V W))
       (= G1 (= E1 F1))
       a!8
       (= I1 0)
       (= N1 0)
       (= T V1)
       (= K 1)
       (= J P1)
       (= H U1)
       (= G O1)
       (= F E)
       (= E D)
       (= D C)
       (= P1 I)
       (= A1 Z)
       (= Z 4)
       (= Y R1)
       (= W (- 2))
       (= V R1)
       a!16
       (= S Q1)
       (= R Q)
       (= Q 1)
       (= P U1)
       (= O N)
       (= N (- 1))
       (= M P1)
       (= S1 A1)
       (= O1 H1)
       (= H1 1)
       (= F1 5)
       (= E1 W1)
       a!24
       (= C1 S1)
       (= B1 V1)
       (= W1 D1)
       (= U1 I1)
       (= R1 U)
       (= Q1 O)
       (= V1 R)
       (= T1 0)
       (>= I (- 128))
       (>= T (- 128))
       (>= J (- 128))
       (>= H (- 128))
       (>= G (- 128))
       (>= A1 (- 128))
       (>= Y (- 128))
       (>= V (- 128))
       (>= U (- 128))
       (>= S (- 128))
       (>= R (- 128))
       (>= P (- 128))
       (>= O (- 128))
       (>= M (- 128))
       (>= E1 (- 128))
       (>= D1 (- 128))
       (>= C1 (- 128))
       (>= B1 (- 128))
       (<= I 127)
       (<= T 127)
       (<= J 127)
       (<= H 127)
       (<= G 127)
       (<= A1 127)
       (<= Y 127)
       (<= V 127)
       (<= U 127)
       (<= S 127)
       (<= R 127)
       (<= P 127)
       (<= O 127)
       (<= M 127)
       (<= E1 127)
       (<= D1 127)
       (<= C1 127)
       (<= B1 127)
       (not (= (= J K) L))))))
      )
      (block_7_return_function_f__56_57_0 F L1 A B M1 J1 K1 S1 W1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        true
      )
      (block_11_function_f__56_57_0 C F A B G D E H I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) (L Int) (M Int) ) 
    (=>
      (and
        (block_11_function_f__56_57_0 C J A B K F G L M)
        (summary_3_function_f__56_57_0 D J A B K H I)
        (let ((a!1 (store (balances G) J (+ (select (balances G) J) E)))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 240))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 31))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 18))
      (a!5 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 38))
      (a!6 (>= (+ (select (balances G) J) E) 0))
      (a!7 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  (and (= H (state_type a!1))
       a!2
       a!3
       a!4
       a!5
       (= (msg.value K) 0)
       (= (msg.sig K) 638722032)
       (= C 0)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!6
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!7
       (= G F)))
      )
      (summary_4_function_f__56_57_0 D J A B K F I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__56_57_0 C F A B G D E)
        (interface_0_C_57_0 F A B D)
        (= C 0)
      )
      (interface_0_C_57_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_57_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_57_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_13_C_57_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_13_C_57_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_14_C_57_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_14_C_57_0 C F A B G D E)
        true
      )
      (contract_initializer_12_C_57_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_15_C_57_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_15_C_57_0 C H A B I E F)
        (contract_initializer_12_C_57_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_57_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_12_C_57_0 D H A B I F G)
        (implicit_constructor_entry_15_C_57_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_57_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__56_57_0 C F A B G D E)
        (interface_0_C_57_0 F A B D)
        (= C 1)
      )
      error_target_5_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_5_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
