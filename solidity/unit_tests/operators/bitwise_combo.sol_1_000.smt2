(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |contract_initializer_entry_13_C_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_8_function_f__37_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |summary_3_function_f__37_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |error_target_5_0| ( ) Bool)
(declare-fun |interface_0_C_38_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |summary_constructor_2_C_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_5_function_f__37_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |implicit_constructor_entry_15_C_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_function_f__37_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_11_function_f__37_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_7_return_function_f__37_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |contract_initializer_after_init_14_C_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_10_function_f__37_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |block_6_f_36_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int ) Bool)
(declare-fun |summary_4_function_f__37_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_12_C_38_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__37_38_0 C F A B G D E H I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_5_function_f__37_38_0 C F A B G D E H I)
        (and (= C 0) (= E D))
      )
      (block_6_f_36_38_0 C F A B G D E H I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M state_type) (N state_type) (O Int) (P tx_type) (Q Int) (R Int) (S Int) (T Int) ) 
    (=>
      (and
        (block_6_f_36_38_0 C O A B P M N Q S)
        (let ((a!1 (ite (>= F 0)
                ((_ int_to_bv 8) F)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) F)))))
      (a!2 (ite (>= G 0)
                ((_ int_to_bv 8) G)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) G)))))
      (a!4 (ite (>= L 0)
                ((_ int_to_bv 8) L)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) L))))))
(let ((a!3 (ubv_to_int (bvnot (bvor (bvnot a!1) (bvnot a!2))))))
  (and (= K 255)
       (= G T)
       (= L R)
       (= I 0)
       (= H a!3)
       (= F R)
       (= E (ubv_to_int (bvnot a!4)))
       (= D 1)
       (= T E)
       (= R K)
       (= S 0)
       (= Q 0)
       (>= G 0)
       (>= L 0)
       (>= H 0)
       (>= F 0)
       (>= E 0)
       (<= G 255)
       (<= L 255)
       (<= H 255)
       (<= F 255)
       (<= E 255)
       (not J)
       (= J (= H I)))))
      )
      (block_8_function_f__37_38_0 D O A B P M N R T)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_8_function_f__37_38_0 C F A B G D E H I)
        true
      )
      (summary_3_function_f__37_38_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_9_function_f__37_38_0 C F A B G D E H I)
        true
      )
      (summary_3_function_f__37_38_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_10_function_f__37_38_0 C F A B G D E H I)
        true
      )
      (summary_3_function_f__37_38_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (block_7_return_function_f__37_38_0 C F A B G D E H I)
        true
      )
      (summary_3_function_f__37_38_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S state_type) (T state_type) (U Int) (V tx_type) (W Int) (X Int) (Y Int) (Z Int) ) 
    (=>
      (and
        (block_6_f_36_38_0 C U A B V S T W Y)
        (let ((a!1 (ite (>= L 0)
                ((_ int_to_bv 8) L)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) L)))))
      (a!2 (ite (>= M 0)
                ((_ int_to_bv 8) M)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) M)))))
      (a!3 (ite (>= G 0)
                ((_ int_to_bv 8) G)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) G)))))
      (a!4 (ite (>= H 0)
                ((_ int_to_bv 8) H)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) H)))))
      (a!6 (ite (>= R 0)
                ((_ int_to_bv 8) R)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) R))))))
(let ((a!5 (ubv_to_int (bvnot (bvor (bvnot a!3) (bvnot a!4))))))
  (and (= P (= N O))
       (= Q 255)
       (= M Z)
       (= R X)
       (= E 2)
       (= D C)
       (= O 255)
       (= N (ubv_to_int (bvor a!1 a!2)))
       (= L X)
       (= J 0)
       (= I a!5)
       (= H Z)
       (= G X)
       (= F (ubv_to_int (bvnot a!6)))
       (= Z F)
       (= X Q)
       (= Y 0)
       (= W 0)
       (>= M 0)
       (>= R 0)
       (>= N 0)
       (>= L 0)
       (>= I 0)
       (>= H 0)
       (>= G 0)
       (>= F 0)
       (<= M 255)
       (<= R 255)
       (<= N 255)
       (<= L 255)
       (<= I 255)
       (<= H 255)
       (<= G 255)
       (<= F 255)
       (not P)
       (= K (= I J)))))
      )
      (block_9_function_f__37_38_0 E U A B V S T X Z)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y state_type) (Z state_type) (A1 Int) (B1 tx_type) (C1 Int) (D1 Int) (E1 Int) (F1 Int) ) 
    (=>
      (and
        (block_6_f_36_38_0 C A1 A B B1 Y Z C1 E1)
        (let ((a!1 (ite (>= H 0)
                ((_ int_to_bv 8) H)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) H)))))
      (a!2 (ite (>= I 0)
                ((_ int_to_bv 8) I)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) I)))))
      (a!4 (ite (>= X 0)
                ((_ int_to_bv 8) X)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) X)))))
      (a!5 (ite (>= R 0)
                ((_ int_to_bv 8) R)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) R)))))
      (a!6 (ite (>= S 0)
                ((_ int_to_bv 8) S)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) S)))))
      (a!7 (ite (>= M 0)
                ((_ int_to_bv 8) M)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) M)))))
      (a!8 (ite (>= N 0)
                ((_ int_to_bv 8) N)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) N))))))
(let ((a!3 (ubv_to_int (bvnot (bvor (bvnot a!1) (bvnot a!2))))))
  (and (= Q (= O P))
       (= V (= T U))
       (= W 255)
       (= S F1)
       (= X D1)
       (= E D)
       (= D C)
       (= K 0)
       (= J a!3)
       (= I F1)
       (= H D1)
       (= G (ubv_to_int (bvnot a!4)))
       (= F 3)
       (= U 255)
       (= T (ubv_to_int (bvxor a!5 a!6)))
       (= R D1)
       (= P 255)
       (= O (ubv_to_int (bvor a!7 a!8)))
       (= N F1)
       (= M D1)
       (= F1 G)
       (= D1 W)
       (= E1 0)
       (= C1 0)
       (>= S 0)
       (>= X 0)
       (>= J 0)
       (>= I 0)
       (>= H 0)
       (>= G 0)
       (>= T 0)
       (>= R 0)
       (>= O 0)
       (>= N 0)
       (>= M 0)
       (<= S 255)
       (<= X 255)
       (<= J 255)
       (<= I 255)
       (<= H 255)
       (<= G 255)
       (<= T 255)
       (<= R 255)
       (<= O 255)
       (<= N 255)
       (<= M 255)
       (not V)
       (= L (= J K)))))
      )
      (block_10_function_f__37_38_0 F A1 A B B1 Y Z D1 F1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y state_type) (Z state_type) (A1 Int) (B1 tx_type) (C1 Int) (D1 Int) (E1 Int) (F1 Int) ) 
    (=>
      (and
        (block_6_f_36_38_0 C A1 A B B1 Y Z C1 E1)
        (let ((a!1 (ite (>= H 0)
                ((_ int_to_bv 8) H)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) H)))))
      (a!2 (ite (>= I 0)
                ((_ int_to_bv 8) I)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) I)))))
      (a!4 (ite (>= X 0)
                ((_ int_to_bv 8) X)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) X)))))
      (a!5 (ite (>= R 0)
                ((_ int_to_bv 8) R)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) R)))))
      (a!6 (ite (>= S 0)
                ((_ int_to_bv 8) S)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) S)))))
      (a!7 (ite (>= M 0)
                ((_ int_to_bv 8) M)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) M)))))
      (a!8 (ite (>= N 0)
                ((_ int_to_bv 8) N)
                (bvmul #xff ((_ int_to_bv 8) (* (- 1) N))))))
(let ((a!3 (ubv_to_int (bvnot (bvor (bvnot a!1) (bvnot a!2))))))
  (and (= Q (= O P))
       (= V (= T U))
       (= W 255)
       (= S F1)
       (= X D1)
       (= E D)
       (= D C)
       (= K 0)
       (= J a!3)
       (= I F1)
       (= H D1)
       (= G (ubv_to_int (bvnot a!4)))
       (= F E)
       (= U 255)
       (= T (ubv_to_int (bvxor a!5 a!6)))
       (= R D1)
       (= P 255)
       (= O (ubv_to_int (bvor a!7 a!8)))
       (= N F1)
       (= M D1)
       (= F1 G)
       (= D1 W)
       (= E1 0)
       (= C1 0)
       (>= S 0)
       (>= X 0)
       (>= J 0)
       (>= I 0)
       (>= H 0)
       (>= G 0)
       (>= T 0)
       (>= R 0)
       (>= O 0)
       (>= N 0)
       (>= M 0)
       (<= S 255)
       (<= X 255)
       (<= J 255)
       (<= I 255)
       (<= H 255)
       (<= G 255)
       (<= T 255)
       (<= R 255)
       (<= O 255)
       (<= N 255)
       (<= M 255)
       (= L (= J K)))))
      )
      (block_7_return_function_f__37_38_0 F A1 A B B1 Y Z D1 F1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        true
      )
      (block_11_function_f__37_38_0 C F A B G D E H I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) (L Int) (M Int) ) 
    (=>
      (and
        (block_11_function_f__37_38_0 C J A B K F G L M)
        (summary_3_function_f__37_38_0 D J A B K H I)
        (let ((a!1 (store (balances G) J (+ (select (balances G) J) E)))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 240))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 31))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 18))
      (a!5 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 38))
      (a!6 (>= (+ (select (balances G) J) E) 0))
      (a!7 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  (and (= H (state_type a!1))
       a!2
       a!3
       a!4
       a!5
       (= (msg.value K) 0)
       (= (msg.sig K) 638722032)
       (= C 0)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!6
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!7
       (= G F)))
      )
      (summary_4_function_f__37_38_0 D J A B K F I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__37_38_0 C F A B G D E)
        (interface_0_C_38_0 F A B D)
        (= C 0)
      )
      (interface_0_C_38_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_38_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_38_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_13_C_38_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_13_C_38_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_14_C_38_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_14_C_38_0 C F A B G D E)
        true
      )
      (contract_initializer_12_C_38_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_15_C_38_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_15_C_38_0 C H A B I E F)
        (contract_initializer_12_C_38_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_38_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_12_C_38_0 D H A B I F G)
        (implicit_constructor_entry_15_C_38_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_38_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__37_38_0 C F A B G D E)
        (interface_0_C_38_0 F A B D)
        (= C 1)
      )
      error_target_5_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_5_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
