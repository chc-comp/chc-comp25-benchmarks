(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_13_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |block_6_f_63_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |summary_3_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_12_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |block_5_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |block_11_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |contract_initializer_after_init_20_C_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_16_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |interface_0_C_65_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |summary_4_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_8_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |block_15_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |contract_initializer_entry_19_C_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_10_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |block_17_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |summary_constructor_2_C_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |error_target_13_0| ( ) Bool)
(declare-fun |contract_initializer_18_C_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |implicit_constructor_entry_21_C_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_7_return_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)
(declare-fun |block_14_function_f__64_65_0| ( Int Int abi_type crypto_type tx_type state_type state_type bytes_tuple ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__64_65_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_5_function_f__64_65_0 C F A B G D E H)
        (and (= C 0) (= E D))
      )
      (block_6_f_63_65_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E bytes_tuple) (F bytes_tuple) (G bytes_tuple) (H Int) (I state_type) (J state_type) (K Int) (L tx_type) (M bytes_tuple) (N bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C K A B L I J M)
        (and (= M (bytes_tuple ((as const (Array Int Int)) 0) 0))
     (= N F)
     (= (select (bytes_tuple_accessor_array F) 2) 102)
     (= (select (bytes_tuple_accessor_array F) 1) 101)
     (= (select (bytes_tuple_accessor_array F) 0) 100)
     (= (select (bytes_tuple_accessor_array E) 0) 100)
     (= (bytes_tuple_accessor_length F) 3)
     (= (bytes_tuple_accessor_length E) 1)
     (= D 1)
     (= H 0)
     (or (not (<= 0 H)) (>= H (bytes_tuple_accessor_length G)))
     (= G N))
      )
      (block_8_function_f__64_65_0 D K A B L I J N)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_8_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_9_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_10_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_11_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_12_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_13_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_14_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_15_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_16_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        (block_7_return_function_f__64_65_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__64_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F bytes_tuple) (G Int) (H bytes_tuple) (I Int) (J bytes_tuple) (K bytes_tuple) (L bytes_tuple) (M bytes_tuple) (N Int) (O Int) (P Int) (Q state_type) (R state_type) (S Int) (T tx_type) (U bytes_tuple) (V bytes_tuple) (W bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C S A B T Q R U)
        (let ((a!1 (= W
              (bytes_tuple (store (bytes_tuple_accessor_array L) N G)
                           (bytes_tuple_accessor_length L))))
      (a!2 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) O)))))
      (a!4 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) O))))))
(let ((a!3 (ubv_to_int (ite (>= O 0) ((_ extract 6 5) ((_ int_to_bv 8) O)) a!2)))
      (a!5 (ubv_to_int (ite (>= O 0) ((_ extract 2 2) ((_ int_to_bv 8) O)) a!4))))
  (and (= K V)
       (= H W)
       (= V J)
       (= M W)
       (= L V)
       a!1
       (= (select (bytes_tuple_accessor_array J) 2) 102)
       (= (select (bytes_tuple_accessor_array J) 1) 101)
       (= (select (bytes_tuple_accessor_array J) 0) 100)
       (= (select (bytes_tuple_accessor_array F) 0) 100)
       (= (bytes_tuple_accessor_length J) 3)
       (= (bytes_tuple_accessor_length F) 1)
       (= I 0)
       (= P (select (bytes_tuple_accessor_array L) N))
       (= D C)
       (= N 0)
       (= G (+ (* 32 a!3) (* 4 a!5)))
       (= E 2)
       (= O (select (bytes_tuple_accessor_array V) N))
       (>= P 0)
       (>= G 0)
       (>= O 0)
       (<= P 255)
       (<= G 255)
       (<= O 255)
       (or (not (<= 0 I)) (>= I (bytes_tuple_accessor_length H)))
       (= U (bytes_tuple ((as const (Array Int Int)) 0) 0)))))
      )
      (block_9_function_f__64_65_0 E S A B T Q R W)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G bytes_tuple) (H Int) (I bytes_tuple) (J Int) (K Int) (L bytes_tuple) (M Bool) (N bytes_tuple) (O bytes_tuple) (P bytes_tuple) (Q bytes_tuple) (R Int) (S Int) (T Int) (U state_type) (V state_type) (W Int) (X tx_type) (Y bytes_tuple) (Z bytes_tuple) (A1 bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C W A B X U V Y)
        (let ((a!1 (= A1
              (bytes_tuple (store (bytes_tuple_accessor_array P) R H)
                           (bytes_tuple_accessor_length P))))
      (a!2 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) S)))))
      (a!4 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) S))))))
(let ((a!3 (ubv_to_int (ite (>= S 0) ((_ extract 6 5) ((_ int_to_bv 8) S)) a!2)))
      (a!5 (ubv_to_int (ite (>= S 0) ((_ extract 2 2) ((_ int_to_bv 8) S)) a!4))))
  (and (= I A1)
       (= Y (bytes_tuple ((as const (Array Int Int)) 0) 0))
       (= O Z)
       (= Z N)
       (= Q A1)
       (= P Z)
       a!1
       (= (select (bytes_tuple_accessor_array G) 0) 100)
       (= (select (bytes_tuple_accessor_array N) 2) 102)
       (= (select (bytes_tuple_accessor_array N) 1) 101)
       (= (select (bytes_tuple_accessor_array N) 0) 100)
       (= (select (bytes_tuple_accessor_array L) 0) 100)
       (= (bytes_tuple_accessor_length G) 1)
       (= (bytes_tuple_accessor_length N) 3)
       (= (bytes_tuple_accessor_length L) 1)
       (= T (select (bytes_tuple_accessor_array P) R))
       (= J 0)
       (= H (+ (* 32 a!3) (* 4 a!5)))
       (= D C)
       (= R 0)
       (= K (select (bytes_tuple_accessor_array A1) J))
       (= F 3)
       (= E D)
       (= S (select (bytes_tuple_accessor_array Z) R))
       (>= T 0)
       (>= H 0)
       (>= K 0)
       (>= S 0)
       (<= T 255)
       (<= H 255)
       (<= K 255)
       (<= S 255)
       (not M)
       (= M (= K 100)))))
      )
      (block_10_function_f__64_65_0 F W A B X U V A1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H bytes_tuple) (I Int) (J bytes_tuple) (K Int) (L Int) (M bytes_tuple) (N Bool) (O bytes_tuple) (P Int) (Q bytes_tuple) (R bytes_tuple) (S bytes_tuple) (T bytes_tuple) (U bytes_tuple) (V Int) (W Int) (X Int) (Y state_type) (Z state_type) (A1 Int) (B1 tx_type) (C1 bytes_tuple) (D1 bytes_tuple) (E1 bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C A1 A B B1 Y Z C1)
        (let ((a!1 (= E1
              (bytes_tuple (store (bytes_tuple_accessor_array T) V I)
                           (bytes_tuple_accessor_length T))))
      (a!2 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) W)))))
      (a!4 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) W))))))
(let ((a!3 (ubv_to_int (ite (>= W 0) ((_ extract 6 5) ((_ int_to_bv 8) W)) a!2)))
      (a!5 (ubv_to_int (ite (>= W 0) ((_ extract 2 2) ((_ int_to_bv 8) W)) a!4))))
  (and (= J E1)
       (= O E1)
       (= C1 (bytes_tuple ((as const (Array Int Int)) 0) 0))
       (= S D1)
       (= D1 R)
       (= U E1)
       (= T D1)
       a!1
       (= (select (bytes_tuple_accessor_array M) 0) 100)
       (= (select (bytes_tuple_accessor_array H) 0) 100)
       (= (select (bytes_tuple_accessor_array R) 2) 102)
       (= (select (bytes_tuple_accessor_array R) 1) 101)
       (= (select (bytes_tuple_accessor_array R) 0) 100)
       (= (select (bytes_tuple_accessor_array Q) 0) 101)
       (= (bytes_tuple_accessor_length M) 1)
       (= (bytes_tuple_accessor_length H) 1)
       (= (bytes_tuple_accessor_length R) 3)
       (= (bytes_tuple_accessor_length Q) 1)
       (= P 0)
       (= X (select (bytes_tuple_accessor_array T) V))
       (= D C)
       (= L (select (bytes_tuple_accessor_array E1) K))
       (= G 4)
       (= F E)
       (= E D)
       (= V 0)
       (= K 0)
       (= I (+ (* 32 a!3) (* 4 a!5)))
       (= W (select (bytes_tuple_accessor_array D1) V))
       (>= X 0)
       (>= L 0)
       (>= I 0)
       (>= W 0)
       (<= X 255)
       (<= L 255)
       (<= I 255)
       (<= W 255)
       (or (not (<= 0 P)) (>= P (bytes_tuple_accessor_length O)))
       (= N (= L 100)))))
      )
      (block_11_function_f__64_65_0 G A1 A B B1 Y Z E1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I bytes_tuple) (J Int) (K bytes_tuple) (L Int) (M Int) (N bytes_tuple) (O Bool) (P bytes_tuple) (Q bytes_tuple) (R bytes_tuple) (S Int) (T Int) (U Int) (V bytes_tuple) (W Int) (X bytes_tuple) (Y Int) (Z bytes_tuple) (A1 bytes_tuple) (B1 bytes_tuple) (C1 bytes_tuple) (D1 Int) (E1 Int) (F1 Int) (G1 state_type) (H1 state_type) (I1 Int) (J1 tx_type) (K1 bytes_tuple) (L1 bytes_tuple) (M1 bytes_tuple) (N1 bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C I1 A B J1 G1 H1 K1)
        (let ((a!1 (= M1
              (bytes_tuple (store (bytes_tuple_accessor_array B1) D1 J)
                           (bytes_tuple_accessor_length B1))))
      (a!2 (= N1
              (bytes_tuple (store (bytes_tuple_accessor_array Q) S W)
                           (bytes_tuple_accessor_length Q))))
      (a!3 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) T)))))
      (a!5 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) T)))))
      (a!7 ((_ extract 1 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) T)))))
      (a!9 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) E1)))))
      (a!11 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) E1))))))
(let ((a!4 (ubv_to_int (ite (>= T 0) ((_ extract 7 7) ((_ int_to_bv 8) T)) a!3)))
      (a!6 (ubv_to_int (ite (>= T 0) ((_ extract 4 3) ((_ int_to_bv 8) T)) a!5)))
      (a!8 (ubv_to_int (ite (>= T 0) ((_ extract 1 1) ((_ int_to_bv 8) T)) a!7)))
      (a!10 (ubv_to_int (ite (>= E1 0)
                             ((_ extract 6 5) ((_ int_to_bv 8) E1))
                             a!9)))
      (a!12 (ubv_to_int (ite (>= E1 0)
                             ((_ extract 2 2) ((_ int_to_bv 8) E1))
                             a!11))))
  (and (= K M1)
       (= K1 (bytes_tuple ((as const (Array Int Int)) 0) 0))
       (= P M1)
       (= X N1)
       (= Q M1)
       (= R N1)
       (= L1 Z)
       (= B1 L1)
       (= A1 L1)
       a!1
       (= C1 M1)
       a!2
       (= (select (bytes_tuple_accessor_array N) 0) 100)
       (= (select (bytes_tuple_accessor_array I) 0) 100)
       (= (select (bytes_tuple_accessor_array V) 0) 101)
       (= (select (bytes_tuple_accessor_array Z) 2) 102)
       (= (select (bytes_tuple_accessor_array Z) 1) 101)
       (= (select (bytes_tuple_accessor_array Z) 0) 100)
       (= (bytes_tuple_accessor_length N) 1)
       (= (bytes_tuple_accessor_length I) 1)
       (= (bytes_tuple_accessor_length V) 1)
       (= (bytes_tuple_accessor_length Z) 3)
       (= Y 0)
       (= G F)
       (= H 5)
       (= F E)
       (= E D)
       (= D C)
       (= W (+ 101 (* 128 a!4) (* 8 a!6) (* 2 a!8)))
       (= M (select (bytes_tuple_accessor_array M1) L))
       (= L 0)
       (= J (+ (* 32 a!10) (* 4 a!12)))
       (= U (select (bytes_tuple_accessor_array Q) S))
       (= E1 (select (bytes_tuple_accessor_array L1) D1))
       (= D1 0)
       (= T (select (bytes_tuple_accessor_array M1) S))
       (= S 0)
       (= F1 (select (bytes_tuple_accessor_array B1) D1))
       (>= W 0)
       (>= M 0)
       (>= J 0)
       (>= U 0)
       (>= E1 0)
       (>= T 0)
       (>= F1 0)
       (<= W 255)
       (<= M 255)
       (<= J 255)
       (<= U 255)
       (<= E1 255)
       (<= T 255)
       (<= F1 255)
       (or (not (<= 0 Y)) (>= Y (bytes_tuple_accessor_length X)))
       (= O (= M 100)))))
      )
      (block_12_function_f__64_65_0 H I1 A B J1 G1 H1 N1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J bytes_tuple) (K Int) (L bytes_tuple) (M Int) (N Int) (O bytes_tuple) (P Bool) (Q bytes_tuple) (R bytes_tuple) (S bytes_tuple) (T Int) (U Int) (V Int) (W bytes_tuple) (X Int) (Y bytes_tuple) (Z Int) (A1 Int) (B1 bytes_tuple) (C1 Bool) (D1 bytes_tuple) (E1 bytes_tuple) (F1 bytes_tuple) (G1 bytes_tuple) (H1 Int) (I1 Int) (J1 Int) (K1 state_type) (L1 state_type) (M1 Int) (N1 tx_type) (O1 bytes_tuple) (P1 bytes_tuple) (Q1 bytes_tuple) (R1 bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C M1 A B N1 K1 L1 O1)
        (let ((a!1 (= Q1
              (bytes_tuple (store (bytes_tuple_accessor_array F1) H1 K)
                           (bytes_tuple_accessor_length F1))))
      (a!2 (= R1
              (bytes_tuple (store (bytes_tuple_accessor_array R) T X)
                           (bytes_tuple_accessor_length R))))
      (a!3 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) I1)))))
      (a!5 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) I1)))))
      (a!7 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) U)))))
      (a!9 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) U)))))
      (a!11 ((_ extract 1 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) U))))))
(let ((a!4 (ubv_to_int (ite (>= I1 0)
                            ((_ extract 6 5) ((_ int_to_bv 8) I1))
                            a!3)))
      (a!6 (ubv_to_int (ite (>= I1 0)
                            ((_ extract 2 2) ((_ int_to_bv 8) I1))
                            a!5)))
      (a!8 (ubv_to_int (ite (>= U 0) ((_ extract 7 7) ((_ int_to_bv 8) U)) a!7)))
      (a!10 (ubv_to_int (ite (>= U 0) ((_ extract 4 3) ((_ int_to_bv 8) U)) a!9)))
      (a!12 (ubv_to_int (ite (>= U 0)
                             ((_ extract 1 1) ((_ int_to_bv 8) U))
                             a!11))))
  (and (= P (= N 100))
       (= L Q1)
       (= Q Q1)
       (= O1 (bytes_tuple ((as const (Array Int Int)) 0) 0))
       (= R Q1)
       (= S R1)
       (= P1 D1)
       (= F1 P1)
       (= E1 P1)
       (= Y R1)
       a!1
       (= G1 Q1)
       a!2
       (= (select (bytes_tuple_accessor_array W) 0) 101)
       (= (select (bytes_tuple_accessor_array O) 0) 100)
       (= (select (bytes_tuple_accessor_array J) 0) 100)
       (= (select (bytes_tuple_accessor_array B1) 0) 100)
       (= (select (bytes_tuple_accessor_array D1) 2) 102)
       (= (select (bytes_tuple_accessor_array D1) 1) 101)
       (= (select (bytes_tuple_accessor_array D1) 0) 100)
       (= (bytes_tuple_accessor_length W) 1)
       (= (bytes_tuple_accessor_length O) 1)
       (= (bytes_tuple_accessor_length J) 1)
       (= (bytes_tuple_accessor_length B1) 1)
       (= (bytes_tuple_accessor_length D1) 3)
       (= M 0)
       (= K (+ (* 32 a!4) (* 4 a!6)))
       (= D C)
       (= I 6)
       (= H G)
       (= G F)
       (= F E)
       (= E D)
       (= A1 (select (bytes_tuple_accessor_array R1) Z))
       (= N (select (bytes_tuple_accessor_array Q1) M))
       (= U (select (bytes_tuple_accessor_array Q1) T))
       (= T 0)
       (= I1 (select (bytes_tuple_accessor_array P1) H1))
       (= H1 0)
       (= Z 0)
       (= X (+ 101 (* 128 a!8) (* 8 a!10) (* 2 a!12)))
       (= V (select (bytes_tuple_accessor_array R) T))
       (= J1 (select (bytes_tuple_accessor_array F1) H1))
       (>= K 0)
       (>= A1 0)
       (>= N 0)
       (>= U 0)
       (>= I1 0)
       (>= X 0)
       (>= V 0)
       (>= J1 0)
       (<= K 255)
       (<= A1 255)
       (<= N 255)
       (<= U 255)
       (<= I1 255)
       (<= X 255)
       (<= V 255)
       (<= J1 255)
       (not C1)
       (= C1 (= A1 100)))))
      )
      (block_13_function_f__64_65_0 I M1 A B N1 K1 L1 R1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K bytes_tuple) (L Int) (M bytes_tuple) (N Int) (O Int) (P bytes_tuple) (Q Bool) (R bytes_tuple) (S bytes_tuple) (T bytes_tuple) (U Int) (V Int) (W Int) (X bytes_tuple) (Y Int) (Z bytes_tuple) (A1 Int) (B1 Int) (C1 bytes_tuple) (D1 Bool) (E1 bytes_tuple) (F1 Int) (G1 bytes_tuple) (H1 bytes_tuple) (I1 bytes_tuple) (J1 bytes_tuple) (K1 bytes_tuple) (L1 Int) (M1 Int) (N1 Int) (O1 state_type) (P1 state_type) (Q1 Int) (R1 tx_type) (S1 bytes_tuple) (T1 bytes_tuple) (U1 bytes_tuple) (V1 bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C Q1 A B R1 O1 P1 S1)
        (let ((a!1 (= U1
              (bytes_tuple (store (bytes_tuple_accessor_array J1) L1 L)
                           (bytes_tuple_accessor_length J1))))
      (a!2 (= V1
              (bytes_tuple (store (bytes_tuple_accessor_array S) U Y)
                           (bytes_tuple_accessor_length S))))
      (a!3 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) M1)))))
      (a!5 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) M1)))))
      (a!7 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) V)))))
      (a!9 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) V)))))
      (a!11 ((_ extract 1 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) V))))))
(let ((a!4 (ubv_to_int (ite (>= M1 0)
                            ((_ extract 6 5) ((_ int_to_bv 8) M1))
                            a!3)))
      (a!6 (ubv_to_int (ite (>= M1 0)
                            ((_ extract 2 2) ((_ int_to_bv 8) M1))
                            a!5)))
      (a!8 (ubv_to_int (ite (>= V 0) ((_ extract 7 7) ((_ int_to_bv 8) V)) a!7)))
      (a!10 (ubv_to_int (ite (>= V 0) ((_ extract 4 3) ((_ int_to_bv 8) V)) a!9)))
      (a!12 (ubv_to_int (ite (>= V 0)
                             ((_ extract 1 1) ((_ int_to_bv 8) V))
                             a!11))))
  (and (= D1 (= B1 100))
       (= M U1)
       (= R U1)
       (= S U1)
       (= S1 (bytes_tuple ((as const (Array Int Int)) 0) 0))
       (= T V1)
       (= Z V1)
       (= T1 H1)
       (= J1 T1)
       (= I1 T1)
       (= E1 V1)
       a!1
       (= K1 U1)
       a!2
       (= (select (bytes_tuple_accessor_array P) 0) 100)
       (= (select (bytes_tuple_accessor_array K) 0) 100)
       (= (select (bytes_tuple_accessor_array X) 0) 101)
       (= (select (bytes_tuple_accessor_array H1) 2) 102)
       (= (select (bytes_tuple_accessor_array H1) 1) 101)
       (= (select (bytes_tuple_accessor_array H1) 0) 100)
       (= (select (bytes_tuple_accessor_array G1) 0) 102)
       (= (select (bytes_tuple_accessor_array C1) 0) 100)
       (= (bytes_tuple_accessor_length P) 1)
       (= (bytes_tuple_accessor_length K) 1)
       (= (bytes_tuple_accessor_length X) 1)
       (= (bytes_tuple_accessor_length H1) 3)
       (= (bytes_tuple_accessor_length G1) 1)
       (= (bytes_tuple_accessor_length C1) 1)
       (= D C)
       (= O (select (bytes_tuple_accessor_array U1) N))
       (= H G)
       (= G F)
       (= F E)
       (= E D)
       (= N 0)
       (= L (+ (* 32 a!4) (* 4 a!6)))
       (= J 7)
       (= I H)
       (= U 0)
       (= Y (+ 101 (* 128 a!8) (* 8 a!10) (* 2 a!12)))
       (= W (select (bytes_tuple_accessor_array S) U))
       (= V (select (bytes_tuple_accessor_array U1) U))
       (= M1 (select (bytes_tuple_accessor_array T1) L1))
       (= L1 0)
       (= F1 0)
       (= B1 (select (bytes_tuple_accessor_array V1) A1))
       (= A1 0)
       (= N1 (select (bytes_tuple_accessor_array J1) L1))
       (>= O 0)
       (>= L 0)
       (>= Y 0)
       (>= W 0)
       (>= V 0)
       (>= M1 0)
       (>= B1 0)
       (>= N1 0)
       (<= O 255)
       (<= L 255)
       (<= Y 255)
       (<= W 255)
       (<= V 255)
       (<= M1 255)
       (<= B1 255)
       (<= N1 255)
       (or (not (<= 0 F1)) (>= F1 (bytes_tuple_accessor_length E1)))
       (= Q (= O 100)))))
      )
      (block_14_function_f__64_65_0 J Q1 A B R1 O1 P1 V1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L bytes_tuple) (M Int) (N bytes_tuple) (O Int) (P Int) (Q bytes_tuple) (R Bool) (S bytes_tuple) (T bytes_tuple) (U bytes_tuple) (V Int) (W Int) (X Int) (Y bytes_tuple) (Z Int) (A1 bytes_tuple) (B1 Int) (C1 Int) (D1 bytes_tuple) (E1 Bool) (F1 bytes_tuple) (G1 bytes_tuple) (H1 bytes_tuple) (I1 Int) (J1 Int) (K1 Int) (L1 bytes_tuple) (M1 Int) (N1 bytes_tuple) (O1 Int) (P1 bytes_tuple) (Q1 bytes_tuple) (R1 bytes_tuple) (S1 bytes_tuple) (T1 Int) (U1 Int) (V1 Int) (W1 state_type) (X1 state_type) (Y1 Int) (Z1 tx_type) (A2 bytes_tuple) (B2 bytes_tuple) (C2 bytes_tuple) (D2 bytes_tuple) (E2 bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C Y1 A B Z1 W1 X1 A2)
        (let ((a!1 (= C2
              (bytes_tuple (store (bytes_tuple_accessor_array R1) T1 M)
                           (bytes_tuple_accessor_length R1))))
      (a!2 (= D2
              (bytes_tuple (store (bytes_tuple_accessor_array T) V Z)
                           (bytes_tuple_accessor_length T))))
      (a!3 (= E2
              (bytes_tuple (store (bytes_tuple_accessor_array G1) I1 M1)
                           (bytes_tuple_accessor_length G1))))
      (a!4 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) W)))))
      (a!6 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) W)))))
      (a!8 ((_ extract 1 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) W)))))
      (a!10 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) U1)))))
      (a!12 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) U1)))))
      (a!14 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) J1)))))
      (a!16 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) J1)))))
      (a!18 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) J1)))))
      (a!20 ((_ extract 2 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) J1)))))
      (a!22 (ite (>= J1 0)
                 ((_ extract 0 0) ((_ int_to_bv 8) J1))
                 ((_ extract 0 0) ((_ int_to_bv 8) (* (- 1) J1))))))
(let ((a!5 (ubv_to_int (ite (>= W 0) ((_ extract 7 7) ((_ int_to_bv 8) W)) a!4)))
      (a!7 (ubv_to_int (ite (>= W 0) ((_ extract 4 3) ((_ int_to_bv 8) W)) a!6)))
      (a!9 (ubv_to_int (ite (>= W 0) ((_ extract 1 1) ((_ int_to_bv 8) W)) a!8)))
      (a!11 (ubv_to_int (ite (>= U1 0)
                             ((_ extract 6 5) ((_ int_to_bv 8) U1))
                             a!10)))
      (a!13 (ubv_to_int (ite (>= U1 0)
                             ((_ extract 2 2) ((_ int_to_bv 8) U1))
                             a!12)))
      (a!15 (ubv_to_int (ite (>= J1 0)
                             ((_ extract 7 7) ((_ int_to_bv 8) J1))
                             a!14)))
      (a!17 (bvnot (ite (>= J1 0) ((_ extract 6 5) ((_ int_to_bv 8) J1)) a!16)))
      (a!19 (ubv_to_int (ite (>= J1 0)
                             ((_ extract 4 3) ((_ int_to_bv 8) J1))
                             a!18)))
      (a!21 (bvnot (ite (>= J1 0) ((_ extract 2 1) ((_ int_to_bv 8) J1)) a!20))))
(let ((a!23 (= M1
               (+ (* 128 a!15)
                  (* 32 (ubv_to_int a!17))
                  (* 8 a!19)
                  (* 2 (ubv_to_int a!21))
                  (ubv_to_int a!22)))))
  (and (= R (= P 100))
       (= N C2)
       (= A2 (bytes_tuple ((as const (Array Int Int)) 0) 0))
       (= S C2)
       (= A1 D2)
       (= T C2)
       (= U D2)
       (= B2 P1)
       (= G1 D2)
       (= H1 E2)
       (= F1 D2)
       a!1
       (= S1 C2)
       (= R1 B2)
       (= Q1 B2)
       (= N1 E2)
       a!2
       a!3
       (= (select (bytes_tuple_accessor_array Q) 0) 100)
       (= (select (bytes_tuple_accessor_array L) 0) 100)
       (= (select (bytes_tuple_accessor_array Y) 0) 101)
       (= (select (bytes_tuple_accessor_array D1) 0) 100)
       (= (select (bytes_tuple_accessor_array P1) 2) 102)
       (= (select (bytes_tuple_accessor_array P1) 1) 101)
       (= (select (bytes_tuple_accessor_array P1) 0) 100)
       (= (select (bytes_tuple_accessor_array L1) 0) 102)
       (= (bytes_tuple_accessor_length Q) 1)
       (= (bytes_tuple_accessor_length L) 1)
       (= (bytes_tuple_accessor_length Y) 1)
       (= (bytes_tuple_accessor_length D1) 1)
       (= (bytes_tuple_accessor_length P1) 3)
       (= (bytes_tuple_accessor_length L1) 1)
       (= Z (+ 101 (* 128 a!5) (* 8 a!7) (* 2 a!9)))
       (= I H)
       (= H G)
       (= G F)
       (= F E)
       (= E D)
       (= D C)
       (= M (+ (* 32 a!11) (* 4 a!13)))
       (= K 8)
       (= J I)
       (= X (select (bytes_tuple_accessor_array T) V))
       (= P (select (bytes_tuple_accessor_array C2) O))
       (= O 0)
       (= W (select (bytes_tuple_accessor_array C2) V))
       (= V 0)
       (= C1 (select (bytes_tuple_accessor_array D2) B1))
       (= B1 0)
       (= V1 (select (bytes_tuple_accessor_array R1) T1))
       (= U1 (select (bytes_tuple_accessor_array B2) T1))
       (= T1 0)
       (= O1 0)
       a!23
       (= K1 (select (bytes_tuple_accessor_array G1) I1))
       (= J1 (select (bytes_tuple_accessor_array D2) I1))
       (= I1 0)
       (>= Z 0)
       (>= M 0)
       (>= X 0)
       (>= P 0)
       (>= W 0)
       (>= C1 0)
       (>= V1 0)
       (>= U1 0)
       (>= M1 0)
       (>= K1 0)
       (>= J1 0)
       (<= Z 255)
       (<= M 255)
       (<= X 255)
       (<= P 255)
       (<= W 255)
       (<= C1 255)
       (<= V1 255)
       (<= U1 255)
       (<= M1 255)
       (<= K1 255)
       (<= J1 255)
       (or (not (<= 0 O1)) (>= O1 (bytes_tuple_accessor_length N1)))
       (= E1 (= C1 100))))))
      )
      (block_15_function_f__64_65_0 K Y1 A B Z1 W1 X1 E2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M bytes_tuple) (N Int) (O bytes_tuple) (P Int) (Q Int) (R bytes_tuple) (S Bool) (T bytes_tuple) (U bytes_tuple) (V bytes_tuple) (W Int) (X Int) (Y Int) (Z bytes_tuple) (A1 Int) (B1 bytes_tuple) (C1 Int) (D1 Int) (E1 bytes_tuple) (F1 Bool) (G1 bytes_tuple) (H1 bytes_tuple) (I1 bytes_tuple) (J1 Int) (K1 Int) (L1 Int) (M1 bytes_tuple) (N1 Int) (O1 bytes_tuple) (P1 Int) (Q1 Int) (R1 bytes_tuple) (S1 Int) (T1 bytes_tuple) (U1 Int) (V1 Int) (W1 Int) (X1 bytes_tuple) (Y1 Int) (Z1 Int) (A2 bytes_tuple) (B2 Bool) (C2 bytes_tuple) (D2 bytes_tuple) (E2 bytes_tuple) (F2 Int) (G2 Int) (H2 Int) (I2 state_type) (J2 state_type) (K2 Int) (L2 tx_type) (M2 bytes_tuple) (N2 bytes_tuple) (O2 bytes_tuple) (P2 bytes_tuple) (Q2 bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C K2 A B L2 I2 J2 M2)
        (let ((a!1 (= O2
              (bytes_tuple (store (bytes_tuple_accessor_array D2) F2 N)
                           (bytes_tuple_accessor_length D2))))
      (a!2 (= P2
              (bytes_tuple (store (bytes_tuple_accessor_array U) W A1)
                           (bytes_tuple_accessor_length U))))
      (a!3 (= Q2
              (bytes_tuple (store (bytes_tuple_accessor_array H1) J1 N1)
                           (bytes_tuple_accessor_length H1))))
      (a!4 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) G2)))))
      (a!6 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) G2)))))
      (a!8 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) X)))))
      (a!10 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) X)))))
      (a!12 ((_ extract 1 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) X)))))
      (a!14 (ite (>= W1 0)
                 ((_ int_to_bv 8) W1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) W1)))))
      (a!15 (ite (>= Y1 0)
                 ((_ int_to_bv 8) Y1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) Y1)))))
      (a!16 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!18 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!20 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!22 ((_ extract 2 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!24 (ite (>= K1 0)
                 ((_ extract 0 0) ((_ int_to_bv 8) K1))
                 ((_ extract 0 0) ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!26 (ite (>= S1 0)
                 ((_ int_to_bv 8) S1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) S1)))))
      (a!27 (ite (>= U1 0)
                 ((_ int_to_bv 8) U1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) U1))))))
(let ((a!5 (ubv_to_int (ite (>= G2 0)
                            ((_ extract 6 5) ((_ int_to_bv 8) G2))
                            a!4)))
      (a!7 (ubv_to_int (ite (>= G2 0)
                            ((_ extract 2 2) ((_ int_to_bv 8) G2))
                            a!6)))
      (a!9 (ubv_to_int (ite (>= X 0) ((_ extract 7 7) ((_ int_to_bv 8) X)) a!8)))
      (a!11 (ubv_to_int (ite (>= X 0)
                             ((_ extract 4 3) ((_ int_to_bv 8) X))
                             a!10)))
      (a!13 (ubv_to_int (ite (>= X 0)
                             ((_ extract 1 1) ((_ int_to_bv 8) X))
                             a!12)))
      (a!17 (ubv_to_int (ite (>= K1 0)
                             ((_ extract 7 7) ((_ int_to_bv 8) K1))
                             a!16)))
      (a!19 (bvnot (ite (>= K1 0) ((_ extract 6 5) ((_ int_to_bv 8) K1)) a!18)))
      (a!21 (ubv_to_int (ite (>= K1 0)
                             ((_ extract 4 3) ((_ int_to_bv 8) K1))
                             a!20)))
      (a!23 (bvnot (ite (>= K1 0) ((_ extract 2 1) ((_ int_to_bv 8) K1)) a!22))))
(let ((a!25 (= N1
               (+ (* 128 a!17)
                  (* 32 (ubv_to_int a!19))
                  (* 8 a!21)
                  (* 2 (ubv_to_int a!23))
                  (ubv_to_int a!24)))))
  (and (= F1 (= D1 100))
       (= B2 (= Q1 Z1))
       (= O O2)
       (= U O2)
       (= B1 P2)
       (= H1 P2)
       (= T O2)
       (= M2 (bytes_tuple ((as const (Array Int Int)) 0) 0))
       (= V P2)
       (= I1 Q2)
       (= G1 P2)
       (= N2 A2)
       (= O1 Q2)
       a!1
       (= E2 O2)
       (= D2 N2)
       (= C2 N2)
       a!2
       a!3
       (= (select (bytes_tuple_accessor_array Z) 0) 101)
       (= (select (bytes_tuple_accessor_array R) 0) 100)
       (= (select (bytes_tuple_accessor_array M) 0) 100)
       (= (select (bytes_tuple_accessor_array E1) 0) 100)
       (= (select (bytes_tuple_accessor_array M1) 0) 102)
       (= (select (bytes_tuple_accessor_array A2) 2) 102)
       (= (select (bytes_tuple_accessor_array A2) 1) 101)
       (= (select (bytes_tuple_accessor_array A2) 0) 100)
       (= (select (bytes_tuple_accessor_array T1) 0) 101)
       (= (select (bytes_tuple_accessor_array R1) 0) 100)
       (= (select (bytes_tuple_accessor_array X1) 0) 102)
       (= (bytes_tuple_accessor_length Z) 1)
       (= (bytes_tuple_accessor_length R) 1)
       (= (bytes_tuple_accessor_length M) 1)
       (= (bytes_tuple_accessor_length E1) 1)
       (= (bytes_tuple_accessor_length M1) 1)
       (= (bytes_tuple_accessor_length A2) 3)
       (= (bytes_tuple_accessor_length T1) 1)
       (= (bytes_tuple_accessor_length R1) 1)
       (= (bytes_tuple_accessor_length X1) 1)
       (= K J)
       (= L 9)
       (= J I)
       (= I H)
       (= H G)
       (= G F)
       (= F E)
       (= E D)
       (= D C)
       (= L1 (select (bytes_tuple_accessor_array H1) J1))
       (= Q (select (bytes_tuple_accessor_array O2) P))
       (= P 0)
       (= N (+ (* 32 a!5) (* 4 a!7)))
       (= Y (select (bytes_tuple_accessor_array U) W))
       (= X (select (bytes_tuple_accessor_array O2) W))
       (= W 0)
       (= J1 0)
       (= C1 0)
       (= A1 (+ 101 (* 128 a!9) (* 8 a!11) (* 2 a!13)))
       (= K1 (select (bytes_tuple_accessor_array P2) J1))
       (= D1 (select (bytes_tuple_accessor_array P2) C1))
       (= Z1 (ubv_to_int (bvxor a!14 a!15)))
       (= P1 0)
       a!25
       (= S1 100)
       (= Q1 (select (bytes_tuple_accessor_array Q2) P1))
       (= H2 (select (bytes_tuple_accessor_array D2) F2))
       (= G2 (select (bytes_tuple_accessor_array N2) F2))
       (= F2 0)
       (= Y1 102)
       (= W1 V1)
       (= V1 (ubv_to_int (bvor a!26 a!27)))
       (= U1 101)
       (>= L1 0)
       (>= Q 0)
       (>= N 0)
       (>= Y 0)
       (>= X 0)
       (>= A1 0)
       (>= K1 0)
       (>= D1 0)
       (>= Z1 0)
       (>= N1 0)
       (>= S1 0)
       (>= Q1 0)
       (>= H2 0)
       (>= G2 0)
       (>= Y1 0)
       (>= W1 0)
       (>= V1 0)
       (>= U1 0)
       (<= L1 255)
       (<= Q 255)
       (<= N 255)
       (<= Y 255)
       (<= X 255)
       (<= A1 255)
       (<= K1 255)
       (<= D1 255)
       (<= Z1 255)
       (<= N1 255)
       (<= S1 255)
       (<= Q1 255)
       (<= H2 255)
       (<= G2 255)
       (<= Y1 255)
       (<= W1 255)
       (<= V1 255)
       (<= U1 255)
       (not B2)
       (= S (= Q 100))))))
      )
      (block_16_function_f__64_65_0 L K2 A B L2 I2 J2 Q2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M bytes_tuple) (N Int) (O bytes_tuple) (P Int) (Q Int) (R bytes_tuple) (S Bool) (T bytes_tuple) (U bytes_tuple) (V bytes_tuple) (W Int) (X Int) (Y Int) (Z bytes_tuple) (A1 Int) (B1 bytes_tuple) (C1 Int) (D1 Int) (E1 bytes_tuple) (F1 Bool) (G1 bytes_tuple) (H1 bytes_tuple) (I1 bytes_tuple) (J1 Int) (K1 Int) (L1 Int) (M1 bytes_tuple) (N1 Int) (O1 bytes_tuple) (P1 Int) (Q1 Int) (R1 bytes_tuple) (S1 Int) (T1 bytes_tuple) (U1 Int) (V1 Int) (W1 Int) (X1 bytes_tuple) (Y1 Int) (Z1 Int) (A2 bytes_tuple) (B2 Bool) (C2 bytes_tuple) (D2 bytes_tuple) (E2 bytes_tuple) (F2 Int) (G2 Int) (H2 Int) (I2 state_type) (J2 state_type) (K2 Int) (L2 tx_type) (M2 bytes_tuple) (N2 bytes_tuple) (O2 bytes_tuple) (P2 bytes_tuple) (Q2 bytes_tuple) ) 
    (=>
      (and
        (block_6_f_63_65_0 C K2 A B L2 I2 J2 M2)
        (let ((a!1 (= O2
              (bytes_tuple (store (bytes_tuple_accessor_array D2) F2 N)
                           (bytes_tuple_accessor_length D2))))
      (a!2 (= P2
              (bytes_tuple (store (bytes_tuple_accessor_array U) W A1)
                           (bytes_tuple_accessor_length U))))
      (a!3 (= Q2
              (bytes_tuple (store (bytes_tuple_accessor_array H1) J1 N1)
                           (bytes_tuple_accessor_length H1))))
      (a!4 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) G2)))))
      (a!6 ((_ extract 2 2) (bvmul #xff ((_ int_to_bv 8) (* (- 1) G2)))))
      (a!8 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) X)))))
      (a!10 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) X)))))
      (a!12 ((_ extract 1 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) X)))))
      (a!14 (ite (>= W1 0)
                 ((_ int_to_bv 8) W1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) W1)))))
      (a!15 (ite (>= Y1 0)
                 ((_ int_to_bv 8) Y1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) Y1)))))
      (a!16 ((_ extract 7 7) (bvmul #xff ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!18 ((_ extract 6 5) (bvmul #xff ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!20 ((_ extract 4 3) (bvmul #xff ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!22 ((_ extract 2 1) (bvmul #xff ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!24 (ite (>= K1 0)
                 ((_ extract 0 0) ((_ int_to_bv 8) K1))
                 ((_ extract 0 0) ((_ int_to_bv 8) (* (- 1) K1)))))
      (a!26 (ite (>= S1 0)
                 ((_ int_to_bv 8) S1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) S1)))))
      (a!27 (ite (>= U1 0)
                 ((_ int_to_bv 8) U1)
                 (bvmul #xff ((_ int_to_bv 8) (* (- 1) U1))))))
(let ((a!5 (ubv_to_int (ite (>= G2 0)
                            ((_ extract 6 5) ((_ int_to_bv 8) G2))
                            a!4)))
      (a!7 (ubv_to_int (ite (>= G2 0)
                            ((_ extract 2 2) ((_ int_to_bv 8) G2))
                            a!6)))
      (a!9 (ubv_to_int (ite (>= X 0) ((_ extract 7 7) ((_ int_to_bv 8) X)) a!8)))
      (a!11 (ubv_to_int (ite (>= X 0)
                             ((_ extract 4 3) ((_ int_to_bv 8) X))
                             a!10)))
      (a!13 (ubv_to_int (ite (>= X 0)
                             ((_ extract 1 1) ((_ int_to_bv 8) X))
                             a!12)))
      (a!17 (ubv_to_int (ite (>= K1 0)
                             ((_ extract 7 7) ((_ int_to_bv 8) K1))
                             a!16)))
      (a!19 (bvnot (ite (>= K1 0) ((_ extract 6 5) ((_ int_to_bv 8) K1)) a!18)))
      (a!21 (ubv_to_int (ite (>= K1 0)
                             ((_ extract 4 3) ((_ int_to_bv 8) K1))
                             a!20)))
      (a!23 (bvnot (ite (>= K1 0) ((_ extract 2 1) ((_ int_to_bv 8) K1)) a!22))))
(let ((a!25 (= N1
               (+ (* 128 a!17)
                  (* 32 (ubv_to_int a!19))
                  (* 8 a!21)
                  (* 2 (ubv_to_int a!23))
                  (ubv_to_int a!24)))))
  (and (= F1 (= D1 100))
       (= B2 (= Q1 Z1))
       (= O O2)
       (= U O2)
       (= B1 P2)
       (= H1 P2)
       (= T O2)
       (= M2 (bytes_tuple ((as const (Array Int Int)) 0) 0))
       (= V P2)
       (= I1 Q2)
       (= G1 P2)
       (= N2 A2)
       (= O1 Q2)
       a!1
       (= E2 O2)
       (= D2 N2)
       (= C2 N2)
       a!2
       a!3
       (= (select (bytes_tuple_accessor_array Z) 0) 101)
       (= (select (bytes_tuple_accessor_array R) 0) 100)
       (= (select (bytes_tuple_accessor_array M) 0) 100)
       (= (select (bytes_tuple_accessor_array E1) 0) 100)
       (= (select (bytes_tuple_accessor_array M1) 0) 102)
       (= (select (bytes_tuple_accessor_array A2) 2) 102)
       (= (select (bytes_tuple_accessor_array A2) 1) 101)
       (= (select (bytes_tuple_accessor_array A2) 0) 100)
       (= (select (bytes_tuple_accessor_array T1) 0) 101)
       (= (select (bytes_tuple_accessor_array R1) 0) 100)
       (= (select (bytes_tuple_accessor_array X1) 0) 102)
       (= (bytes_tuple_accessor_length Z) 1)
       (= (bytes_tuple_accessor_length R) 1)
       (= (bytes_tuple_accessor_length M) 1)
       (= (bytes_tuple_accessor_length E1) 1)
       (= (bytes_tuple_accessor_length M1) 1)
       (= (bytes_tuple_accessor_length A2) 3)
       (= (bytes_tuple_accessor_length T1) 1)
       (= (bytes_tuple_accessor_length R1) 1)
       (= (bytes_tuple_accessor_length X1) 1)
       (= K J)
       (= L K)
       (= J I)
       (= I H)
       (= H G)
       (= G F)
       (= F E)
       (= E D)
       (= D C)
       (= L1 (select (bytes_tuple_accessor_array H1) J1))
       (= Q (select (bytes_tuple_accessor_array O2) P))
       (= P 0)
       (= N (+ (* 32 a!5) (* 4 a!7)))
       (= Y (select (bytes_tuple_accessor_array U) W))
       (= X (select (bytes_tuple_accessor_array O2) W))
       (= W 0)
       (= J1 0)
       (= C1 0)
       (= A1 (+ 101 (* 128 a!9) (* 8 a!11) (* 2 a!13)))
       (= K1 (select (bytes_tuple_accessor_array P2) J1))
       (= D1 (select (bytes_tuple_accessor_array P2) C1))
       (= Z1 (ubv_to_int (bvxor a!14 a!15)))
       (= P1 0)
       a!25
       (= S1 100)
       (= Q1 (select (bytes_tuple_accessor_array Q2) P1))
       (= H2 (select (bytes_tuple_accessor_array D2) F2))
       (= G2 (select (bytes_tuple_accessor_array N2) F2))
       (= F2 0)
       (= Y1 102)
       (= W1 V1)
       (= V1 (ubv_to_int (bvor a!26 a!27)))
       (= U1 101)
       (>= L1 0)
       (>= Q 0)
       (>= N 0)
       (>= Y 0)
       (>= X 0)
       (>= A1 0)
       (>= K1 0)
       (>= D1 0)
       (>= Z1 0)
       (>= N1 0)
       (>= S1 0)
       (>= Q1 0)
       (>= H2 0)
       (>= G2 0)
       (>= Y1 0)
       (>= W1 0)
       (>= V1 0)
       (>= U1 0)
       (<= L1 255)
       (<= Q 255)
       (<= N 255)
       (<= Y 255)
       (<= X 255)
       (<= A1 255)
       (<= K1 255)
       (<= D1 255)
       (<= Z1 255)
       (<= N1 255)
       (<= S1 255)
       (<= Q1 255)
       (<= H2 255)
       (<= G2 255)
       (<= Y1 255)
       (<= W1 255)
       (<= V1 255)
       (<= U1 255)
       (= S (= Q 100))))))
      )
      (block_7_return_function_f__64_65_0 L K2 A B L2 I2 J2 Q2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H bytes_tuple) ) 
    (=>
      (and
        true
      )
      (block_17_function_f__64_65_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) (L bytes_tuple) ) 
    (=>
      (and
        (block_17_function_f__64_65_0 C J A B K F G L)
        (summary_3_function_f__64_65_0 D J A B K H I)
        (let ((a!1 (store (balances G) J (+ (select (balances G) J) E)))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 240))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 31))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 18))
      (a!5 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 38))
      (a!6 (>= (+ (select (balances G) J) E) 0))
      (a!7 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  (and (= H (state_type a!1))
       a!2
       a!3
       a!4
       a!5
       (= (msg.value K) 0)
       (= (msg.sig K) 638722032)
       (= C 0)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!6
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!7
       (= G F)))
      )
      (summary_4_function_f__64_65_0 D J A B K F I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__64_65_0 C F A B G D E)
        (interface_0_C_65_0 F A B D)
        (= C 0)
      )
      (interface_0_C_65_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_65_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_65_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_19_C_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_19_C_65_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_20_C_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_20_C_65_0 C F A B G D E)
        true
      )
      (contract_initializer_18_C_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_21_C_65_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_21_C_65_0 C H A B I E F)
        (contract_initializer_18_C_65_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_65_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_18_C_65_0 D H A B I F G)
        (implicit_constructor_entry_21_C_65_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_65_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__64_65_0 C F A B G D E)
        (interface_0_C_65_0 F A B D)
        (= C 3)
      )
      error_target_13_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_13_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
