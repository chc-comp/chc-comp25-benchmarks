(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |implicit_constructor_entry_18_C_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_constructor_2_C_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_5_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |interface_0_C_76_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |block_13_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_7_return_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_8_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_11_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_6_f_74_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_12_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |contract_initializer_after_init_17_C_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_3_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_4_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |block_10_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |error_target_13_0| ( ) Bool)
(declare-fun |block_14_function_f__75_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int Int Int ) Bool)
(declare-fun |contract_initializer_15_C_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_entry_16_C_76_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__75_76_0 C F A B G D E H I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_5_function_f__75_76_0 C F A B G D E H I J)
        (and (= C 0) (= E D))
      )
      (block_6_f_74_76_0 C F A B G D E H I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool) (J Int) (K Int) (L state_type) (M state_type) (N Int) (O tx_type) (P Int) (Q Int) (R Int) (S Int) (T Int) ) 
    (=>
      (and
        (block_6_f_74_76_0 C N A B O L M P R T)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F)))))
      (a!5 (ite (>= E 0)
                ((_ int_to_bv 16) E)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) E)))))
      (a!6 (ite (>= F 0)
                ((_ int_to_bv 16) F)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F))))))
(let ((a!2 (ite (>= E 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) E)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= F 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) F)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!5 a!6))))))
(let ((a!8 (= G (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7))))
  (and (= J 1)
       (= E Q)
       (= K 0)
       a!8
       (= F S)
       (= D 1)
       (= T 0)
       (= R 0)
       (= P 0)
       (= H 1)
       (= S K)
       (= Q J)
       (>= E (- 128))
       (>= G (- 32768))
       (>= F (- 32768))
       (<= E 127)
       (<= G 32767)
       (<= F 32767)
       (not I)
       (= I (= G H))))))
      )
      (block_8_function_f__75_76_0 D N A B O L M Q S T)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_8_function_f__75_76_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__75_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_9_function_f__75_76_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__75_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_10_function_f__75_76_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__75_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_11_function_f__75_76_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__75_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_12_function_f__75_76_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__75_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_13_function_f__75_76_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__75_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_7_return_function_f__75_76_0 C F A B G D E H I J)
        true
      )
      (summary_3_function_f__75_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S state_type) (T state_type) (U Int) (V tx_type) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) ) 
    (=>
      (and
        (block_6_f_74_76_0 C U A B V S T W Y A1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) L)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M)))))
      (a!5 (ite (>= L 0)
                ((_ int_to_bv 16) L)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) L)))))
      (a!6 (ite (>= M 0)
                ((_ int_to_bv 16) M)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) G)))))
      (a!13 (ite (>= F 0)
                 ((_ int_to_bv 16) F)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F)))))
      (a!14 (ite (>= G 0)
                 ((_ int_to_bv 16) G)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) G))))))
(let ((a!2 (ite (>= L 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) L)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= M 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) M)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!5 a!6)))))
      (a!10 (ite (>= F 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) F)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= G 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) G)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!13 a!14))))))
(let ((a!8 (= N (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= H (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15))))
  (and (= J (= H I))
       (= Q 1)
       (= F X)
       (= R 0)
       (= M B1)
       (= E 2)
       (= D C)
       (= O (- 2))
       a!8
       (= L X)
       (= K (- 1))
       (= I 1)
       a!16
       (= G Z)
       (= B1 K)
       (= Z R)
       (= X Q)
       (= W 0)
       (= A1 0)
       (= Y 0)
       (>= F (- 128))
       (>= M (- 32768))
       (>= N (- 32768))
       (>= L (- 128))
       (>= H (- 32768))
       (>= G (- 32768))
       (<= F 127)
       (<= M 32767)
       (<= N 32767)
       (<= L 127)
       (<= H 32767)
       (<= G 32767)
       (not P)
       (= P (= N O))))))
      )
      (block_9_function_f__75_76_0 E U A B V S T X Z B1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y state_type) (Z state_type) (A1 Int) (B1 tx_type) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) ) 
    (=>
      (and
        (block_6_f_74_76_0 C A1 A B B1 Y Z C1 E1 G1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) G)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!5 (ite (>= G 0)
                ((_ int_to_bv 16) G)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) G)))))
      (a!6 (ite (>= H 0)
                ((_ int_to_bv 16) H)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!13 (ite (>= R 0)
                 ((_ int_to_bv 16) R)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R)))))
      (a!14 (ite (>= S 0)
                 ((_ int_to_bv 16) S)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N)))))
      (a!21 (ite (>= M 0)
                 ((_ int_to_bv 16) M)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M)))))
      (a!22 (ite (>= N 0)
                 ((_ int_to_bv 16) N)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N))))))
(let ((a!2 (ite (>= G 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) G)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= H 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) H)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!5 a!6)))))
      (a!10 (ite (>= R 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) R)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= S 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) S)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!13 a!14)))))
      (a!18 (ite (>= M 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) M)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= N 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) N)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!21 a!22))))))
(let ((a!8 (= I (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= T (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15)))
      (a!24 (= O (ite (= a!18 a!20) (ubv_to_int (bvxor a!21 a!22)) a!23))))
  (and (= K (= I J))
       (= Q (= O P))
       (= W 1)
       (= L (- 1))
       (= D C)
       (= X 0)
       (= S H1)
       (= J 1)
       a!8
       (= H F1)
       (= G D1)
       (= F 3)
       (= E D)
       (= U (- 1))
       a!16
       (= R F1)
       (= P (- 2))
       a!24
       (= N H1)
       (= M D1)
       (= H1 L)
       (= F1 X)
       (= D1 W)
       (= C1 0)
       (= G1 0)
       (= E1 0)
       (>= S (- 32768))
       (>= I (- 32768))
       (>= H (- 32768))
       (>= G (- 128))
       (>= T (- 32768))
       (>= R (- 32768))
       (>= O (- 32768))
       (>= N (- 32768))
       (>= M (- 128))
       (<= S 32767)
       (<= I 32767)
       (<= H 32767)
       (<= G 127)
       (<= T 32767)
       (<= R 32767)
       (<= O 32767)
       (<= N 32767)
       (<= M 127)
       (not V)
       (= V (= T U))))))
      )
      (block_10_function_f__75_76_0 F A1 A B B1 Y Z D1 F1 H1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 state_type) (F1 state_type) (G1 Int) (H1 tx_type) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) ) 
    (=>
      (and
        (block_6_f_74_76_0 C G1 A B H1 E1 F1 I1 K1 M1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!5 (ite (>= H 0)
                ((_ int_to_bv 16) H)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!6 (ite (>= I 0)
                ((_ int_to_bv 16) I)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) O)))))
      (a!13 (ite (>= N 0)
                 ((_ int_to_bv 16) N)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N)))))
      (a!14 (ite (>= O 0)
                 ((_ int_to_bv 16) O)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) O)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) X)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Y)))))
      (a!21 (ite (>= X 0)
                 ((_ int_to_bv 16) X)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) X)))))
      (a!22 (ite (>= Y 0)
                 ((_ int_to_bv 16) Y)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Y)))))
      (a!25 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!27 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!29 (ite (>= S 0)
                 ((_ int_to_bv 16) S)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!30 (ite (>= T 0)
                 ((_ int_to_bv 16) T)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T))))))
(let ((a!2 (ite (>= H 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) H)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= I 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) I)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!5 a!6)))))
      (a!10 (ite (>= N 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) N)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= O 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) O)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!13 a!14)))))
      (a!18 (ite (>= X 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) X)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= Y 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) Y)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!21 a!22)))))
      (a!26 (ite (>= S 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) S)) #b1)
                 (= a!25 #b1)))
      (a!28 (ite (>= T 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) T)) #b1)
                 (= a!27 #b1)))
      (a!31 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!29 a!30))))))
(let ((a!8 (= J (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= P (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15)))
      (a!24 (= Z (ite (= a!18 a!20) (ubv_to_int (bvxor a!21 a!22)) a!23)))
      (a!32 (= U (ite (= a!26 a!28) (ubv_to_int (bvxor a!29 a!30)) a!31))))
  (and (= L (= J K))
       (= W (= U V))
       (= R (= P Q))
       (= C1 1)
       (= D C)
       a!8
       (= I L1)
       (= H J1)
       (= G 4)
       (= F E)
       (= E D)
       (= D1 0)
       (= Y N1)
       (= Q (- 2))
       a!16
       (= O N1)
       (= N J1)
       (= M (- 1))
       (= K 1)
       (= A1 0)
       a!24
       (= X L1)
       (= V (- 1))
       a!32
       (= T N1)
       (= S L1)
       (= N1 M)
       (= L1 D1)
       (= J1 C1)
       (= I1 0)
       (= M1 0)
       (= K1 0)
       (>= J (- 32768))
       (>= I (- 32768))
       (>= H (- 128))
       (>= Y (- 32768))
       (>= P (- 32768))
       (>= O (- 32768))
       (>= N (- 128))
       (>= Z (- 32768))
       (>= X (- 32768))
       (>= U (- 32768))
       (>= T (- 32768))
       (>= S (- 32768))
       (<= J 32767)
       (<= I 32767)
       (<= H 127)
       (<= Y 32767)
       (<= P 32767)
       (<= O 32767)
       (<= N 127)
       (<= Z 32767)
       (<= X 32767)
       (<= U 32767)
       (<= T 32767)
       (<= S 32767)
       (not B1)
       (not (= (<= Z A1) B1))))))
      )
      (block_11_function_f__75_76_0 G G1 A B H1 E1 F1 J1 L1 N1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Bool) (P1 Int) (Q1 state_type) (R1 state_type) (S1 Int) (T1 tx_type) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) ) 
    (=>
      (and
        (block_6_f_74_76_0 C S1 A B T1 Q1 R1 U1 X1 A2)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!5 (ite (>= I 0)
                ((_ int_to_bv 16) I)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I)))))
      (a!6 (ite (>= J 0)
                ((_ int_to_bv 16) J)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) O)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) P)))))
      (a!13 (ite (>= O 0)
                 ((_ int_to_bv 16) O)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) O)))))
      (a!14 (ite (>= P 0)
                 ((_ int_to_bv 16) P)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) P)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!21 (ite (>= T 0)
                 ((_ int_to_bv 16) T)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!22 (ite (>= U 0)
                 ((_ int_to_bv 16) U)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!25 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J1)))))
      (a!27 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) L1)))))
      (a!29 (ite (>= J1 0)
                 ((_ int_to_bv 16) J1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J1)))))
      (a!30 (ite (>= L1 0)
                 ((_ int_to_bv 16) L1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) L1)))))
      (a!33 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Y)))))
      (a!35 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Z)))))
      (a!37 (ite (>= Y 0)
                 ((_ int_to_bv 16) Y)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Y)))))
      (a!38 (ite (>= Z 0)
                 ((_ int_to_bv 16) Z)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Z))))))
(let ((a!2 (ite (>= I 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) I)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= J 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) J)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!5 a!6)))))
      (a!10 (ite (>= O 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) O)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= P 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) P)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!13 a!14)))))
      (a!18 (ite (>= T 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) T)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= U 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) U)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!21 a!22)))))
      (a!26 (ite (>= J1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) J1)) #b1)
                 (= a!25 #b1)))
      (a!28 (ite (>= L1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) L1)) #b1)
                 (= a!27 #b1)))
      (a!31 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!29 a!30)))))
      (a!34 (ite (>= Y 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) Y)) #b1)
                 (= a!33 #b1)))
      (a!36 (ite (>= Z 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) Z)) #b1)
                 (= a!35 #b1)))
      (a!39 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!37 a!38))))))
(let ((a!8 (= K (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= Q (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15)))
      (a!24 (= V (ite (= a!18 a!20) (ubv_to_int (bvxor a!21 a!22)) a!23)))
      (a!32 (= M1 (ite (= a!26 a!28) (ubv_to_int (bvxor a!29 a!30)) a!31)))
      (a!40 (= A1 (ite (= a!34 a!36) (ubv_to_int (bvxor a!37 a!38)) a!39))))
  (and (not (= (<= N1 M1) O1))
       (= M (= K L))
       (= S (= Q R))
       (= X (= V W))
       (= I V1)
       (= L 1)
       a!8
       (= J Y1)
       (= H 5)
       (= G F)
       (= F E)
       (= E D)
       (= D C)
       (= R (- 2))
       a!16
       (= P B2)
       (= O V1)
       (= N (- 1))
       (= F1 E1)
       (= W (- 1))
       a!24
       (= U B2)
       (= T Y1)
       a!32
       (= E1 7)
       (= D1 V1)
       (= B1 0)
       a!40
       (= Z B2)
       (= Y Y1)
       (= N1 5)
       (= L1 Z1)
       (= K1 1)
       (= J1 W1)
       (= I1 H1)
       (= H1 3)
       (= G1 Y1)
       (= B2 N)
       (= Z1 I1)
       (= X1 0)
       (= U1 0)
       (= P1 0)
       (= W1 F1)
       (= V1 K1)
       (= A2 0)
       (= Y1 P1)
       (>= I (- 128))
       (>= K (- 32768))
       (>= J (- 32768))
       (>= Q (- 32768))
       (>= P (- 32768))
       (>= O (- 128))
       (>= F1 (- 128))
       (>= V (- 32768))
       (>= U (- 32768))
       (>= T (- 32768))
       (>= M1 (- 32768))
       (>= D1 (- 128))
       (>= A1 (- 32768))
       (>= Z (- 32768))
       (>= Y (- 32768))
       (>= L1 (- 32768))
       (>= J1 (- 128))
       (>= I1 (- 32768))
       (>= G1 (- 32768))
       (<= I 127)
       (<= K 32767)
       (<= J 32767)
       (<= Q 32767)
       (<= P 32767)
       (<= O 127)
       (<= F1 127)
       (<= V 32767)
       (<= U 32767)
       (<= T 32767)
       (<= M1 32767)
       (<= D1 127)
       (<= A1 32767)
       (<= Z 32767)
       (<= Y 32767)
       (<= L1 32767)
       (<= J1 127)
       (<= I1 32767)
       (<= G1 32767)
       (not O1)
       (not (= (<= A1 B1) C1))))))
      )
      (block_12_function_f__75_76_0 H S1 A B T1 Q1 R1 W1 Z1 B2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Bool) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Bool) (V1 Int) (W1 state_type) (X1 state_type) (Y1 Int) (Z1 tx_type) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int) ) 
    (=>
      (and
        (block_6_f_74_76_0 C Y1 A B Z1 W1 X1 A2 D2 G2)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) P)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q)))))
      (a!5 (ite (>= P 0)
                ((_ int_to_bv 16) P)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) P)))))
      (a!6 (ite (>= Q 0)
                ((_ int_to_bv 16) Q)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K)))))
      (a!13 (ite (>= J 0)
                 ((_ int_to_bv 16) J)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!14 (ite (>= K 0)
                 ((_ int_to_bv 16) K)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) V)))))
      (a!21 (ite (>= U 0)
                 ((_ int_to_bv 16) U)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!22 (ite (>= V 0)
                 ((_ int_to_bv 16) V)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) V)))))
      (a!25 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Z)))))
      (a!27 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) A1)))))
      (a!29 (ite (>= Z 0)
                 ((_ int_to_bv 16) Z)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Z)))))
      (a!30 (ite (>= A1 0)
                 ((_ int_to_bv 16) A1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) A1)))))
      (a!33 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q1)))))
      (a!35 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!37 (ite (>= Q1 0)
                 ((_ int_to_bv 16) Q1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q1)))))
      (a!38 (ite (>= R1 0)
                 ((_ int_to_bv 16) R1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!41 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K1)))))
      (a!43 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M1)))))
      (a!45 (ite (>= K1 0)
                 ((_ int_to_bv 16) K1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K1)))))
      (a!46 (ite (>= M1 0)
                 ((_ int_to_bv 16) M1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M1))))))
(let ((a!2 (ite (>= P 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) P)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= Q 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) Q)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!5 a!6)))))
      (a!10 (ite (>= J 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) J)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= K 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) K)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!13 a!14)))))
      (a!18 (ite (>= U 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) U)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= V 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) V)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!21 a!22)))))
      (a!26 (ite (>= Z 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) Z)) #b1)
                 (= a!25 #b1)))
      (a!28 (ite (>= A1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) A1)) #b1)
                 (= a!27 #b1)))
      (a!31 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!29 a!30)))))
      (a!34 (ite (>= Q1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) Q1)) #b1)
                 (= a!33 #b1)))
      (a!36 (ite (>= R1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) R1)) #b1)
                 (= a!35 #b1)))
      (a!39 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!37 a!38)))))
      (a!42 (ite (>= K1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) K1)) #b1)
                 (= a!41 #b1)))
      (a!44 (ite (>= M1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) M1)) #b1)
                 (= a!43 #b1)))
      (a!47 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!45 a!46))))))
(let ((a!8 (= R (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= L (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15)))
      (a!24 (= W (ite (= a!18 a!20) (ubv_to_int (bvxor a!21 a!22)) a!23)))
      (a!32 (= B1 (ite (= a!26 a!28) (ubv_to_int (bvxor a!29 a!30)) a!31)))
      (a!40 (= S1 (ite (= a!34 a!36) (ubv_to_int (bvxor a!37 a!38)) a!39)))
      (a!48 (= N1 (ite (= a!42 a!44) (ubv_to_int (bvxor a!45 a!46)) a!47))))
  (and (not (= (<= S1 T1) U1))
       (not (= (<= O1 N1) P1))
       (= N (= L M))
       (= T (= R S))
       (= Y (= W X))
       (= O (- 1))
       (= D C)
       a!8
       (= Q H2)
       (= P B2)
       (= M 1)
       a!16
       (= K E2)
       (= J B2)
       (= I 6)
       (= H G)
       (= G F)
       (= F E)
       (= E D)
       (= X (- 1))
       a!24
       (= V H2)
       (= U E2)
       (= S (- 2))
       (= L1 1)
       (= C1 0)
       a!32
       (= A1 H2)
       (= Z E2)
       a!40
       (= K1 C2)
       (= J1 I1)
       (= I1 3)
       (= H1 E2)
       (= G1 F1)
       (= F1 7)
       (= E1 B2)
       (= T1 5)
       (= R1 F2)
       (= Q1 C2)
       (= O1 5)
       a!48
       (= M1 F2)
       (= H2 O)
       (= F2 J1)
       (= D2 0)
       (= A2 0)
       (= V1 0)
       (= C2 G1)
       (= B2 L1)
       (= G2 0)
       (= E2 V1)
       (>= R (- 32768))
       (>= Q (- 32768))
       (>= P (- 128))
       (>= L (- 32768))
       (>= K (- 32768))
       (>= J (- 128))
       (>= W (- 32768))
       (>= V (- 32768))
       (>= U (- 32768))
       (>= B1 (- 32768))
       (>= A1 (- 32768))
       (>= Z (- 32768))
       (>= S1 (- 32768))
       (>= K1 (- 128))
       (>= J1 (- 32768))
       (>= H1 (- 32768))
       (>= G1 (- 128))
       (>= E1 (- 128))
       (>= R1 (- 32768))
       (>= Q1 (- 128))
       (>= N1 (- 32768))
       (>= M1 (- 32768))
       (<= R 32767)
       (<= Q 32767)
       (<= P 127)
       (<= L 32767)
       (<= K 32767)
       (<= J 127)
       (<= W 32767)
       (<= V 32767)
       (<= U 32767)
       (<= B1 32767)
       (<= A1 32767)
       (<= Z 32767)
       (<= S1 32767)
       (<= K1 127)
       (<= J1 32767)
       (<= H1 32767)
       (<= G1 127)
       (<= E1 127)
       (<= R1 32767)
       (<= Q1 127)
       (<= N1 32767)
       (<= M1 32767)
       (not U1)
       (not (= (<= B1 C1) D1))))))
      )
      (block_13_function_f__75_76_0 I Y1 A B Z1 W1 X1 C2 F2 H2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Bool) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Bool) (V1 Int) (W1 state_type) (X1 state_type) (Y1 Int) (Z1 tx_type) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int) ) 
    (=>
      (and
        (block_6_f_74_76_0 C Y1 A B Z1 W1 X1 A2 D2 G2)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) P)))))
      (a!3 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q)))))
      (a!5 (ite (>= P 0)
                ((_ int_to_bv 16) P)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) P)))))
      (a!6 (ite (>= Q 0)
                ((_ int_to_bv 16) Q)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q)))))
      (a!9 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K)))))
      (a!13 (ite (>= J 0)
                 ((_ int_to_bv 16) J)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) J)))))
      (a!14 (ite (>= K 0)
                 ((_ int_to_bv 16) K)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K)))))
      (a!17 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!19 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) V)))))
      (a!21 (ite (>= U 0)
                 ((_ int_to_bv 16) U)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!22 (ite (>= V 0)
                 ((_ int_to_bv 16) V)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) V)))))
      (a!25 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Z)))))
      (a!27 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) A1)))))
      (a!29 (ite (>= Z 0)
                 ((_ int_to_bv 16) Z)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Z)))))
      (a!30 (ite (>= A1 0)
                 ((_ int_to_bv 16) A1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) A1)))))
      (a!33 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q1)))))
      (a!35 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!37 (ite (>= Q1 0)
                 ((_ int_to_bv 16) Q1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) Q1)))))
      (a!38 (ite (>= R1 0)
                 ((_ int_to_bv 16) R1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) R1)))))
      (a!41 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K1)))))
      (a!43 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M1)))))
      (a!45 (ite (>= K1 0)
                 ((_ int_to_bv 16) K1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K1)))))
      (a!46 (ite (>= M1 0)
                 ((_ int_to_bv 16) M1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M1))))))
(let ((a!2 (ite (>= P 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) P)) #b1)
                (= a!1 #b1)))
      (a!4 (ite (>= Q 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) Q)) #b1)
                (= a!3 #b1)))
      (a!7 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!5 a!6)))))
      (a!10 (ite (>= J 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) J)) #b1)
                 (= a!9 #b1)))
      (a!12 (ite (>= K 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) K)) #b1)
                 (= a!11 #b1)))
      (a!15 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!13 a!14)))))
      (a!18 (ite (>= U 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) U)) #b1)
                 (= a!17 #b1)))
      (a!20 (ite (>= V 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) V)) #b1)
                 (= a!19 #b1)))
      (a!23 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!21 a!22)))))
      (a!26 (ite (>= Z 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) Z)) #b1)
                 (= a!25 #b1)))
      (a!28 (ite (>= A1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) A1)) #b1)
                 (= a!27 #b1)))
      (a!31 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!29 a!30)))))
      (a!34 (ite (>= Q1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) Q1)) #b1)
                 (= a!33 #b1)))
      (a!36 (ite (>= R1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) R1)) #b1)
                 (= a!35 #b1)))
      (a!39 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!37 a!38)))))
      (a!42 (ite (>= K1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) K1)) #b1)
                 (= a!41 #b1)))
      (a!44 (ite (>= M1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) M1)) #b1)
                 (= a!43 #b1)))
      (a!47 (* (- 1) (ubv_to_int (bvmul #xffff (bvxor a!45 a!46))))))
(let ((a!8 (= R (ite (= a!2 a!4) (ubv_to_int (bvxor a!5 a!6)) a!7)))
      (a!16 (= L (ite (= a!10 a!12) (ubv_to_int (bvxor a!13 a!14)) a!15)))
      (a!24 (= W (ite (= a!18 a!20) (ubv_to_int (bvxor a!21 a!22)) a!23)))
      (a!32 (= B1 (ite (= a!26 a!28) (ubv_to_int (bvxor a!29 a!30)) a!31)))
      (a!40 (= S1 (ite (= a!34 a!36) (ubv_to_int (bvxor a!37 a!38)) a!39)))
      (a!48 (= N1 (ite (= a!42 a!44) (ubv_to_int (bvxor a!45 a!46)) a!47))))
  (and (not (= (<= S1 T1) U1))
       (not (= (<= O1 N1) P1))
       (= N (= L M))
       (= T (= R S))
       (= Y (= W X))
       (= O (- 1))
       (= D C)
       a!8
       (= Q H2)
       (= P B2)
       (= M 1)
       a!16
       (= K E2)
       (= J B2)
       (= I H)
       (= H G)
       (= G F)
       (= F E)
       (= E D)
       (= X (- 1))
       a!24
       (= V H2)
       (= U E2)
       (= S (- 2))
       (= L1 1)
       (= C1 0)
       a!32
       (= A1 H2)
       (= Z E2)
       a!40
       (= K1 C2)
       (= J1 I1)
       (= I1 3)
       (= H1 E2)
       (= G1 F1)
       (= F1 7)
       (= E1 B2)
       (= T1 5)
       (= R1 F2)
       (= Q1 C2)
       (= O1 5)
       a!48
       (= M1 F2)
       (= H2 O)
       (= F2 J1)
       (= D2 0)
       (= A2 0)
       (= V1 0)
       (= C2 G1)
       (= B2 L1)
       (= G2 0)
       (= E2 V1)
       (>= R (- 32768))
       (>= Q (- 32768))
       (>= P (- 128))
       (>= L (- 32768))
       (>= K (- 32768))
       (>= J (- 128))
       (>= W (- 32768))
       (>= V (- 32768))
       (>= U (- 32768))
       (>= B1 (- 32768))
       (>= A1 (- 32768))
       (>= Z (- 32768))
       (>= S1 (- 32768))
       (>= K1 (- 128))
       (>= J1 (- 32768))
       (>= H1 (- 32768))
       (>= G1 (- 128))
       (>= E1 (- 128))
       (>= R1 (- 32768))
       (>= Q1 (- 128))
       (>= N1 (- 32768))
       (>= M1 (- 32768))
       (<= R 32767)
       (<= Q 32767)
       (<= P 127)
       (<= L 32767)
       (<= K 32767)
       (<= J 127)
       (<= W 32767)
       (<= V 32767)
       (<= U 32767)
       (<= B1 32767)
       (<= A1 32767)
       (<= Z 32767)
       (<= S1 32767)
       (<= K1 127)
       (<= J1 32767)
       (<= H1 32767)
       (<= G1 127)
       (<= E1 127)
       (<= R1 32767)
       (<= Q1 127)
       (<= N1 32767)
       (<= M1 32767)
       (not (= (<= B1 C1) D1))))))
      )
      (block_7_return_function_f__75_76_0 I Y1 A B Z1 W1 X1 C2 F2 H2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        true
      )
      (block_14_function_f__75_76_0 C F A B G D E H I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (block_14_function_f__75_76_0 C J A B K F G L M N)
        (summary_3_function_f__75_76_0 D J A B K H I)
        (let ((a!1 (store (balances G) J (+ (select (balances G) J) E)))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 240))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 31))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 18))
      (a!5 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 38))
      (a!6 (>= (+ (select (balances G) J) E) 0))
      (a!7 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  (and (= H (state_type a!1))
       a!2
       a!3
       a!4
       a!5
       (= (msg.value K) 0)
       (= (msg.sig K) 638722032)
       (= C 0)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!6
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!7
       (= G F)))
      )
      (summary_4_function_f__75_76_0 D J A B K F I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__75_76_0 C F A B G D E)
        (interface_0_C_76_0 F A B D)
        (= C 0)
      )
      (interface_0_C_76_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_76_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_76_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_16_C_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_16_C_76_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_17_C_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_17_C_76_0 C F A B G D E)
        true
      )
      (contract_initializer_15_C_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_18_C_76_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_18_C_76_0 C H A B I E F)
        (contract_initializer_15_C_76_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_76_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_15_C_76_0 D H A B I F G)
        (implicit_constructor_entry_18_C_76_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_76_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__75_76_0 C F A B G D E)
        (interface_0_C_76_0 F A B D)
        (= C 6)
      )
      error_target_13_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_13_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
