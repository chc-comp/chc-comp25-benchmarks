(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |summary_4_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_6_f_60_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |block_11_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |block_7_return_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |contract_initializer_14_C_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_after_init_16_C_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_10_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |summary_3_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_constructor_2_C_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_9_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |interface_0_C_62_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |implicit_constructor_entry_17_C_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_8_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |block_5_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |error_target_8_0| ( ) Bool)
(declare-fun |block_12_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)
(declare-fun |contract_initializer_entry_15_C_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_13_function_f__61_62_0| ( Int Int abi_type crypto_type tx_type state_type state_type Int ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__61_62_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_5_function_f__61_62_0 C F A B G D E H)
        (and (= C 0) (= E D))
      )
      (block_6_f_60_62_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Bool) (G Int) (H Int) (I Int) (J state_type) (K state_type) (L Int) (M tx_type) (N Int) (O Int) ) 
    (=>
      (and
        (block_6_f_60_62_0 C L A B M J K N)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H)))))
      (a!3 (ite (>= H 0)
                ((_ int_to_bv 16) H)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) H))))))
(let ((a!2 (ite (>= H 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) H)) #b1)
                (= a!1 #b1)))
      (a!4 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!3))))))
(let ((a!5 (= I (ite a!2 (ubv_to_int (bvnot a!3)) a!4))))
  (and (= H O)
       (= D 1)
       (= E 0)
       (= O G)
       (= G 1)
       a!5
       (= N 0)
       (>= H (- 32768))
       (>= I (- 32768))
       (<= H 32767)
       (<= I 32767)
       (not F)
       (= F (= I E))))))
      )
      (block_8_function_f__61_62_0 D L A B M J K O)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_8_function_f__61_62_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__61_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_9_function_f__61_62_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__61_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_10_function_f__61_62_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__61_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_11_function_f__61_62_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__61_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_12_function_f__61_62_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__61_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        (block_7_return_function_f__61_62_0 C F A B G D E H)
        true
      )
      (summary_3_function_f__61_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R state_type) (S state_type) (T Int) (U tx_type) (V Int) (W Int) (X Int) ) 
    (=>
      (and
        (block_6_f_60_62_0 C T A B U R S V)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) P)))))
      (a!3 (ite (>= P 0)
                ((_ int_to_bv 16) P)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) P)))))
      (a!6 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K)))))
      (a!8 (ite (>= K 0)
                ((_ int_to_bv 16) K)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) K))))))
(let ((a!2 (ite (>= P 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) P)) #b1)
                (= a!1 #b1)))
      (a!4 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!3)))))
      (a!7 (ite (>= K 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) K)) #b1)
                (= a!6 #b1)))
      (a!9 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!8))))))
(let ((a!5 (= Q (ite a!2 (ubv_to_int (bvnot a!3)) a!4)))
      (a!10 (= L (ite a!7 (ubv_to_int (bvnot a!8)) a!9))))
  (and (= G (= Q F))
       a!5
       (= E 2)
       (= V 0)
       (= M 0)
       (= I 255)
       (= H W)
       (= F 0)
       (= D C)
       (= O 1)
       a!10
       (= K X)
       (= J I)
       (= X J)
       (= P W)
       (= W O)
       (>= Q (- 32768))
       (>= H (- 32768))
       (>= L (- 32768))
       (>= K (- 32768))
       (>= J (- 32768))
       (>= P (- 32768))
       (<= Q 32767)
       (<= H 32767)
       (<= L 32767)
       (<= K 32767)
       (<= J 32767)
       (<= P 32767)
       (not N)
       (= N (= L M))))))
      )
      (block_9_function_f__61_62_0 E T A B U R S X)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Bool) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z state_type) (A1 state_type) (B1 Int) (C1 tx_type) (D1 Int) (E1 Int) (F1 Int) (G1 Int) ) 
    (=>
      (and
        (block_6_f_60_62_0 C B1 A B C1 Z A1 D1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) L)))))
      (a!3 (ite (>= L 0)
                ((_ int_to_bv 16) L)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) L)))))
      (a!6 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!8 (ite (>= S 0)
                ((_ int_to_bv 16) S)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) S)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) X)))))
      (a!13 (ite (>= X 0)
                 ((_ int_to_bv 16) X)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) X))))))
(let ((a!2 (ite (>= L 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) L)) #b1)
                (= a!1 #b1)))
      (a!4 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!3)))))
      (a!7 (ite (>= S 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) S)) #b1)
                (= a!6 #b1)))
      (a!9 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!8)))))
      (a!12 (ite (>= X 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) X)) #b1)
                 (= a!11 #b1)))
      (a!14 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!13))))))
(let ((a!5 (= M (ite a!2 (ubv_to_int (bvnot a!3)) a!4)))
      (a!10 (= T (ite a!7 (ubv_to_int (bvnot a!8)) a!9)))
      (a!15 (= Y (ite a!12 (ubv_to_int (bvnot a!13)) a!14))))
  (and (= O (= M N))
       (= V (= T U))
       (= F 3)
       (= N 0)
       (= I E1)
       (= G 0)
       (= E D)
       (= D C)
       (= E1 W)
       (= R Q)
       (= Q 15)
       (= P F1)
       a!5
       (= L F1)
       (= K J)
       (= J 255)
       (= X E1)
       (= W 1)
       (= U 240)
       a!10
       (= S G1)
       (= G1 R)
       a!15
       (= F1 K)
       (= D1 0)
       (>= I (- 32768))
       (>= R (- 32768))
       (>= P (- 32768))
       (>= M (- 32768))
       (>= L (- 32768))
       (>= K (- 32768))
       (>= X (- 32768))
       (>= T (- 32768))
       (>= S (- 32768))
       (>= Y (- 32768))
       (<= I 32767)
       (<= R 32767)
       (<= P 32767)
       (<= M 32767)
       (<= L 32767)
       (<= K 32767)
       (<= X 32767)
       (<= T 32767)
       (<= S 32767)
       (<= Y 32767)
       (not V)
       (= H (= Y G))))))
      )
      (block_10_function_f__61_62_0 F B1 A B C1 Z A1 G1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 state_type) (I1 state_type) (J1 Int) (K1 tx_type) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) ) 
    (=>
      (and
        (block_6_f_60_62_0 C J1 A B K1 H1 I1 L1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M)))))
      (a!3 (ite (>= M 0)
                ((_ int_to_bv 16) M)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) M)))))
      (a!6 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!8 (ite (>= T 0)
                ((_ int_to_bv 16) T)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) T)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F1)))))
      (a!13 (ite (>= F1 0)
                 ((_ int_to_bv 16) F1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) F1)))))
      (a!16 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) A1)))))
      (a!18 (ite (>= A1 0)
                 ((_ int_to_bv 16) A1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) A1))))))
(let ((a!2 (ite (>= M 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) M)) #b1)
                (= a!1 #b1)))
      (a!4 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!3)))))
      (a!7 (ite (>= T 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) T)) #b1)
                (= a!6 #b1)))
      (a!9 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!8)))))
      (a!12 (ite (>= F1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) F1)) #b1)
                 (= a!11 #b1)))
      (a!14 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!13)))))
      (a!17 (ite (>= A1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) A1)) #b1)
                 (= a!16 #b1)))
      (a!19 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!18))))))
(let ((a!5 (= N (ite a!2 (ubv_to_int (bvnot a!3)) a!4)))
      (a!10 (= U (ite a!7 (ubv_to_int (bvnot a!8)) a!9)))
      (a!15 (= G1 (ite a!12 (ubv_to_int (bvnot a!13)) a!14)))
      (a!20 (= B1 (ite a!17 (ubv_to_int (bvnot a!18)) a!19))))
  (and (= I (= G1 H))
       (= P (= N O))
       (= W (= U V))
       (= G 4)
       (= O 0)
       (= H 0)
       (= F E)
       (= E D)
       (= D C)
       (= R 15)
       (= Q N1)
       a!5
       (= M N1)
       (= L K)
       (= K 255)
       (= J M1)
       (= N1 L)
       (= E1 1)
       (= A1 P1)
       (= Z Y)
       (= Y (- 1))
       (= X O1)
       (= V 240)
       a!10
       (= T O1)
       (= S R)
       (= L1 0)
       a!15
       (= F1 M1)
       (= C1 0)
       a!20
       (= P1 Z)
       (= O1 S)
       (= M1 E1)
       (>= Q (- 32768))
       (>= N (- 32768))
       (>= M (- 32768))
       (>= L (- 32768))
       (>= J (- 32768))
       (>= A1 (- 32768))
       (>= Z (- 32768))
       (>= X (- 32768))
       (>= U (- 32768))
       (>= T (- 32768))
       (>= S (- 32768))
       (>= G1 (- 32768))
       (>= F1 (- 32768))
       (>= B1 (- 32768))
       (<= Q 32767)
       (<= N 32767)
       (<= M 32767)
       (<= L 32767)
       (<= J 32767)
       (<= A1 32767)
       (<= Z 32767)
       (<= X 32767)
       (<= U 32767)
       (<= T 32767)
       (<= S 32767)
       (<= G1 32767)
       (<= F1 32767)
       (<= B1 32767)
       (not D1)
       (not (= (= B1 C1) D1))))))
      )
      (block_11_function_f__61_62_0 G J1 A B K1 H1 I1 P1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Int) (P1 state_type) (Q1 state_type) (R1 Int) (S1 tx_type) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) ) 
    (=>
      (and
        (block_6_f_60_62_0 C R1 A B S1 P1 Q1 T1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N)))))
      (a!3 (ite (>= N 0)
                ((_ int_to_bv 16) N)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N)))))
      (a!6 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!8 (ite (>= U 0)
                ((_ int_to_bv 16) U)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I1)))))
      (a!13 (ite (>= I1 0)
                 ((_ int_to_bv 16) I1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I1)))))
      (a!16 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) B1)))))
      (a!18 (ite (>= B1 0)
                 ((_ int_to_bv 16) B1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) B1)))))
      (a!21 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N1)))))
      (a!23 (ite (>= N1 0)
                 ((_ int_to_bv 16) N1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N1))))))
(let ((a!2 (ite (>= N 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) N)) #b1)
                (= a!1 #b1)))
      (a!4 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!3)))))
      (a!7 (ite (>= U 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) U)) #b1)
                (= a!6 #b1)))
      (a!9 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!8)))))
      (a!12 (ite (>= I1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) I1)) #b1)
                 (= a!11 #b1)))
      (a!14 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!13)))))
      (a!17 (ite (>= B1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) B1)) #b1)
                 (= a!16 #b1)))
      (a!19 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!18)))))
      (a!22 (ite (>= N1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) N1)) #b1)
                 (= a!21 #b1)))
      (a!24 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!23))))))
(let ((a!5 (= O (ite a!2 (ubv_to_int (bvnot a!3)) a!4)))
      (a!10 (= V (ite a!7 (ubv_to_int (bvnot a!8)) a!9)))
      (a!15 (= J1 (ite a!12 (ubv_to_int (bvnot a!13)) a!14)))
      (a!20 (= C1 (ite a!17 (ubv_to_int (bvnot a!18)) a!19)))
      (a!25 (= O1 (ite a!22 (ubv_to_int (bvnot a!23)) a!24))))
  (and (= J (= O1 I))
       (= Q (= O P))
       (= L1 (= J1 K1))
       (= X (= V W))
       (= H 5)
       (= P 0)
       (= I 0)
       (= G F)
       (= F E)
       (= E D)
       (= D C)
       (= R V1)
       a!5
       (= N V1)
       (= M L)
       (= L 255)
       (= K U1)
       (= F1 X1)
       (= A1 Z)
       (= Z (- 1))
       (= Y W1)
       (= W 240)
       a!10
       (= U W1)
       (= T S)
       (= S 15)
       (= W1 T)
       (= N1 U1)
       a!15
       (= I1 Y1)
       (= H1 G1)
       (= G1 (- 2))
       (= D1 0)
       a!20
       (= B1 X1)
       (= U1 M1)
       a!25
       (= M1 1)
       (= K1 1)
       (= Y1 H1)
       (= T1 0)
       (= X1 A1)
       (= V1 M)
       (>= R (- 32768))
       (>= O (- 32768))
       (>= N (- 32768))
       (>= M (- 32768))
       (>= K (- 32768))
       (>= F1 (- 32768))
       (>= A1 (- 32768))
       (>= Y (- 32768))
       (>= V (- 32768))
       (>= U (- 32768))
       (>= T (- 32768))
       (>= N1 (- 32768))
       (>= J1 (- 32768))
       (>= I1 (- 32768))
       (>= H1 (- 32768))
       (>= C1 (- 32768))
       (>= B1 (- 32768))
       (>= O1 (- 32768))
       (<= R 32767)
       (<= O 32767)
       (<= N 32767)
       (<= M 32767)
       (<= K 32767)
       (<= F1 32767)
       (<= A1 32767)
       (<= Y 32767)
       (<= V 32767)
       (<= U 32767)
       (<= T 32767)
       (<= N1 32767)
       (<= J1 32767)
       (<= I1 32767)
       (<= H1 32767)
       (<= C1 32767)
       (<= B1 32767)
       (<= O1 32767)
       (not L1)
       (not (= (= C1 D1) E1))))))
      )
      (block_12_function_f__61_62_0 H R1 A B S1 P1 Q1 Y1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Int) (P1 state_type) (Q1 state_type) (R1 Int) (S1 tx_type) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) ) 
    (=>
      (and
        (block_6_f_60_62_0 C R1 A B S1 P1 Q1 T1)
        (let ((a!1 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N)))))
      (a!3 (ite (>= N 0)
                ((_ int_to_bv 16) N)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N)))))
      (a!6 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!8 (ite (>= U 0)
                ((_ int_to_bv 16) U)
                (bvmul #xffff ((_ int_to_bv 16) (* (- 1) U)))))
      (a!11 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I1)))))
      (a!13 (ite (>= I1 0)
                 ((_ int_to_bv 16) I1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) I1)))))
      (a!16 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) B1)))))
      (a!18 (ite (>= B1 0)
                 ((_ int_to_bv 16) B1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) B1)))))
      (a!21 ((_ extract 15 15) (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N1)))))
      (a!23 (ite (>= N1 0)
                 ((_ int_to_bv 16) N1)
                 (bvmul #xffff ((_ int_to_bv 16) (* (- 1) N1))))))
(let ((a!2 (ite (>= N 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) N)) #b1)
                (= a!1 #b1)))
      (a!4 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!3)))))
      (a!7 (ite (>= U 0)
                (= ((_ extract 15 15) ((_ int_to_bv 16) U)) #b1)
                (= a!6 #b1)))
      (a!9 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!8)))))
      (a!12 (ite (>= I1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) I1)) #b1)
                 (= a!11 #b1)))
      (a!14 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!13)))))
      (a!17 (ite (>= B1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) B1)) #b1)
                 (= a!16 #b1)))
      (a!19 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!18)))))
      (a!22 (ite (>= N1 0)
                 (= ((_ extract 15 15) ((_ int_to_bv 16) N1)) #b1)
                 (= a!21 #b1)))
      (a!24 (* (- 1) (ubv_to_int (bvmul #xffff (bvnot a!23))))))
(let ((a!5 (= O (ite a!2 (ubv_to_int (bvnot a!3)) a!4)))
      (a!10 (= V (ite a!7 (ubv_to_int (bvnot a!8)) a!9)))
      (a!15 (= J1 (ite a!12 (ubv_to_int (bvnot a!13)) a!14)))
      (a!20 (= C1 (ite a!17 (ubv_to_int (bvnot a!18)) a!19)))
      (a!25 (= O1 (ite a!22 (ubv_to_int (bvnot a!23)) a!24))))
  (and (= J (= O1 I))
       (= Q (= O P))
       (= L1 (= J1 K1))
       (= X (= V W))
       (= H G)
       (= P 0)
       (= I 0)
       (= G F)
       (= F E)
       (= E D)
       (= D C)
       (= R V1)
       a!5
       (= N V1)
       (= M L)
       (= L 255)
       (= K U1)
       (= F1 X1)
       (= A1 Z)
       (= Z (- 1))
       (= Y W1)
       (= W 240)
       a!10
       (= U W1)
       (= T S)
       (= S 15)
       (= W1 T)
       (= N1 U1)
       a!15
       (= I1 Y1)
       (= H1 G1)
       (= G1 (- 2))
       (= D1 0)
       a!20
       (= B1 X1)
       (= U1 M1)
       a!25
       (= M1 1)
       (= K1 1)
       (= Y1 H1)
       (= T1 0)
       (= X1 A1)
       (= V1 M)
       (>= R (- 32768))
       (>= O (- 32768))
       (>= N (- 32768))
       (>= M (- 32768))
       (>= K (- 32768))
       (>= F1 (- 32768))
       (>= A1 (- 32768))
       (>= Y (- 32768))
       (>= V (- 32768))
       (>= U (- 32768))
       (>= T (- 32768))
       (>= N1 (- 32768))
       (>= J1 (- 32768))
       (>= I1 (- 32768))
       (>= H1 (- 32768))
       (>= C1 (- 32768))
       (>= B1 (- 32768))
       (>= O1 (- 32768))
       (<= R 32767)
       (<= O 32767)
       (<= N 32767)
       (<= M 32767)
       (<= K 32767)
       (<= F1 32767)
       (<= A1 32767)
       (<= Y 32767)
       (<= V 32767)
       (<= U 32767)
       (<= T 32767)
       (<= N1 32767)
       (<= J1 32767)
       (<= I1 32767)
       (<= H1 32767)
       (<= C1 32767)
       (<= B1 32767)
       (<= O1 32767)
       (not (= (= C1 D1) E1))))))
      )
      (block_7_return_function_f__61_62_0 H R1 A B S1 P1 Q1 Y1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) ) 
    (=>
      (and
        true
      )
      (block_13_function_f__61_62_0 C F A B G D E H)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) (L Int) ) 
    (=>
      (and
        (block_13_function_f__61_62_0 C J A B K F G L)
        (summary_3_function_f__61_62_0 D J A B K H I)
        (let ((a!1 (store (balances G) J (+ (select (balances G) J) E)))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 240))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 31))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 18))
      (a!5 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 38))
      (a!6 (>= (+ (select (balances G) J) E) 0))
      (a!7 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  (and (= H (state_type a!1))
       a!2
       a!3
       a!4
       a!5
       (= (msg.value K) 0)
       (= (msg.sig K) 638722032)
       (= C 0)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!6
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!7
       (= G F)))
      )
      (summary_4_function_f__61_62_0 D J A B K F I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__61_62_0 C F A B G D E)
        (interface_0_C_62_0 F A B D)
        (= C 0)
      )
      (interface_0_C_62_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_62_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_62_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_15_C_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_15_C_62_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_16_C_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_16_C_62_0 C F A B G D E)
        true
      )
      (contract_initializer_14_C_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_17_C_62_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_17_C_62_0 C H A B I E F)
        (contract_initializer_14_C_62_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_62_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_14_C_62_0 D H A B I F G)
        (implicit_constructor_entry_17_C_62_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_62_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_4_function_f__61_62_0 C F A B G D E)
        (interface_0_C_62_0 F A B D)
        (= C 2)
      )
      error_target_8_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_8_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
