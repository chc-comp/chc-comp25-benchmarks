(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |contract_initializer_entry_13_C_56_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_12_C_56_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_6_f_54_56_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |summary_4_function_f__55_56_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |interface_0_C_56_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |error_target_5_0| ( ) Bool)
(declare-fun |block_9_function_f__55_56_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |contract_initializer_after_init_14_C_56_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_7_return_function_f__55_56_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |block_11_function_f__55_56_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |summary_constructor_2_C_56_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_5_function_f__55_56_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |implicit_constructor_entry_15_C_56_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_8_function_f__55_56_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |summary_3_function_f__55_56_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)

(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__55_56_0 D G B C H E I F J A K)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_5_function_f__55_56_0 D G B C H E I F J A K)
        (and (= D 0) (= J I) (= F E))
      )
      (block_6_f_54_56_0 D G B C H E I F J A K)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Bool) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 state_type) (D1 state_type) (E1 Int) (F1 tx_type) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) ) 
    (=>
      (and
        (block_6_f_54_56_0 D E1 B C F1 C1 G1 D1 H1 A J1)
        (let ((a!1 (ite (and (<= (+ R S) 255) (<= 0 (+ R S))) (+ R S) Z))
      (a!2 (ite (and (<= (+ G H) 255) (<= 0 (+ G H))) (+ G H) Y)))
  (and (= M (>= K L))
       (= (+ R S) (+ Z (* 256 B1)))
       (= (+ G H) (+ Y (* 256 A1)))
       (= V L1)
       (= K K1)
       (= A 0)
       (= W 0)
       (= U T)
       (= T a!1)
       (= S 1)
       (= R I1)
       (= Q K1)
       (= P O)
       (= O 255)
       (= N H1)
       (= L H1)
       (= J I)
       (= I a!2)
       (= H 255)
       (= G H1)
       (= F J1)
       (= E 2)
       (= J1 0)
       (= L1 U)
       (= K1 J)
       (= I1 P)
       (>= V 0)
       (>= K 0)
       (>= H1 0)
       (>= Z 0)
       (>= P 0)
       (>= N 0)
       (>= L 0)
       (>= Y 0)
       (<= V 255)
       (<= K 255)
       (<= H1 255)
       (<= Z 255)
       (<= P 255)
       (<= N 255)
       (<= L 255)
       (<= Y 255)
       (not X)
       (= M true)
       (= X (= V W))))
      )
      (block_8_function_f__55_56_0 E E1 B C F1 C1 G1 D1 I1 A L1)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_8_function_f__55_56_0 D G B C H E I F J A K)
        true
      )
      (summary_3_function_f__55_56_0 D G B C H E I F J A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_9_function_f__55_56_0 D G B C H E I F J A K)
        true
      )
      (summary_3_function_f__55_56_0 D G B C H E I F J A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_7_return_function_f__55_56_0 D G B C H E I F J A K)
        true
      )
      (summary_3_function_f__55_56_0 D G B C H E I F J A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Bool) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 state_type) (M1 state_type) (N1 Int) (O1 tx_type) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) ) 
    (=>
      (and
        (block_6_f_54_56_0 D N1 B C O1 L1 P1 M1 Q1 A S1)
        (let ((a!1 (ite (and (<= (+ S T) 255) (<= 0 (+ S T))) (+ S T) I1))
      (a!2 (ite (and (<= (+ H I) 255) (<= 0 (+ H I))) (+ H I) H1)))
  (and (= N (>= L M))
       (= G1 (= E1 F1))
       (= (+ H I) (+ H1 (* 256 J1)))
       (= (+ S T) (+ I1 (* 256 K1)))
       (= A 0)
       (= F1 254)
       (= U a!1)
       (= K J)
       (= J a!2)
       (= H Q1)
       (= G S1)
       (= F 3)
       (= E D)
       (= R1 Q)
       (= E1 V1)
       (= D1 C1)
       (= C1 (+ A1 B1))
       (= B1 255)
       (= A1 R1)
       (= Z U1)
       (= X 0)
       (= W U1)
       (= V U)
       (= T 1)
       (= S R1)
       (= R T1)
       (= Q P)
       (= P 255)
       (= O Q1)
       (= M Q1)
       (= L T1)
       (= T1 K)
       (= I 255)
       (= V1 D1)
       (= U1 V)
       (= S1 0)
       (>= H1 0)
       (>= E1 0)
       (>= D1 0)
       (>= C1 0)
       (>= A1 0)
       (>= Z 0)
       (>= W 0)
       (>= Q 0)
       (>= O 0)
       (>= M 0)
       (>= L 0)
       (>= Q1 0)
       (>= I1 0)
       (<= H1 255)
       (<= E1 255)
       (<= D1 255)
       (<= C1 255)
       (<= A1 255)
       (<= Z 255)
       (<= W 255)
       (<= Q 255)
       (<= O 255)
       (<= M 255)
       (<= L 255)
       (<= Q1 255)
       (<= I1 255)
       (= N true)
       (not G1)
       (= Y (= W X))))
      )
      (block_9_function_f__55_56_0 F N1 B C O1 L1 P1 M1 R1 A V1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 state_type) (O1 state_type) (P1 Int) (Q1 tx_type) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) ) 
    (=>
      (and
        (block_6_f_54_56_0 E P1 C D Q1 N1 R1 O1 S1 A U1)
        (let ((a!1 (ite (and (<= (+ T U) 255) (<= 0 (+ T U))) (+ T U) K1))
      (a!2 (ite (and (<= (+ I J) 255) (<= 0 (+ I J))) (+ I J) J1)))
  (and (= Z (= X Y))
       (= H1 (= F1 G1))
       (= (+ I J) (+ J1 (* 256 L1)))
       (= (+ T U) (+ K1 (* 256 M1)))
       (= B I1)
       (= W V)
       (= M V1)
       (= L K)
       (= J 255)
       (= I S1)
       (= H U1)
       (= G F)
       (= F E)
       (= T1 R)
       (= A 0)
       (= I1 X1)
       (= G1 254)
       (= F1 X1)
       (= E1 D1)
       (= D1 (+ B1 C1))
       (= C1 255)
       (= B1 T1)
       (= A1 W1)
       (= Y 0)
       (= X W1)
       (= V a!1)
       (= U 1)
       (= T T1)
       (= S V1)
       (= R Q)
       (= Q 255)
       (= P S1)
       (= N S1)
       (= V1 L)
       (= K a!2)
       (= X1 E1)
       (= W1 W)
       (= U1 0)
       (>= M 0)
       (>= J1 0)
       (>= I1 0)
       (>= F1 0)
       (>= E1 0)
       (>= D1 0)
       (>= B1 0)
       (>= A1 0)
       (>= X 0)
       (>= R 0)
       (>= P 0)
       (>= N 0)
       (>= S1 0)
       (>= K1 0)
       (<= M 255)
       (<= J1 255)
       (<= I1 255)
       (<= F1 255)
       (<= E1 255)
       (<= D1 255)
       (<= B1 255)
       (<= A1 255)
       (<= X 255)
       (<= R 255)
       (<= P 255)
       (<= N 255)
       (<= S1 255)
       (<= K1 255)
       (= O true)
       (= O (>= M N))))
      )
      (block_7_return_function_f__55_56_0 G P1 C D Q1 N1 R1 O1 T1 B X1)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        true
      )
      (block_11_function_f__55_56_0 D G B C H E I F J A K)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E Int) (F Int) (G state_type) (H state_type) (I state_type) (J state_type) (K Int) (L tx_type) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (block_11_function_f__55_56_0 D K B C L G M H N A P)
        (summary_3_function_f__55_56_0 E K B C L I N J O A)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data L)) 3) 52))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data L)) 2) 212))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data L)) 1) 32))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data L)) 0) 49))
      (a!5 (>= (+ (select (balances H) K) F) 0))
      (a!6 (<= (+ (select (balances H) K) F)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances H) K (+ (select (balances H) K) F))))
  (and (= H G)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value L) 0)
       (= (msg.sig L) 824235060)
       (= D 0)
       (= N M)
       (>= (tx.origin L) 0)
       (>= (tx.gasprice L) 0)
       (>= (msg.value L) 0)
       (>= (msg.sender L) 0)
       (>= (block.timestamp L) 0)
       (>= (block.number L) 0)
       (>= (block.gaslimit L) 0)
       (>= (block.difficulty L) 0)
       (>= (block.coinbase L) 0)
       (>= (block.chainid L) 0)
       (>= (block.basefee L) 0)
       (>= (bytes_tuple_accessor_length (msg.data L)) 4)
       a!5
       (>= F (msg.value L))
       (<= (tx.origin L) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender L) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase L) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= I (state_type a!7))))
      )
      (summary_4_function_f__55_56_0 E K B C L G M J O A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) ) 
    (=>
      (and
        (summary_4_function_f__55_56_0 D G B C H E I F J A)
        (interface_0_C_56_0 G B C E)
        (= D 0)
      )
      (interface_0_C_56_0 G B C F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_56_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_56_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_13_C_56_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_13_C_56_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_14_C_56_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_14_C_56_0 C F A B G D E)
        true
      )
      (contract_initializer_12_C_56_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_15_C_56_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_15_C_56_0 C H A B I E F)
        (contract_initializer_12_C_56_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_56_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_12_C_56_0 D H A B I F G)
        (implicit_constructor_entry_15_C_56_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_56_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) ) 
    (=>
      (and
        (summary_4_function_f__55_56_0 D G B C H E I F J A)
        (interface_0_C_56_0 G B C E)
        (= D 2)
      )
      error_target_5_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_5_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
