(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |error_target_7_0| ( ) Bool)
(declare-fun |interface_0_C_70_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |contract_initializer_13_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_6_f_68_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |summary_constructor_2_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |implicit_constructor_entry_16_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_after_init_15_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_5_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |block_7_return_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |block_10_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |contract_initializer_entry_14_C_70_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |summary_4_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |summary_3_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |block_9_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |block_8_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)
(declare-fun |block_12_function_f__69_70_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__69_70_0 D G B C H E I F J A K)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_5_function_f__69_70_0 D G B C H E I F J A K)
        (and (= D 0) (= J I) (= F E))
      )
      (block_6_f_68_70_0 D G B C H E I F J A K)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S state_type) (T state_type) (U Int) (V tx_type) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) ) 
    (=>
      (and
        (block_6_f_68_70_0 D U B C V S W T X A Z)
        (let ((a!1 (and (<= (+ H (* (- 1) I)) 127) (<= (- 128) (+ H (* (- 1) I))))))
(let ((a!2 (= J (ite a!1 (+ H (* (- 1) I)) Q))))
  (and (= (+ H (* (- 1) I)) (+ Q (* 256 R)))
       (= L A1)
       (= A 0)
       (= O X)
       (= M 127)
       (= K J)
       a!2
       (= I 127)
       (= H Y)
       (= G Z)
       (= F P)
       (= E 1)
       (= Y F)
       (= A1 K)
       (= P (- 2))
       (= Z 0)
       (>= L (- 128))
       (>= O (- 128))
       (>= F (- 128))
       (>= Q (- 128))
       (>= X (- 128))
       (<= L 127)
       (<= O 127)
       (<= F 127)
       (<= Q 127)
       (<= X 127)
       (not N)
       (= N (= L M)))))
      )
      (block_8_function_f__69_70_0 E U B C V S W T Y A A1)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_8_function_f__69_70_0 D G B C H E I F J A K)
        true
      )
      (summary_3_function_f__69_70_0 D G B C H E I F J A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_9_function_f__69_70_0 D G B C H E I F J A K)
        true
      )
      (summary_3_function_f__69_70_0 D G B C H E I F J A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_10_function_f__69_70_0 D G B C H E I F J A K)
        true
      )
      (summary_3_function_f__69_70_0 D G B C H E I F J A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (block_7_return_function_f__69_70_0 D G B C H E I F J A K)
        true
      )
      (summary_3_function_f__69_70_0 D G B C H E I F J A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 state_type) (H1 state_type) (I1 Int) (J1 tx_type) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) ) 
    (=>
      (and
        (block_6_f_68_70_0 D I1 B C J1 G1 K1 H1 L1 A O1)
        (let ((a!1 (and (<= (+ I (* (- 1) J)) 127) (<= (- 128) (+ I (* (- 1) J)))))
      (a!3 (and (<= (+ T (* (- 1) U)) 127) (<= (- 128) (+ T (* (- 1) U))))))
(let ((a!2 (= K (ite a!1 (+ I (* (- 1) J)) C1)))
      (a!4 (= V (ite a!3 (+ T (* (- 1) U)) D1))))
  (and (= Z (= X Y))
       (= (+ I (* (- 1) J)) (+ C1 (* 256 E1)))
       (= (+ T (* (- 1) U)) (+ D1 (* 256 F1)))
       (= M P1)
       (= A 0)
       (= B1 (- 2))
       (= Q (- 128))
       (= P M1)
       (= N 127)
       (= L K)
       a!2
       (= J 127)
       (= I M1)
       (= H O1)
       (= G B1)
       (= F 3)
       (= E D)
       (= M1 G)
       (= A1 L1)
       (= Y 1)
       (= X Q1)
       (= W V)
       a!4
       (= U 127)
       (= T N1)
       (= S P1)
       (= R Q)
       (= O1 0)
       (= Q1 W)
       (= P1 L)
       (= N1 R)
       (>= M (- 128))
       (>= P (- 128))
       (>= G (- 128))
       (>= C1 (- 128))
       (>= A1 (- 128))
       (>= X (- 128))
       (>= R (- 128))
       (>= L1 (- 128))
       (>= D1 (- 128))
       (<= M 127)
       (<= P 127)
       (<= G 127)
       (<= C1 127)
       (<= A1 127)
       (<= X 127)
       (<= R 127)
       (<= L1 127)
       (<= D1 127)
       (not Z)
       (= O (= M N)))))
      )
      (block_9_function_f__69_70_0 F I1 B C J1 G1 K1 H1 N1 A Q1)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Bool) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 state_type) (W1 state_type) (X1 Int) (Y1 tx_type) (Z1 Int) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int) ) 
    (=>
      (and
        (block_6_f_68_70_0 D X1 B C Y1 V1 Z1 W1 A2 A E2)
        (let ((a!1 (and (<= (+ J (* (- 1) K)) 127) (<= (- 128) (+ J (* (- 1) K)))))
      (a!3 (and (<= (+ U (* (- 1) V)) 127) (<= (- 128) (+ U (* (- 1) V)))))
      (a!5 (and (<= (+ F1 (* (- 1) H1)) 127) (<= (- 128) (+ F1 (* (- 1) H1))))))
(let ((a!2 (= L (ite a!1 (+ J (* (- 1) K)) P1)))
      (a!4 (= W (ite a!3 (+ U (* (- 1) V)) Q1)))
      (a!6 (= I1 (ite a!5 (+ F1 (* (- 1) H1)) R1))))
  (and (= P (= N O))
       (= M1 (= K1 L1))
       (= (+ J (* (- 1) K)) (+ P1 (* 256 S1)))
       (= (+ U (* (- 1) V)) (+ Q1 (* 256 T1)))
       (= (+ F1 (* (- 1) H1)) (+ R1 (* 256 U1)))
       (= N F2)
       (= A 0)
       (= D1 C1)
       (= R (- 128))
       (= Q B2)
       (= O 127)
       (= M L)
       a!2
       (= K 127)
       (= J B2)
       (= I E2)
       (= H O1)
       (= G 5)
       (= F E)
       (= E D)
       (= B2 H)
       (= H1 G1)
       (= G1 (- 127))
       (= E1 G2)
       (= C1 127)
       (= B1 C2)
       (= Z 1)
       (= Y G2)
       (= X W)
       a!4
       (= V 127)
       (= U C2)
       (= T F2)
       (= S R)
       (= D2 D1)
       (= O1 (- 2))
       (= N1 A2)
       (= L1 (- 2))
       (= K1 H2)
       (= J1 I1)
       a!6
       (= F2 M)
       (= C2 S)
       (= F1 D2)
       (= H2 J1)
       (= G2 X)
       (= E2 0)
       (>= N (- 128))
       (>= D1 (- 128))
       (>= Q (- 128))
       (>= H (- 128))
       (>= B1 (- 128))
       (>= Y (- 128))
       (>= S (- 128))
       (>= R1 (- 128))
       (>= Q1 (- 128))
       (>= P1 (- 128))
       (>= N1 (- 128))
       (>= K1 (- 128))
       (>= A2 (- 128))
       (<= N 127)
       (<= D1 127)
       (<= Q 127)
       (<= H 127)
       (<= B1 127)
       (<= Y 127)
       (<= S 127)
       (<= R1 127)
       (<= Q1 127)
       (<= P1 127)
       (<= N1 127)
       (<= K1 127)
       (<= A2 127)
       (not M1)
       (= A1 (= Y Z)))))
      )
      (block_10_function_f__69_70_0 G X1 B C Y1 V1 Z1 W1 D2 A H2)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C abi_type) (D crypto_type) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Bool) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 state_type) (Y1 state_type) (Z1 Int) (A2 tx_type) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int) (I2 Int) (J2 Int) ) 
    (=>
      (and
        (block_6_f_68_70_0 E Z1 C D A2 X1 B2 Y1 C2 A G2)
        (let ((a!1 (and (<= (+ K (* (- 1) L)) 127) (<= (- 128) (+ K (* (- 1) L)))))
      (a!3 (and (<= (+ G1 (* (- 1) I1)) 127) (<= (- 128) (+ G1 (* (- 1) I1)))))
      (a!5 (and (<= (+ V (* (- 1) W)) 127) (<= (- 128) (+ V (* (- 1) W))))))
(let ((a!2 (= M (ite a!1 (+ K (* (- 1) L)) R1)))
      (a!4 (= J1 (ite a!3 (+ G1 (* (- 1) I1)) T1)))
      (a!6 (= X (ite a!5 (+ V (* (- 1) W)) S1))))
  (and (= B1 (= Z A1))
       (= N1 (= L1 M1))
       (= (+ K (* (- 1) L)) (+ R1 (* 256 U1)))
       (= (+ G1 (* (- 1) I1)) (+ T1 (* 256 W1)))
       (= (+ V (* (- 1) W)) (+ S1 (* 256 V1)))
       (= B O1)
       (= P 127)
       (= F1 I2)
       (= T S)
       (= S (- 128))
       (= O H2)
       (= N M)
       a!2
       (= L 127)
       (= K D2)
       (= J G2)
       (= I Q1)
       (= H G)
       (= G F)
       (= F E)
       (= A 0)
       (= D2 I)
       a!4
       (= I1 H1)
       (= G1 F2)
       (= E1 D1)
       (= D1 127)
       (= C1 E2)
       (= A1 1)
       (= Z I2)
       (= Y X)
       a!6
       (= W 127)
       (= V E2)
       (= U H2)
       (= R D2)
       (= F2 E1)
       (= Q1 (- 2))
       (= P1 C2)
       (= O1 J2)
       (= M1 (- 2))
       (= L1 J2)
       (= K1 J1)
       (= H2 N)
       (= E2 T)
       (= H1 (- 127))
       (= J2 K1)
       (= I2 Y)
       (= G2 0)
       (>= T (- 128))
       (>= O (- 128))
       (>= I (- 128))
       (>= E1 (- 128))
       (>= C1 (- 128))
       (>= Z (- 128))
       (>= R (- 128))
       (>= T1 (- 128))
       (>= S1 (- 128))
       (>= R1 (- 128))
       (>= P1 (- 128))
       (>= O1 (- 128))
       (>= L1 (- 128))
       (>= C2 (- 128))
       (<= T 127)
       (<= O 127)
       (<= I 127)
       (<= E1 127)
       (<= C1 127)
       (<= Z 127)
       (<= R 127)
       (<= T1 127)
       (<= S1 127)
       (<= R1 127)
       (<= P1 127)
       (<= O1 127)
       (<= L1 127)
       (<= C2 127)
       (= Q (= O P)))))
      )
      (block_7_return_function_f__69_70_0 H Z1 C D A2 X1 B2 Y1 F2 B J2)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        true
      )
      (block_12_function_f__69_70_0 D G B C H E I F J A K)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E Int) (F Int) (G state_type) (H state_type) (I state_type) (J state_type) (K Int) (L tx_type) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (block_12_function_f__69_70_0 D K B C L G M H N A P)
        (summary_3_function_f__69_70_0 E K B C L I N J O A)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data L)) 3) 99))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data L)) 2) 41))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data L)) 1) 154))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data L)) 0) 10))
      (a!5 (>= (+ (select (balances H) K) F) 0))
      (a!6 (<= (+ (select (balances H) K) F)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances H) K (+ (select (balances H) K) F))))
  (and (= H G)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value L) 0)
       (= (msg.sig L) 177875299)
       (= D 0)
       (= N M)
       (>= (tx.origin L) 0)
       (>= (tx.gasprice L) 0)
       (>= (msg.value L) 0)
       (>= (msg.sender L) 0)
       (>= (block.timestamp L) 0)
       (>= (block.number L) 0)
       (>= (block.gaslimit L) 0)
       (>= (block.difficulty L) 0)
       (>= (block.coinbase L) 0)
       (>= (block.chainid L) 0)
       (>= (block.basefee L) 0)
       (>= (bytes_tuple_accessor_length (msg.data L)) 4)
       a!5
       (>= F (msg.value L))
       (<= (tx.origin L) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender L) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase L) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee L)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= I (state_type a!7))))
      )
      (summary_4_function_f__69_70_0 E K B C L G M J O A)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) ) 
    (=>
      (and
        (summary_4_function_f__69_70_0 D G B C H E I F J A)
        (interface_0_C_70_0 G B C E)
        (= D 0)
      )
      (interface_0_C_70_0 G B C F)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_70_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_70_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_14_C_70_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_14_C_70_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_15_C_70_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_15_C_70_0 C F A B G D E)
        true
      )
      (contract_initializer_13_C_70_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_16_C_70_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_16_C_70_0 C H A B I E F)
        (contract_initializer_13_C_70_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_70_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_13_C_70_0 D H A B I F G)
        (implicit_constructor_entry_16_C_70_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_70_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A Int) (B abi_type) (C crypto_type) (D Int) (E state_type) (F state_type) (G Int) (H tx_type) (I Int) (J Int) ) 
    (=>
      (and
        (summary_4_function_f__69_70_0 D G B C H E I F J A)
        (interface_0_C_70_0 G B C E)
        (= D 1)
      )
      error_target_7_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_7_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
