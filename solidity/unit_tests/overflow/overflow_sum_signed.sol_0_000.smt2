(set-logic HORN)

(declare-datatypes ((state_type 0)) (((state_type  (balances (Array Int Int))))))
(declare-datatypes ((abi_type 0)) (((abi_type ))))
(declare-datatypes ((bytes_tuple 0)) (((bytes_tuple  (bytes_tuple_accessor_array (Array Int Int)) (bytes_tuple_accessor_length Int)))))
(declare-datatypes ((ecrecover_input_type 0)) (((ecrecover_input_type  (hash Int) (v Int) (r Int) (s Int)))))
(declare-datatypes ((crypto_type 0)) (((crypto_type  (ecrecover (Array ecrecover_input_type Int)) (keccak256 (Array bytes_tuple Int)) (ripemd160 (Array bytes_tuple Int)) (sha256 (Array bytes_tuple Int))))))
(declare-datatypes ((tx_type 0)) (((tx_type  (block.basefee Int) (block.chainid Int) (block.coinbase Int) (block.difficulty Int) (block.gaslimit Int) (block.number Int) (block.timestamp Int) (blockhash (Array Int Int)) (msg.data bytes_tuple) (msg.sender Int) (msg.sig Int) (msg.value Int) (tx.gasprice Int) (tx.origin Int)))))

(declare-fun |block_9_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |contract_initializer_entry_13_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_5_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |summary_4_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |interface_0_C_61_0| ( Int abi_type crypto_type state_type ) Bool)
(declare-fun |summary_constructor_2_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_7_return_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |error_target_7_0| ( ) Bool)
(declare-fun |block_11_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |block_10_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |summary_3_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int ) Bool)
(declare-fun |implicit_constructor_entry_15_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |block_6_f_59_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |block_8_function_f__60_61_0| ( Int Int abi_type crypto_type tx_type state_type Int state_type Int Int ) Bool)
(declare-fun |contract_initializer_12_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)
(declare-fun |contract_initializer_after_init_14_C_61_0| ( Int Int abi_type crypto_type tx_type state_type state_type ) Bool)

(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        true
      )
      (block_5_function_f__60_61_0 C F A B G D H E I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_5_function_f__60_61_0 C F A B G D H E I J)
        (and (= C 0) (= I H) (= E D))
      )
      (block_6_f_59_61_0 C F A B G D H E I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Int) (O Int) (P Int) (Q Int) (R state_type) (S state_type) (T Int) (U tx_type) (V Int) (W Int) (X Int) (Y Int) (Z Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 C T A B U R V S W Y)
        (let ((a!1 (ite (and (<= (+ F G) 127) (<= (- 128) (+ F G))) (+ F G) P)))
  (and (= (+ F G) (+ P (* 256 Q)))
       (= J Z)
       (= O N)
       (= N 127)
       (= M W)
       (= K (- 128))
       (= I H)
       (= H a!1)
       (= G 1)
       (= F X)
       (= E Y)
       (= D 1)
       (= X O)
       (= Z I)
       (= Y 0)
       (>= J (- 128))
       (>= O (- 128))
       (>= M (- 128))
       (>= P (- 128))
       (>= W (- 128))
       (<= J 127)
       (<= O 127)
       (<= M 127)
       (<= P 127)
       (<= W 127)
       (not L)
       (= L (= J K))))
      )
      (block_8_function_f__60_61_0 D T A B U R V S X Z)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_8_function_f__60_61_0 C F A B G D H E I J)
        true
      )
      (summary_3_function_f__60_61_0 C F A B G D H E I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_9_function_f__60_61_0 C F A B G D H E I J)
        true
      )
      (summary_3_function_f__60_61_0 C F A B G D H E I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_10_function_f__60_61_0 C F A B G D H E I J)
        true
      )
      (summary_3_function_f__60_61_0 C F A B G D H E I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (block_7_return_function_f__60_61_0 C F A B G D H E I J)
        true
      )
      (summary_3_function_f__60_61_0 C F A B G D H E I)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Bool) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 state_type) (D1 state_type) (E1 Int) (F1 tx_type) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 C E1 A B F1 C1 G1 D1 H1 J1)
        (let ((a!1 (ite (and (<= (+ G H) 127) (<= (- 128) (+ G H))) (+ G H) Y))
      (a!2 (ite (and (<= (+ O P) 127) (<= (- 128) (+ O P))) (+ O P) Z)))
  (and (= U (= S T))
       (= (+ G H) (+ Y (* 256 A1)))
       (= (+ O P) (+ Z (* 256 B1)))
       (= K K1)
       (= V H1)
       (= L (- 128))
       (= J I)
       (= I a!1)
       (= H 1)
       (= G I1)
       (= F J1)
       (= E 3)
       (= D C)
       (= X W)
       (= W 127)
       (= T (- 2))
       (= S L1)
       (= R Q)
       (= Q a!2)
       (= P 127)
       (= O I1)
       (= N K1)
       (= J1 0)
       (= L1 R)
       (= K1 J)
       (= I1 X)
       (>= K (- 128))
       (>= V (- 128))
       (>= H1 (- 128))
       (>= Z (- 128))
       (>= Y (- 128))
       (>= X (- 128))
       (>= S (- 128))
       (<= K 127)
       (<= V 127)
       (<= H1 127)
       (<= Z 127)
       (<= Y 127)
       (<= X 127)
       (<= S 127)
       (not U)
       (= M (= K L))))
      )
      (block_9_function_f__60_61_0 E E1 A B F1 C1 G1 D1 I1 L1)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 state_type) (R1 state_type) (S1 Int) (T1 tx_type) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 C S1 A B T1 Q1 U1 R1 V1 Y1)
        (let ((a!1 (ite (and (<= (+ H I) 127) (<= (- 128) (+ H I))) (+ H I) K1))
      (a!2 (ite (and (<= (+ P Q) 127) (<= (- 128) (+ P Q))) (+ P Q) L1))
      (a!3 (ite (and (<= (+ A1 B1) 127) (<= (- 128) (+ A1 B1))) (+ A1 B1) M1)))
  (and (= V (= T U))
       (= G1 (= E1 F1))
       (= (+ A1 B1) (+ M1 (* 256 P1)))
       (= (+ P Q) (+ L1 (* 256 O1)))
       (= (+ H I) (+ K1 (* 256 N1)))
       (= L Z1)
       (= A1 X1)
       (= P W1)
       (= O Z1)
       (= M (- 128))
       (= K J)
       (= J a!1)
       (= I 1)
       (= H W1)
       (= G Y1)
       (= F 5)
       (= E D)
       (= D C)
       (= B1 (- 127))
       (= Z A2)
       (= Y X)
       (= X (- 127))
       (= W W1)
       (= U (- 2))
       (= T A2)
       (= S R)
       (= R a!2)
       (= Q 127)
       (= X1 Y)
       (= J1 I1)
       (= I1 127)
       (= H1 V1)
       (= F1 2)
       (= E1 B2)
       (= D1 C1)
       (= C1 a!3)
       (= Z1 K)
       (= W1 J1)
       (= B2 D1)
       (= A2 S)
       (= Y1 0)
       (>= L (- 128))
       (>= V1 (- 128))
       (>= L1 (- 128))
       (>= Y (- 128))
       (>= W (- 128))
       (>= T (- 128))
       (>= M1 (- 128))
       (>= K1 (- 128))
       (>= J1 (- 128))
       (>= H1 (- 128))
       (>= E1 (- 128))
       (<= L 127)
       (<= V1 127)
       (<= L1 127)
       (<= Y 127)
       (<= W 127)
       (<= T 127)
       (<= M1 127)
       (<= K1 127)
       (<= J1 127)
       (<= H1 127)
       (<= E1 127)
       (not G1)
       (= N (= L M))))
      )
      (block_10_function_f__60_61_0 F S1 A B T1 Q1 U1 R1 X1 B2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 state_type) (R1 state_type) (S1 Int) (T1 tx_type) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) ) 
    (=>
      (and
        (block_6_f_59_61_0 C S1 A B T1 Q1 U1 R1 V1 Y1)
        (let ((a!1 (ite (and (<= (+ H I) 127) (<= (- 128) (+ H I))) (+ H I) K1))
      (a!2 (ite (and (<= (+ P Q) 127) (<= (- 128) (+ P Q))) (+ P Q) L1))
      (a!3 (ite (and (<= (+ A1 B1) 127) (<= (- 128) (+ A1 B1))) (+ A1 B1) M1)))
  (and (= V (= T U))
       (= G1 (= E1 F1))
       (= (+ A1 B1) (+ M1 (* 256 P1)))
       (= (+ P Q) (+ L1 (* 256 O1)))
       (= (+ H I) (+ K1 (* 256 N1)))
       (= L Z1)
       (= A1 X1)
       (= P W1)
       (= O Z1)
       (= M (- 128))
       (= K J)
       (= J a!1)
       (= I 1)
       (= H W1)
       (= G Y1)
       (= F E)
       (= E D)
       (= D C)
       (= B1 (- 127))
       (= Z A2)
       (= Y X)
       (= X (- 127))
       (= W W1)
       (= U (- 2))
       (= T A2)
       (= S R)
       (= R a!2)
       (= Q 127)
       (= X1 Y)
       (= J1 I1)
       (= I1 127)
       (= H1 V1)
       (= F1 2)
       (= E1 B2)
       (= D1 C1)
       (= C1 a!3)
       (= Z1 K)
       (= W1 J1)
       (= B2 D1)
       (= A2 S)
       (= Y1 0)
       (>= L (- 128))
       (>= V1 (- 128))
       (>= L1 (- 128))
       (>= Y (- 128))
       (>= W (- 128))
       (>= T (- 128))
       (>= M1 (- 128))
       (>= K1 (- 128))
       (>= J1 (- 128))
       (>= H1 (- 128))
       (>= E1 (- 128))
       (<= L 127)
       (<= V1 127)
       (<= L1 127)
       (<= Y 127)
       (<= W 127)
       (<= T 127)
       (<= M1 127)
       (<= K1 127)
       (<= J1 127)
       (<= H1 127)
       (<= E1 127)
       (= N (= L M))))
      )
      (block_7_return_function_f__60_61_0 F S1 A B T1 Q1 U1 R1 X1 B2)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        true
      )
      (block_11_function_f__60_61_0 C F A B G D H E I J)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E Int) (F state_type) (G state_type) (H state_type) (I state_type) (J Int) (K tx_type) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (block_11_function_f__60_61_0 C J A B K F L G M O)
        (summary_3_function_f__60_61_0 D J A B K H M I N)
        (let ((a!1 (= (select (bytes_tuple_accessor_array (msg.data K)) 3) 99))
      (a!2 (= (select (bytes_tuple_accessor_array (msg.data K)) 2) 41))
      (a!3 (= (select (bytes_tuple_accessor_array (msg.data K)) 1) 154))
      (a!4 (= (select (bytes_tuple_accessor_array (msg.data K)) 0) 10))
      (a!5 (>= (+ (select (balances G) J) E) 0))
      (a!6 (<= (+ (select (balances G) J) E)
               115792089237316195423570985008687907853269984665640564039457584007913129639935))
      (a!7 (store (balances G) J (+ (select (balances G) J) E))))
  (and (= G F)
       a!1
       a!2
       a!3
       a!4
       (= (msg.value K) 0)
       (= (msg.sig K) 177875299)
       (= C 0)
       (= M L)
       (>= (tx.origin K) 0)
       (>= (tx.gasprice K) 0)
       (>= (msg.value K) 0)
       (>= (msg.sender K) 0)
       (>= (block.timestamp K) 0)
       (>= (block.number K) 0)
       (>= (block.gaslimit K) 0)
       (>= (block.difficulty K) 0)
       (>= (block.coinbase K) 0)
       (>= (block.chainid K) 0)
       (>= (block.basefee K) 0)
       (>= (bytes_tuple_accessor_length (msg.data K)) 4)
       a!5
       (>= E (msg.value K))
       (<= (tx.origin K) 1461501637330902918203684832716283019655932542975)
       (<= (tx.gasprice K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.value K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (msg.sender K) 1461501637330902918203684832716283019655932542975)
       (<= (block.timestamp K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.number K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.gaslimit K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.difficulty K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.coinbase K) 1461501637330902918203684832716283019655932542975)
       (<= (block.chainid K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       (<= (block.basefee K)
           115792089237316195423570985008687907853269984665640564039457584007913129639935)
       a!6
       (= H (state_type a!7))))
      )
      (summary_4_function_f__60_61_0 D J A B K F L I N)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (summary_4_function_f__60_61_0 C F A B G D H E I)
        (interface_0_C_61_0 F A B D)
        (= C 0)
      )
      (interface_0_C_61_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (summary_constructor_2_C_61_0 C F A B G D E)
        (and (= C 0)
     (>= (tx.origin G) 0)
     (>= (tx.gasprice G) 0)
     (>= (msg.value G) 0)
     (>= (msg.sender G) 0)
     (>= (block.timestamp G) 0)
     (>= (block.number G) 0)
     (>= (block.gaslimit G) 0)
     (>= (block.difficulty G) 0)
     (>= (block.coinbase G) 0)
     (>= (block.chainid G) 0)
     (>= (block.basefee G) 0)
     (<= (tx.origin G) 1461501637330902918203684832716283019655932542975)
     (<= (tx.gasprice G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.value G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (msg.sender G) 1461501637330902918203684832716283019655932542975)
     (<= (block.timestamp G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.number G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.gaslimit G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.difficulty G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.coinbase G) 1461501637330902918203684832716283019655932542975)
     (<= (block.chainid G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (<= (block.basefee G)
         115792089237316195423570985008687907853269984665640564039457584007913129639935)
     (= (msg.value G) 0))
      )
      (interface_0_C_61_0 F A B E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (= E D))
      )
      (contract_initializer_entry_13_C_61_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_entry_13_C_61_0 C F A B G D E)
        true
      )
      (contract_initializer_after_init_14_C_61_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (contract_initializer_after_init_14_C_61_0 C F A B G D E)
        true
      )
      (contract_initializer_12_C_61_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) ) 
    (=>
      (and
        (and (= C 0) (>= (select (balances E) F) (msg.value G)) (= E D))
      )
      (implicit_constructor_entry_15_C_61_0 C F A B G D E)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (implicit_constructor_entry_15_C_61_0 C H A B I E F)
        (contract_initializer_12_C_61_0 D H A B I F G)
        (not (<= D 0))
      )
      (summary_constructor_2_C_61_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D Int) (E state_type) (F state_type) (G state_type) (H Int) (I tx_type) ) 
    (=>
      (and
        (contract_initializer_12_C_61_0 D H A B I F G)
        (implicit_constructor_entry_15_C_61_0 C H A B I E F)
        (= D 0)
      )
      (summary_constructor_2_C_61_0 D H A B I E G)
    )
  )
)
(assert
  (forall ( (A abi_type) (B crypto_type) (C Int) (D state_type) (E state_type) (F Int) (G tx_type) (H Int) (I Int) ) 
    (=>
      (and
        (summary_4_function_f__60_61_0 C F A B G D H E I)
        (interface_0_C_61_0 F A B D)
        (= C 1)
      )
      error_target_7_0
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        error_target_7_0
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
