(set-logic HORN)


(declare-fun |state| ( Bool Bool Bool (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)

(assert
  (forall ( (A Bool) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H Bool) (I Bool) ) 
    (=>
      (and
        (and (not H) (not A) (not I))
      )
      (state A I H G D C F E B)
    )
  )
)
(assert
  (forall ( (A Bool) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) (M (_ BitVec 32)) (N Bool) (O Bool) (P Bool) (Q (_ BitVec 32)) (R (_ BitVec 32)) (S (_ BitVec 32)) (T (_ BitVec 32)) (U (_ BitVec 32)) (V Bool) (W Bool) ) 
    (=>
      (and
        (state A W V M F D J H B)
        (let ((a!1 (and (= K (bvadd (bvmul #xffffffff I) J))
                (= I (bvmul #xffffffff H))
                (= E (bvadd (bvmul #xffffffff I) D))
                (= C B)
                (not (= ((_ extract 31 31) B) #b1))
                (not (= ((_ extract 31 31) F) #b1))
                (= ((_ extract 31 31) H) #b1)
                (not (= ((_ extract 31 31) J) #b1))))
      (a!2 (and (= K J)
                (= I (bvadd H (bvmul #xffffffff E)))
                (= E (bvmul #xffffffff D))
                (= C (bvadd B (bvmul #xffffffff E)))
                (not (= ((_ extract 31 31) B) #b1))
                (= ((_ extract 31 31) D) #b1)
                (not (= ((_ extract 31 31) F) #b1))
                (not (= ((_ extract 31 31) H) #b1))
                (not (= ((_ extract 31 31) J) #b1))))
      (a!3 (and (= K J)
                (= I H)
                (= G (bvadd F (bvmul #xffffffff C)))
                (= E (bvadd D (bvmul #xffffffff C)))
                (= C (bvmul #xffffffff B))
                (= ((_ extract 31 31) B) #b1)))
      (a!4 (and (= K (bvadd J (bvmul #xffffffff G)))
                (= I H)
                (= G (bvmul #xffffffff F))
                (= E D)
                (= C (bvadd B (bvmul #xffffffff G)))
                (not (= ((_ extract 31 31) B) #b1))
                (= ((_ extract 31 31) F) #b1)))
      (a!5 (and (= K (bvmul #xffffffff J))
                (= I (bvadd H (bvmul #xffffffff K)))
                (= G (bvadd F (bvmul #xffffffff K)))
                (= E D)
                (= C B)
                (not (= ((_ extract 31 31) B) #b1))
                (not (= ((_ extract 31 31) F) #b1))
                (= ((_ extract 31 31) J) #b1)))
      (a!7 (and (not A)
                (not P)
                (not O)
                N
                (not V)
                (not W)
                (= M L)
                (= K S)
                (= I R)
                (= G T)
                (= E Q)
                (= C U)
                (not (bvsle (bvadd E I K C G) #x00000000)))))
(let ((a!6 (and A
                (not P)
                (not O)
                N
                (not V)
                (not W)
                (or (and (or a!1 a!2) (= G F)) a!3 a!4 a!5)
                (= M L))))
  (or a!6 a!7)))
      )
      (state N O P L G E K I C)
    )
  )
)
(assert
  (forall ( (A Bool) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H Bool) (I Bool) ) 
    (=>
      (and
        (state A I H G D C F E B)
        (and (= H true) (not A) (not I))
      )
      false
    )
  )
)

(check-sat)
(exit)
