(set-logic HORN)


(declare-fun |__VERIFIER_assert@_ret| ( Int ) Bool)
(declare-fun |main@verifier.error.split| ( ) Bool)
(declare-fun |main@_bb3| ( Int Int Int (Array Int Int) (Array Int Int) Int Int ) Bool)
(declare-fun |main@entry| ( ) Bool)
(declare-fun |__VERIFIER_assert@_call| ( Int ) Bool)
(declare-fun |__VERIFIER_assert| ( Bool Bool Bool Int ) Bool)
(declare-fun |main@_bb6| ( Int Int Int (Array Int Int) (Array Int Int) Int Int Int ) Bool)
(declare-fun |main@_bb2| ( Int (Array Int Int) (Array Int Int) Int Int Int ) Bool)

(assert
  (forall ( (A Int) (v_1 Bool) (v_2 Bool) (v_3 Bool) ) 
    (=>
      (and
        (and true (= v_1 true) (= v_2 true) (= v_3 true))
      )
      (__VERIFIER_assert v_1 v_2 v_3 A)
    )
  )
)
(assert
  (forall ( (A Int) (v_1 Bool) (v_2 Bool) (v_3 Bool) ) 
    (=>
      (and
        (and true (= v_1 false) (= v_2 true) (= v_3 true))
      )
      (__VERIFIER_assert v_1 v_2 v_3 A)
    )
  )
)
(assert
  (forall ( (A Int) (v_1 Bool) (v_2 Bool) (v_3 Bool) ) 
    (=>
      (and
        (and true (= v_1 false) (= v_2 false) (= v_3 false))
      )
      (__VERIFIER_assert v_1 v_2 v_3 A)
    )
  )
)
(assert
  (forall ( (A Int) (v_1 Bool) (v_2 Bool) (v_3 Bool) ) 
    (=>
      (and
        (__VERIFIER_assert@_ret A)
        (and (= v_1 true) (= v_2 false) (= v_3 false))
      )
      (__VERIFIER_assert v_1 v_2 v_3 A)
    )
  )
)
(assert
  (forall ( (A Int) ) 
    (=>
      (and
        true
      )
      (__VERIFIER_assert@_call A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Int) ) 
    (=>
      (and
        (__VERIFIER_assert@_call D)
        (and (or (not C) (and C B)) (not A) (= C true) (= A (= D 0)))
      )
      (__VERIFIER_assert@_ret D)
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        true
      )
      main@entry
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B Int) (C Int) (D Bool) (E Bool) (F Bool) (G Bool) (H (Array Int Int)) (I (Array Int Int)) (J Int) (K Bool) (L Bool) (M Int) (N Int) (O (Array Int Int)) (P (Array Int Int)) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        main@entry
        (and (= B (+ 8 C))
     (= N C)
     (not (<= C 0))
     (not (<= S 0))
     (or (not L) (not K) (= I H))
     (or (not L) (not K) (= P I))
     (or (not L) (not K) (= J (- 1)))
     (or (not L) (not K) (= M 0))
     (or (not L) (not K) (= Q J))
     (or (not L) (not K) (= R M))
     (or (not (<= B 0)) (<= C 0))
     (or (not (<= N 0)) (<= C 0))
     (or (not F) (and F E))
     (or (not K) (and L K))
     (or (not L) (= G (= N 0)))
     (or (not L) (and L F))
     (or (not L) (not G))
     (not D)
     (= K true)
     (= O (store A B 0)))
      )
      (main@_bb2 N O P Q R S)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E (Array Int Int)) (F Int) (G (Array Int Int)) (H Bool) (I Int) (J Int) (K Int) (L Bool) (M (Array Int Int)) (N Int) (O Int) (P (Array Int Int)) (Q Int) (R Bool) (S Bool) (T Int) (U Int) (V (Array Int Int)) (W (Array Int Int)) (X Int) (Y Int) (Z Int) ) 
    (=>
      (and
        (main@_bb2 U V E A F Z)
        (and (= B (+ U N))
     (= C (select V B))
     (= N (+ 1 A))
     (not (<= U 0))
     (or (not (<= J 0)) (<= U 0) (not S))
     (or (not S) (not H) (= G E))
     (or (not S) (not H) (= M G))
     (or (not S) (not H) (= O I))
     (or (not S) (not H) (= I F))
     (or (not S) (not H) (not D))
     (or (not S) (not R) (= P M))
     (or (not S) (not R) (= W P))
     (or (not S) (not R) (= Q N))
     (or (not S) (not R) (= T O))
     (or (not S) (not R) (= X Q))
     (or (not S) (not R) (= Y T))
     (or (not (<= B 0)) (<= U 0))
     (or (not R) (and S R))
     (or (not S) (= L (= K 0)))
     (or (not S) (= K (select V J)))
     (or (not S) (= J (+ U N)))
     (or (not S) (not (<= U 0)))
     (or (not S) (and S H))
     (or (not S) (not L))
     (= R true)
     (= D (= C 0)))
      )
      (main@_bb2 U V W X Y Z)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L Bool) (M Int) (N Int) (O Bool) (P Int) (Q Int) (R Bool) (S Int) (T Bool) (U Int) (V Bool) (W Bool) (X Int) (Y Bool) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Bool) (I1 Bool) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 (Array Int Int)) (P1 Int) (Q1 Int) (R1 (Array Int Int)) (S1 Int) (T1 (Array Int Int)) (U1 Bool) (V1 Int) (W1 Int) (X1 Int) (Y1 Bool) (Z1 (Array Int Int)) (A2 Int) (B2 Int) (C2 (Array Int Int)) (D2 Int) (E2 Bool) (F2 Bool) (G2 Int) (H2 Int) (I2 (Array Int Int)) (J2 (Array Int Int)) (K2 Int) (L2 Int) (M2 Int) (v_65 Bool) (v_66 Bool) ) 
    (=>
      (and
        (main@_bb6 S H2 A2 I2 O1 Q1 L1 M2)
        (__VERIFIER_assert U1 v_65 v_66 J1)
        (let ((a!1 (or (not V) (not (= (<= S 0) R))))
      (a!2 (or (not Z) (not (= (<= L1 K1) Y))))
      (a!3 (or (not H1) (not (= (<= 2 F1) G1))))
      (a!4 (or (not H1) (= D1 (+ K1 (* (- 1) L1)))))
      (a!5 (or (not H1) (= E1 (+ K1 (* (- 1) L1)))))
      (a!6 (or (not U1) (= M1 (+ K1 (* (- 1) L1))))))
  (and (= v_65 false)
       (= v_66 false)
       (or (<= H2 0) (not C) (not (<= A 0)))
       (or (<= H2 0) (not G) (not (<= E 0)))
       (or (not G) (not D) (not C))
       (or (not I) (not H) (not G))
       (or (not C) (not J) L)
       (or (not L) (not K) (not J))
       (or (<= H2 0) (not T) (not (<= M 0)))
       (or (not V) (and K J) (and H G))
       (or (not V) (not T) R)
       (or (not W) (not V) (= X S))
       (or (not W) (not V) (= K1 X))
       (or (not W) (not V) (not R))
       (or (not Z) (and Z T) (and W V))
       (or (not Z) (not T) (= U Q))
       (or (not Z) (not T) (= K1 U))
       (or (<= H2 0) (not H1) (not (<= B1 0)))
       (or (not H1) (not (<= A1 0)) (<= M2 0))
       (or (not (<= P1 0)) (not U1) (<= M2 0))
       (or (not U1) (not H1) I1)
       (or (not (<= W1 0)) (<= H2 0) (not F2))
       (or (not F2) (not U1) (= T1 R1))
       (or (not F2) (not U1) (= Z1 T1))
       (or (not F2) (not U1) (= B2 V1))
       (or (not F2) (not U1) (= V1 S1))
       (or (not F2) (not E2) (= C2 Z1))
       (or (not F2) (not E2) (= J2 C2))
       (or (not F2) (not E2) (= D2 A2))
       (or (not F2) (not E2) (= G2 B2))
       (or (not F2) (not E2) (= K2 D2))
       (or (not F2) (not E2) (= L2 G2))
       (or (not C) (= D (= B 32)))
       (or (not C) (= A (+ H2 S)))
       (or (not C) (= B (select I2 A)))
       (or (not C) (not (<= H2 0)))
       (or (not C) (and J C))
       (or (not G) (= I (= F 9)))
       (or (not G) (= E (+ H2 S)))
       (or (not G) (= F (select I2 E)))
       (or (not G) (not (<= H2 0)))
       (or (not G) (and G C))
       (or (not H) G)
       (or (not K) J)
       (or (not T) (= O (= N 34)))
       (or (not T) (= M (+ H2 S)))
       (or (not T) (= N (select I2 M)))
       (or (not T) (= P (ite O (- 1) 0)))
       (or (not T) (= Q (+ S P)))
       (or (not T) (not (<= H2 0)))
       (or (not T) (and V T))
       a!1
       (or (not W) V)
       a!2
       (or (not Z) (not Y))
       a!3
       (or (not H1) (= A1 M2))
       (or (not H1) (= B1 (+ H2 L1)))
       (or (not H1) (= C1 (+ 1 D1)))
       a!4
       a!5
       (or (not H1) (= F1 (+ 1 E1)))
       (or (not H1) (= J1 (ite G1 1 0)))
       (or (not H1) (and H1 Z))
       (or (not U1) (= R1 (store O1 P1 0)))
       a!6
       (or (not U1) (= N1 (+ 1 M1)))
       (or (not U1) (= P1 (+ M2 N1)))
       (or (not U1) (= S1 (+ 2 Q1)))
       (or (not U1) (not (<= M2 0)))
       (or (not U1) (and U1 H1))
       (or (not E2) (and F2 E2))
       (or (not F2) (= Y1 (= X1 0)))
       (or (not F2) (= X1 (select I2 W1)))
       (or (not F2) (= W1 (+ H2 A2)))
       (or (not F2) (not (<= H2 0)))
       (or (not F2) (and F2 U1))
       (or (not F2) (not Y1))
       (= E2 true)
       (not (= (<= S 0) L))))
      )
      (main@_bb2 H2 I2 J2 K2 L2 M2)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) (L (Array Int Int)) (M Int) (N Int) ) 
    (=>
      (and
        (main@_bb2 I K L M D N)
        (and (= B (select K A))
     (= A (+ I J))
     (= J (+ 1 M))
     (not (<= I 0))
     (or (not F) (= H G) (not E))
     (or (not F) (= G D) (not E))
     (or (not F) C (not E))
     (or (not (<= A 0)) (<= I 0))
     (or (not E) (and E F))
     (= E true)
     (= C (= B 0)))
      )
      (main@_bb3 H I J K L M N)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Int) (L Int) (M Bool) (N Bool) (O Int) (P Int) (Q Int) (R Int) (S (Array Int Int)) (T (Array Int Int)) (U Int) (V Int) ) 
    (=>
      (and
        (main@_bb3 K Q R S T U V)
        (and (= A (+ Q K))
     (= B (select S A))
     (not (<= Q 0))
     (or (<= Q 0) (not E) (not (<= C 0)))
     (or G (not F) (not E))
     (or (not J) (not H) (not E))
     (or J (not H) (not I))
     (or (not N) (and I H) (and F E))
     (or (not N) (= P O) (not M))
     (or (not N) (= O L) (not M))
     (or (<= Q 0) (not (<= A 0)))
     (or (not E) (= G (= D 9)))
     (or (not E) (= C (+ Q K)))
     (or (not E) (= D (select S C)))
     (or (not E) (not (<= Q 0)))
     (or (not E) (and H E))
     (or (not F) E)
     (or (not I) H)
     (or (not N) (= L (+ 1 K)))
     (or (not M) (and M N))
     (= M true)
     (= J (= B 32)))
      )
      (main@_bb3 P Q R S T U V)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Bool) (H Bool) (I Int) (J Int) (K Bool) (L Int) (M Int) (N Bool) (O Bool) (P Int) (Q Int) (R Int) (S Int) (T (Array Int Int)) (U (Array Int Int)) (V Int) (W Int) (X Int) ) 
    (=>
      (and
        (main@_bb3 L R S T U V X)
        (and (= B (select T A))
     (= A (+ R L))
     (not (<= R 0))
     (or (<= R 0) (not G) (not (<= E 0)))
     (or (not G) (not D) (not C))
     (or (<= R 0) (not O) (not (<= I 0)))
     (or (not O) (not N) (= P V))
     (or (not O) (not N) (= Q P))
     (or (not O) (not H) (not G))
     (or (not (<= A 0)) (<= R 0))
     (or (not N) (and O N))
     (or (not G) (= H (= F 9)))
     (or (not G) (= E (+ R L)))
     (or (not G) (= F (select T E)))
     (or (not G) (not (<= R 0)))
     (or (not G) (and G C))
     (or (not O) (= K (= J 34)))
     (or (not O) (= J (select T I)))
     (or (not O) (= I (+ R L)))
     (or (not O) (= M (ite K 1 0)))
     (or (not O) (= W (+ L M)))
     (or (not O) (not (<= R 0)))
     (or (not O) (and O G))
     (= N true)
     (= D (= B 32)))
      )
      (main@_bb6 Q R S T U V W X)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L Bool) (M Int) (N Int) (O Bool) (P Bool) (Q Int) (R Int) (S Int) (T Int) (U (Array Int Int)) (V (Array Int Int)) (W Int) (X Int) (Y Int) ) 
    (=>
      (and
        (main@_bb6 M S T U V W X Y)
        (and (or (not G) (<= S 0) (not (<= E 0)))
     (or (not G) I (not H))
     (or (not J) (<= S 0) (not (<= C 0)))
     (or (not J) B (not A))
     (or (not L) (not J) (not G))
     (or L (not J) (not K))
     (or (not P) (and K J) (and G H))
     (or (not P) (not O) (= Q N))
     (or (not P) (not O) (= R Q))
     (or (not O) (and P O))
     (or (not G) (= I (= F 9)))
     (or (not G) (= F (select U E)))
     (or (not G) (= E (+ S M)))
     (or (not G) (not (<= S 0)))
     (or (not G) (and J G))
     (or G (not H))
     (or (not J) (= L (= D 32)))
     (or (not J) (= C (+ S M)))
     (or (not J) (= D (select U C)))
     (or (not J) (not (<= S 0)))
     (or (not J) (and J A))
     (or (not K) J)
     (or (not P) (= N (+ (- 1) M)))
     (= O true)
     (not (= (<= M 0) B)))
      )
      (main@_bb6 R S T U V W X Y)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E Int) (F Bool) (G Bool) (H Int) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P (Array Int Int)) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Bool) (W Int) (X Bool) (Y Int) (Z Bool) (A1 Bool) (B1 Int) (C1 Bool) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Bool) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Int) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Bool) ) 
    (=>
      (and
        (main@_bb6 W G1 A P B C L1 E1)
        (let ((a!1 (or (not Z) (not (= (<= W 0) V))))
      (a!2 (or (not D1) (not (= (<= L1 K1) C1))))
      (a!3 (or (not P1) (not (= (<= 2 N1) O1))))
      (a!4 (or (not P1) (= J1 (+ K1 (* (- 1) L1)))))
      (a!5 (or (not P1) (= M1 (+ K1 (* (- 1) L1))))))
  (and (or (not (<= D 0)) (<= G1 0) (not F))
       (or O (not F) (not M))
       (or (not O) (not N) (not M))
       (or (<= G1 0) (not X) (not (<= Q 0)))
       (or (not J) (<= G1 0) (not (<= H 0)))
       (or (not J) (not G) (not F))
       (or (not K) (not J) (not L))
       (or (not Z) (and N M) (and K J))
       (or (not Z) (not X) V)
       (or (not A1) (not Z) (= B1 W))
       (or (not A1) (not Z) (= K1 B1))
       (or (not A1) (not Z) (not V))
       (or (not D1) (and D1 X) (and A1 Z))
       (or (not D1) (not X) (= Y U))
       (or (not D1) (not X) (= K1 Y))
       (or (not P1) (not (<= F1 0)) (<= E1 0))
       (or (not P1) (not (<= H1 0)) (<= G1 0))
       (or (not P1) (not Q1) (not R1))
       (or (not F) (= G (= E 32)))
       (or (not F) (= E (select P D)))
       (or (not F) (= D (+ G1 W)))
       (or (not F) (not (<= G1 0)))
       (or (not F) (and M F))
       (or (not N) M)
       (or (not X) (= S (= R 34)))
       (or (not X) (= R (select P Q)))
       (or (not X) (= T (ite S (- 1) 0)))
       (or (not X) (= Q (+ G1 W)))
       (or (not X) (= U (+ W T)))
       (or (not X) (not (<= G1 0)))
       (or (not X) (and Z X))
       (or (not R1) (and P1 R1))
       (or (not X1) (and W1 X1))
       (or (not J) (= L (= I 9)))
       (or (not J) (= H (+ G1 W)))
       (or (not J) (= I (select P H)))
       (or (not J) (not (<= G1 0)))
       (or (not J) (and J F))
       (or (not K) J)
       a!1
       (or (not A1) Z)
       a!2
       (or (not D1) (not C1))
       a!3
       a!4
       (or (not P1) (= F1 E1))
       (or (not P1) (= I1 (+ 1 J1)))
       a!5
       (or (not P1) (= H1 (+ G1 L1)))
       (or (not P1) (= S1 (ite O1 1 0)))
       (or (not P1) (= N1 (+ 1 M1)))
       (or (not P1) (and P1 D1))
       (or (not U1) (= T1 (= S1 0)))
       (or (not U1) (and U1 R1))
       (or (not U1) T1)
       (or (not V1) (and V1 U1))
       (or (not W1) (and W1 V1))
       (= X1 true)
       (not (= (<= W 0) O))))
      )
      main@verifier.error.split
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@verifier.error.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
