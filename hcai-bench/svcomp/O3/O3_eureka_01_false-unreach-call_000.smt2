(set-logic HORN)


(declare-fun |main@.lr.ph| ( Int Int Bool (Array Int Int) Int Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int ) Bool)
(declare-fun |main@.lr.ph10| ( Int Int Bool Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int Int (Array Int Int) ) Bool)
(declare-fun |main@_bb4| ( Int Int Bool Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int Int Int (Array Int Int) ) Bool)
(declare-fun |main@postcall| ( Bool Int Int Int (Array Int Int) ) Bool)
(declare-fun |main@precall.split| ( ) Bool)
(declare-fun |main@entry| ( (Array Int Int) (Array Int Int) (Array Int Int) Int ) Bool)
(declare-fun |main@.lr.ph7.us| ( Int Int Bool Int (Array Int Int) Int (Array Int Int) Int (Array Int Int) Int Int (Array Int Int) ) Bool)

(assert
  (forall ( (A (Array Int Int)) (B (Array Int Int)) (C (Array Int Int)) (D Int) ) 
    (=>
      (and
        true
      )
      (main@entry A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Bool) (F Bool) (G Bool) (H (Array Int Int)) (I (Array Int Int)) (J Bool) (K Bool) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q (Array Int Int)) (R Int) (S (Array Int Int)) (T Int) (U (Array Int Int)) (V Int) (W Int) (X (Array Int Int)) ) 
    (=>
      (and
        (main@entry Q S U C)
        (let ((a!1 (= D (and (not (<= 5 M)) (>= M 0))))
      (a!2 (= E (and (not (<= 20 V)) (>= V 0)))))
  (and a!1
       a!2
       (= F (and E D))
       (= A C)
       (= B C)
       (not (<= N 0))
       (or (not K) (not J) (= I H))
       (or (not K) (not J) (= X I))
       (or (not K) (not J) (= L 0))
       (or (not K) (not J) (= W L))
       (or (not K) O (not G))
       (or (not J) (and K J))
       (or (not K) (and K G))
       (= F true)
       (= J true)
       (not (= (<= M 0) O))))
      )
      (main@.lr.ph10 M N O P Q R S T U V W X)
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C Int) (D Int) (E Int) (F Bool) (G (Array Int Int)) (H Int) (I (Array Int Int)) (J Bool) (K Bool) (L Int) (M Int) (N Int) (O Bool) (P Int) (Q (Array Int Int)) (R Int) (S (Array Int Int)) (T Int) (U (Array Int Int)) (V Int) (W Int) (X (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph10 M N O P Q R S T U V E B)
        (and (not (= (<= M H) F))
     (= A (= E 0))
     (= D (ite A 0 899))
     (= C (+ N (* 4 E)))
     (= H (+ 1 E))
     (not (<= N 0))
     (or (not K) (not J) (= I G))
     (or (not K) (not J) (= X I))
     (or (not K) (not J) (= L H))
     (or (not K) (not J) (= W L))
     (or (not K) (not J) F)
     (or (not (<= C 0)) (<= N 0))
     (or (not J) (and K J))
     (= J true)
     (= G (store B C D)))
      )
      (main@.lr.ph10 M N O P Q R S T U V W X)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Bool) (F Bool) (G (Array Int Int)) (H Bool) (I (Array Int Int)) (J Bool) (K Bool) (L Bool) (M Bool) (N Int) (O Int) (P Int) (Q Bool) (R (Array Int Int)) (S Int) (T Int) (U (Array Int Int)) (V Int) (W (Array Int Int)) (X Int) (Y (Array Int Int)) (Z Int) ) 
    (=>
      (and
        (main@entry U W Y C)
        (let ((a!1 (= D (and (not (<= 5 O)) (>= O 0))))
      (a!2 (= E (and (not (<= 20 Z)) (>= Z 0))))
      (a!3 (or (not J) (not (= (<= Z 0) K)))))
  (and a!1
       a!2
       (= F (and E D))
       (= A C)
       (= B C)
       (not (<= P 0))
       (or (= I G) (not J) (not H))
       (or (= R I) (not J) (not H))
       (or (not M) K (not J))
       (or (not M) (not L) (= N 0))
       (or (not M) (not L) (= T N))
       (or (not Q) (not J) (not H))
       a!3
       (or (not J) (and H J))
       (or (not L) (and M L))
       (or (not M) (and M J))
       (= F true)
       (= L true)
       (not (= (<= O 0) Q))))
      )
      (main@.lr.ph O P Q R S T U V W X Y Z)
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Bool) (I (Array Int Int)) (J Bool) (K (Array Int Int)) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Int) (R Int) (S Bool) (T (Array Int Int)) (U Int) (V Int) (W (Array Int Int)) (X Int) (Y (Array Int Int)) (Z Int) (A1 (Array Int Int)) (B1 Int) ) 
    (=>
      (and
        (main@.lr.ph10 Q R S U W X Y Z A1 B1 E B)
        (let ((a!1 (or (not L) (not (= (<= B1 0) M)))))
  (and (not (= (<= Q F) H))
       (= A (= E 0))
       (= C (+ R (* 4 E)))
       (= D (ite A 0 899))
       (= F (+ 1 E))
       (not (<= R 0))
       (or (= K I) (not L) (not J))
       (or (= T K) (not L) (not J))
       (or (not J) (not H) (not G))
       (or (not O) M (not L))
       (or (not O) (not N) (= P 0))
       (or (not O) (not N) (= V P))
       (or (not S) (not L) (not J))
       (or (<= R 0) (not (<= C 0)))
       a!1
       (or (not L) (and J L))
       (or (not J) (and J G))
       (or (not N) (and O N))
       (or (not O) (and O L))
       (= N true)
       (= I (store B C D))))
      )
      (main@.lr.ph Q R S T U V W X Y Z A1 B1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Bool) (N (Array Int Int)) (O Bool) (P (Array Int Int)) (Q Bool) (R Bool) (S (Array Int Int)) (T Int) (U Int) (V Bool) (W Bool) (X Int) (Y Int) (Z Bool) (A1 Bool) (B1 (Array Int Int)) (C1 Bool) (D1 (Array Int Int)) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 (Array Int Int)) (N1 Int) (O1 Int) (P1 (Array Int Int)) (Q1 Int) (R1 (Array Int Int)) (S1 Int) (T1 (Array Int Int)) (U1 Int) ) 
    (=>
      (and
        (main@_bb4 J1 K1 L1 N1 P1 Q1 R1 S1 T1 U1 X T N)
        (let ((a!1 (or (not V) (not (= (<= U1 U) W))))
      (a!2 (or (not Z) (not (= (<= J1 Y) A1))))
      (a!3 (or (not E1) (not (= (<= U1 0) F1)))))
  (and (= A (+ N1 (* 4 T)))
       (= B (+ Q1 (* 4 T)))
       (= C (select P1 A))
       (= D (select R1 B))
       (= F (+ S1 (* 4 T)))
       (= H (select N E))
       (= J (+ G H))
       (= K (+ K1 (* 4 C)))
       (= E (+ K1 (* 4 D)))
       (= G (select T1 F))
       (= I (select N K))
       (not (<= N1 0))
       (not (<= K1 0))
       (not (<= Q1 0))
       (not (<= S1 0))
       (or (not O) M (not Q))
       (or (not R) (not Q) (= S N))
       (or (not R) (not Q) (= B1 S))
       (or (not R) (not Q) (not M))
       (or (not V) (and V O) (and R Q))
       (or (not V) (not O) (= P L))
       (or (not V) (not O) (= B1 P))
       (or (not Z) (not W) (not V))
       (or (= D1 B1) (not E1) (not C1))
       (or (= M1 D1) (not E1) (not C1))
       (or (not C1) (not A1) (not Z))
       (or (not H1) F1 (not E1))
       (or (not H1) (not G1) (= I1 0))
       (or (not H1) (not G1) (= O1 I1))
       (or (<= N1 0) (not (<= A 0)))
       (or (<= K1 0) (not (<= K 0)))
       (or (<= K1 0) (not (<= E 0)))
       (or (<= Q1 0) (not (<= B 0)))
       (or (<= S1 0) (not (<= F 0)))
       (or (not O) (= L (store N K (- 1))))
       (or (not O) (not (<= K1 0)))
       (or (not O) (and Q O))
       (or (not R) Q)
       a!1
       (or (not V) (= U (+ 1 T)))
       a!2
       (or (not Z) (= Y (+ 1 X)))
       (or (not Z) (and Z V))
       a!3
       (or (not E1) (and C1 E1))
       (or (not C1) (and C1 Z))
       (or (not G1) (and H1 G1))
       (or (not H1) (and H1 E1))
       (= G1 true)
       (not (= (<= I J) M))))
      )
      (main@.lr.ph J1 K1 L1 M1 N1 O1 P1 Q1 R1 S1 T1 U1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Int) (N Bool) (O Int) (P Bool) (Q Bool) (R Int) (S Int) (T Int) (U Bool) (V (Array Int Int)) (W Int) (X Int) (Y (Array Int Int)) (Z Int) (A1 (Array Int Int)) (B1 Int) (C1 (Array Int Int)) (D1 Int) ) 
    (=>
      (and
        (main@.lr.ph S T U V W M Y Z A1 B1 C1 D1)
        (and (not (= (<= D1 O) N))
     (= O (+ 1 M))
     (= D (+ T (* 4 C)))
     (= A (+ W (* 4 M)))
     (= B (+ Z (* 4 M)))
     (= C (select Y A))
     (= J (select V D))
     (= K (+ H I))
     (= E (select A1 B))
     (= F (+ T (* 4 E)))
     (= G (+ B1 (* 4 M)))
     (= H (select C1 G))
     (= I (select V F))
     (not (<= W 0))
     (not (<= T 0))
     (not (<= Z 0))
     (not (<= B1 0))
     (or (not Q) (not P) (= R O))
     (or (not Q) (not P) (= X R))
     (or (not Q) (not P) N)
     (or (<= W 0) (not (<= A 0)))
     (or (<= T 0) (not (<= D 0)))
     (or (<= T 0) (not (<= F 0)))
     (or (<= Z 0) (not (<= B 0)))
     (or (<= B1 0) (not (<= G 0)))
     (or (not P) (and Q P))
     (not L)
     (= P true)
     (not (= (<= J K) L)))
      )
      (main@.lr.ph S T U V W X Y Z A1 B1 C1 D1)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J (Array Int Int)) (K Bool) (L (Array Int Int)) (M Int) (N Bool) (O (Array Int Int)) (P Bool) (Q (Array Int Int)) (R Bool) (S Int) (T Int) (U Bool) (V Bool) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Bool) (B1 Int) (C1 Bool) (D1 Int) (E1 Int) (F1 Int) (G1 (Array Int Int)) ) 
    (=>
      (and
        (main@entry A B C F)
        (let ((a!1 (= G (and (not (<= 5 E1)) (>= E1 0))))
      (a!2 (= H (and (not (<= 20 M)) (>= M 0))))
      (a!3 (or (not V) (not (= (<= T (- 1)) U))))
      (a!4 (or (not P) (not (= (<= M 0) N)))))
  (and a!1
       a!2
       (= I (and H G))
       (= D F)
       (= E F)
       (not (<= F1 0))
       (or (<= F1 0) (not V) (not (<= S 0)))
       (or W (not A1) (not V))
       (or (not A1) (not Z) (= Y X))
       (or (not A1) (not Z) (= C1 Y))
       (or (not A1) (not Z) (= B1 0))
       (or (not A1) (not Z) (= D1 B1))
       (or (= Q O) (not P) (not V))
       (or (= G1 Q) (not P) (not V))
       (or (not P) (not K) (= L J))
       (or (not P) (not K) (= O L))
       (or (not R) (not P) (not K))
       (or (not N) (not P) (not V))
       a!3
       (or (not V) (not (= U X)))
       (or (not V) (= S F1))
       (or (not V) (= T (select G1 S)))
       (or (not V) (and P V))
       (or (not Z) (and A1 Z))
       (or (not A1) (and A1 V))
       (or R (not V))
       a!4
       (or (not P) (and P K))
       (= I true)
       (= Z true)
       (not (= (<= E1 0) R))))
      )
      (main@postcall C1 D1 E1 F1 G1)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D (Array Int Int)) (E Int) (F (Array Int Int)) (G Bool) (H (Array Int Int)) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Bool) (O Bool) (P (Array Int Int)) (Q Int) (R Bool) (S (Array Int Int)) (T Bool) (U (Array Int Int)) (V Bool) (W Bool) (X (Array Int Int)) (Y Bool) (Z Bool) (A1 (Array Int Int)) (B1 Bool) (C1 Int) (D1 Int) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Bool) (J1 Bool) (K1 Bool) (L1 Int) (M1 Bool) (N1 Int) (O1 Int) (P1 Int) (Q1 (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph10 O1 P1 B1 A B C D E F Q K H)
        (let ((a!1 (or (not F1) (not (= (<= D1 (- 1)) E1))))
      (a!2 (or (not V) (not (= (<= Q 0) R))))
      (a!3 (or (not Y) (not (= (<= Q 0) T)))))
  (and (not (= (<= O1 L) N))
       (= G (= K 0))
       (= I (+ P1 (* 4 K)))
       (= J (ite G 0 899))
       (= L (+ 1 K))
       (not (<= P1 0))
       (or (not O) (not N) (not M))
       (or (<= P1 0) (not F1) (not (<= C1 0)))
       (or (not F1) (and Z Y) (and W V))
       (or G1 (not K1) (not F1))
       (or (not K1) (not J1) (= I1 H1))
       (or (not K1) (not J1) (= M1 I1))
       (or (not K1) (not J1) (= L1 0))
       (or (not K1) (not J1) (= N1 L1))
       (or (not V) (not O) (= P U))
       (or (not V) (not O) (= S P))
       (or (not B1) (not V) (not O))
       (or (not W) (not V) (= X S))
       (or (not W) (not V) (= Q1 X))
       (or (not W) (not V) (not R))
       (or B1 (not Y) (not O))
       (or (not Z) (not Y) (= A1 U))
       (or (not Z) (not Y) (= Q1 A1))
       (or (not Z) (not Y) (not T))
       (or (<= P1 0) (not (<= I 0)))
       (or (not O) (and O M))
       a!1
       (or (not F1) (not (= E1 H1)))
       (or (not F1) (= C1 P1))
       (or (not F1) (= D1 (select Q1 C1)))
       (or (not J1) (and K1 J1))
       (or (not K1) (and K1 F1))
       a!2
       (or (not V) (and V O))
       (or B1 (not F1))
       (or (not W) V)
       a!3
       (or (not Y) (and Y O))
       (or (not Z) Y)
       (= J1 true)
       (= U (store H I J))))
      )
      (main@postcall M1 N1 O1 P1 Q1)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R (Array Int Int)) (S Bool) (T (Array Int Int)) (U Bool) (V (Array Int Int)) (W Bool) (X Bool) (Y (Array Int Int)) (Z Int) (A1 Int) (B1 Bool) (C1 Bool) (D1 Int) (E1 Int) (F1 Bool) (G1 Bool) (H1 (Array Int Int)) (I1 Bool) (J1 (Array Int Int)) (K1 Int) (L1 Bool) (M1 (Array Int Int)) (N1 Bool) (O1 (Array Int Int)) (P1 Bool) (Q1 Int) (R1 Int) (S1 Bool) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Bool) (Y1 Bool) (Z1 Int) (A2 Bool) (B2 Int) (C2 Int) (D2 Int) (E2 (Array Int Int)) ) 
    (=>
      (and
        (main@_bb4 C2 D2 P1 A B D E J K K1 D1 Z T)
        (let ((a!1 (or (not B1) (not (= (<= K1 A1) C1))))
      (a!2 (or (not F1) (not (= (<= C2 E1) G1))))
      (a!3 (or (not T1) (not (= (<= R1 (- 1)) S1))))
      (a!4 (or (not N1) (not (= (<= K1 0) L1)))))
  (and (= C (+ A (* 4 Z)))
       (= F (+ D (* 4 Z)))
       (= G (select B C))
       (= H (select E F))
       (= I (+ D2 (* 4 H)))
       (= L (+ J (* 4 Z)))
       (= M (select K L))
       (= N (select T I))
       (= P (+ M N))
       (= O (select T Q))
       (= Q (+ D2 (* 4 G)))
       (not (<= A 0))
       (not (<= D 0))
       (not (<= J 0))
       (not (<= D2 0))
       (or (not W) (= Y T) (not X))
       (or (not W) (= H1 Y) (not X))
       (or (not W) (not S) (not X))
       (or (not W) S (not U))
       (or (not B1) (and B1 U) (and W X))
       (or (not B1) (not U) (= V R))
       (or (not B1) (not U) (= H1 V))
       (or (not F1) (not C1) (not B1))
       (or (<= D2 0) (not T1) (not (<= Q1 0)))
       (or U1 (not Y1) (not T1))
       (or (not Y1) (not X1) (= W1 V1))
       (or (not Y1) (not X1) (= A2 W1))
       (or (not Y1) (not X1) (= Z1 0))
       (or (not Y1) (not X1) (= B2 Z1))
       (or (not I1) (not G1) (not F1))
       (or (= O1 M1) (not N1) (not T1))
       (or (= E2 O1) (not N1) (not T1))
       (or (not N1) (not I1) (= J1 H1))
       (or (not N1) (not I1) (= M1 J1))
       (or (not L1) (not N1) (not T1))
       (or (not (<= C 0)) (<= A 0))
       (or (not (<= F 0)) (<= D 0))
       (or (not (<= L 0)) (<= J 0))
       (or (<= D2 0) (not (<= I 0)))
       (or (<= D2 0) (not (<= Q 0)))
       (or W (not X))
       (or (not U) (= R (store T Q (- 1))))
       (or (not U) (not (<= D2 0)))
       (or (not U) (and U W))
       a!1
       (or (not B1) (= A1 (+ 1 Z)))
       a!2
       (or (not F1) (= E1 (+ 1 D1)))
       (or (not F1) (and F1 B1))
       a!3
       (or (not T1) (not (= S1 V1)))
       (or (not T1) (= Q1 D2))
       (or (not T1) (= R1 (select E2 Q1)))
       (or (not T1) (and N1 T1))
       (or (not X1) (and Y1 X1))
       (or (not Y1) (and Y1 T1))
       (or (not I1) (and I1 F1))
       (or P1 (not T1))
       a!4
       (or (not N1) (and N1 I1))
       (= X1 true)
       (not (= (<= O P) S))))
      )
      (main@postcall A2 B2 C2 D2 E2)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Int) (T Int) (U Int) (V Bool) (W Bool) (X (Array Int Int)) (Y Bool) (Z (Array Int Int)) (A1 Bool) (B1 Int) (C1 Int) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Bool) (J1 Bool) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Int) (P1 (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph N1 O1 A1 X A S B D E K L U)
        (let ((a!1 (or (not E1) (not (= (<= C1 (- 1)) D1)))))
  (and (not (= (<= U T) W))
       (= C (+ A (* 4 S)))
       (= G (select B C))
       (= F (+ D (* 4 S)))
       (= H (+ O1 (* 4 G)))
       (= I (select E F))
       (= J (+ O1 (* 4 I)))
       (= P (select X H))
       (= M (+ K (* 4 S)))
       (= N (select L M))
       (= O (select X J))
       (= Q (+ N O))
       (= T (+ 1 S))
       (not (<= A 0))
       (not (<= D 0))
       (not (<= K 0))
       (not (<= O1 0))
       (or (<= O1 0) (not E1) (not (<= B1 0)))
       (or F1 (not J1) (not E1))
       (or (not J1) (not I1) (= H1 G1))
       (or (not J1) (not I1) (= L1 H1))
       (or (not J1) (not I1) (= K1 0))
       (or (not J1) (not I1) (= M1 K1))
       (or (= Z X) (not Y) (not E1))
       (or (= P1 Z) (not Y) (not E1))
       (or (not Y) (not W) (not V))
       (or (not (<= C 0)) (<= A 0))
       (or (<= D 0) (not (<= F 0)))
       (or (not (<= M 0)) (<= K 0))
       (or (<= O1 0) (not (<= H 0)))
       (or (<= O1 0) (not (<= J 0)))
       a!1
       (or (not E1) (not (= D1 G1)))
       (or (not E1) (= B1 O1))
       (or (not E1) (= C1 (select P1 B1)))
       (or (not E1) (and Y E1))
       (or (not I1) (and J1 I1))
       (or (not J1) (and J1 E1))
       (or A1 (not E1))
       (or (not Y) (and Y V))
       (not R)
       (= I1 true)
       (not (= (<= P Q) R))))
      )
      (main@postcall L1 M1 N1 O1 P1)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) (D Int) (E Int) (F Bool) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Int) (N Bool) (O Int) (P Int) (Q Int) (R (Array Int Int)) ) 
    (=>
      (and
        (main@postcall A B P Q R)
        (and (not (= (<= P I) C))
     (not (= F H))
     (= I (+ 1 B))
     (= D (+ Q (* 4 I)))
     (= E (select R D))
     (not (<= Q 0))
     (or (not L) (not K) (= J H))
     (or (not L) (not K) (= N J))
     (or (not L) (not K) (= M I))
     (or (not L) (not K) (= O M))
     (or (not L) (not K) G)
     (or (<= Q 0) (not (<= D 0)))
     (or (not K) (and L K))
     (= K true)
     (= C true)
     (not A)
     (not (= (<= E (- 1)) F)))
      )
      (main@postcall N O P Q R)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Int) (K (Array Int Int)) (L Bool) (M (Array Int Int)) (N Int) (O Bool) (P (Array Int Int)) (Q Bool) (R (Array Int Int)) (S Bool) (T Int) (U (Array Int Int)) (V Int) (W Int) (X Bool) (Y Bool) (Z Bool) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) ) 
    (=>
      (and
        (main@entry A B C F)
        (let ((a!1 (= H (and (not (<= 20 N)) (>= N 0))))
      (a!2 (= G (and (not (<= 5 J)) (>= J 0))))
      (a!3 (or (not A1) (not (= (<= W (- 1)) X))))
      (a!4 (or (not Q) (not (= (<= N 0) O)))))
  (and a!1
       a!2
       (= I (and G H))
       (= E F)
       (= D F)
       (not (<= T 0))
       (or (<= T 0) (not A1) (not (<= V 0)))
       (or (not D1) (not A1) (= B1 Z))
       (or (not D1) (not A1) (= C1 B1))
       (or (not D1) (not A1) (not Y))
       (or (not Q) (= R P) (not A1))
       (or (not Q) (= U R) (not A1))
       (or (not Q) (not O) (not A1))
       (or (not Q) (not L) (= M K))
       (or (not Q) (not L) (= P M))
       (or (not Q) (not L) (not S))
       a!3
       (or (not A1) (not (= X Z)))
       (or (not A1) (= V T))
       (or (not A1) (= W (select U V)))
       (or (not A1) (and Q A1))
       (or (not A1) S)
       (or (not D1) (and D1 A1))
       (or (not D1) C1)
       (or (not E1) (and E1 D1))
       a!4
       (or (not Q) (and Q L))
       (= E1 true)
       (= I true)
       (not (= (<= J 0) S))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D (Array Int Int)) (E Int) (F (Array Int Int)) (G Bool) (H (Array Int Int)) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Bool) (P Bool) (Q (Array Int Int)) (R Int) (S Bool) (T (Array Int Int)) (U Bool) (V (Array Int Int)) (W Bool) (X Bool) (Y (Array Int Int)) (Z Bool) (A1 Bool) (B1 (Array Int Int)) (C1 Bool) (D1 Int) (E1 (Array Int Int)) (F1 Int) (G1 Int) (H1 Bool) (I1 Bool) (J1 Bool) (K1 Bool) (L1 Bool) (M1 Bool) (N1 Bool) (O1 Bool) ) 
    (=>
      (and
        (main@.lr.ph10 M D1 C1 A B C D E F R K H)
        (let ((a!1 (or (not K1) (not (= (<= G1 (- 1)) H1))))
      (a!2 (or (not Z) (not (= (<= R 0) U))))
      (a!3 (or (not W) (not (= (<= R 0) S)))))
  (and (not (= (<= M L) O))
       (= G (= K 0))
       (= I (+ D1 (* 4 K)))
       (= J (ite G 0 899))
       (= L (+ 1 K))
       (not (<= D1 0))
       (or (not P) (not O) (not N))
       (or (<= D1 0) (not K1) (not (<= F1 0)))
       (or (not K1) (and A1 Z) (and X W))
       (or (not N1) (not K1) (= L1 J1))
       (or (not N1) (not K1) (= M1 L1))
       (or (not N1) (not K1) (not I1))
       (or C1 (not Z) (not P))
       (or (not W) (not P) (= Q V))
       (or (not W) (not P) (= T Q))
       (or (not C1) (not P) (not W))
       (or (not X) (not W) (= E1 Y))
       (or (not X) (not W) (= Y T))
       (or (not X) (not W) (not S))
       (or (not A1) (not Z) (= B1 V))
       (or (not A1) (not Z) (= E1 B1))
       (or (not A1) (not Z) (not U))
       (or (<= D1 0) (not (<= I 0)))
       (or (not P) (and P N))
       a!1
       (or (not K1) (not (= H1 J1)))
       (or (not K1) (= F1 D1))
       (or (not K1) (= G1 (select E1 F1)))
       (or (not K1) C1)
       (or (not N1) (and N1 K1))
       (or (not N1) M1)
       (or (not O1) (and O1 N1))
       a!2
       (or (not Z) (and Z P))
       a!3
       (or (not W) (and W P))
       (or (not X) W)
       (or (not A1) Z)
       (= O1 true)
       (= V (store H I J))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R (Array Int Int)) (S Bool) (T (Array Int Int)) (U Bool) (V (Array Int Int)) (W Bool) (X Bool) (Y (Array Int Int)) (Z Int) (A1 Int) (B1 Bool) (C1 Bool) (D1 Int) (E1 Int) (F1 Int) (G1 Bool) (H1 Bool) (I1 (Array Int Int)) (J1 Bool) (K1 (Array Int Int)) (L1 Int) (M1 Bool) (N1 (Array Int Int)) (O1 Bool) (P1 (Array Int Int)) (Q1 Bool) (R1 Int) (S1 (Array Int Int)) (T1 Int) (U1 Int) (V1 Bool) (W1 Bool) (X1 Bool) (Y1 Bool) (Z1 Bool) (A2 Bool) (B2 Bool) (C2 Bool) ) 
    (=>
      (and
        (main@_bb4 F1 R1 Q1 A B D E J K L1 D1 Z T)
        (let ((a!1 (or (not B1) (not (= (<= L1 A1) C1))))
      (a!2 (or (not Y1) (not (= (<= U1 (- 1)) V1))))
      (a!3 (or (not G1) (not (= (<= F1 E1) H1))))
      (a!4 (or (not O1) (not (= (<= L1 0) M1)))))
  (and (= C (+ A (* 4 Z)))
       (= F (+ D (* 4 Z)))
       (= G (select B C))
       (= H (select E F))
       (= I (+ R1 (* 4 H)))
       (= L (+ J (* 4 Z)))
       (= N (select T I))
       (= P (+ M N))
       (= M (select K L))
       (= O (select T Q))
       (= Q (+ R1 (* 4 G)))
       (not (<= A 0))
       (not (<= D 0))
       (not (<= J 0))
       (not (<= R1 0))
       (or (not W) (= I1 Y) (not X))
       (or (not W) (= Y T) (not X))
       (or (not W) (not S) (not X))
       (or (not W) S (not U))
       (or (not B1) (and B1 U) (and W X))
       (or (not B1) (not U) (= V R))
       (or (not B1) (not U) (= I1 V))
       (or (<= R1 0) (not Y1) (not (<= T1 0)))
       (or (not B2) (not Y1) (= Z1 X1))
       (or (not B2) (not Y1) (= A2 Z1))
       (or (not B2) (not Y1) (not W1))
       (or (not G1) (not C1) (not B1))
       (or (not J1) (not H1) (not G1))
       (or (not O1) (= P1 N1) (not Y1))
       (or (not O1) (= S1 P1) (not Y1))
       (or (not O1) (not M1) (not Y1))
       (or (not O1) (not J1) (= K1 I1))
       (or (not O1) (not J1) (= N1 K1))
       (or (<= A 0) (not (<= C 0)))
       (or (not (<= F 0)) (<= D 0))
       (or (not (<= L 0)) (<= J 0))
       (or (<= R1 0) (not (<= I 0)))
       (or (<= R1 0) (not (<= Q 0)))
       (or W (not X))
       (or (not U) (= R (store T Q (- 1))))
       (or (not U) (not (<= R1 0)))
       (or (not U) (and U W))
       a!1
       (or (not B1) (= A1 (+ 1 Z)))
       a!2
       (or (not Y1) (not (= V1 X1)))
       (or (not Y1) (= T1 R1))
       (or (not Y1) (= U1 (select S1 T1)))
       (or (not Y1) (and O1 Y1))
       (or (not Y1) Q1)
       (or (not B2) (and B2 Y1))
       (or (not B2) A2)
       (or (not C2) (and C2 B2))
       a!3
       (or (not G1) (= E1 (+ 1 D1)))
       (or (not G1) (and G1 B1))
       (or (not J1) (and J1 G1))
       a!4
       (or (not O1) (and O1 J1))
       (= C2 true)
       (not (= (<= O P) S))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D Int) (E Int) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M (Array Int Int)) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Bool) (X Bool) (Y (Array Int Int)) (Z Bool) (A1 (Array Int Int)) (B1 Bool) (C1 Int) (D1 (Array Int Int)) (E1 Int) (F1 Int) (G1 Bool) (H1 Bool) (I1 Bool) (J1 Bool) (K1 Bool) (L1 Bool) (M1 Bool) (N1 Bool) ) 
    (=>
      (and
        (main@.lr.ph A C1 B1 Y B T C E F L M V)
        (let ((a!1 (or (not J1) (not (= (<= F1 (- 1)) G1)))))
  (and (not (= (<= Q R) S))
       (= D (+ B (* 4 T)))
       (= J (select F G))
       (= G (+ E (* 4 T)))
       (= H (select C D))
       (= I (+ C1 (* 4 H)))
       (= N (+ L (* 4 T)))
       (= K (+ C1 (* 4 J)))
       (= U (+ 1 T))
       (= O (select M N))
       (= P (select Y K))
       (= Q (select Y I))
       (= R (+ O P))
       (not (<= E 0))
       (not (<= B 0))
       (not (<= L 0))
       (not (<= C1 0))
       (or (<= C1 0) (not J1) (not (<= E1 0)))
       (or (not M1) (not J1) (= K1 I1))
       (or (not M1) (not J1) (= L1 K1))
       (or (not M1) (not J1) (not H1))
       (or (not Z) (= A1 Y) (not J1))
       (or (not Z) (= D1 A1) (not J1))
       (or (not Z) (not X) (not W))
       (or (<= B 0) (not (<= D 0)))
       (or (not (<= G 0)) (<= E 0))
       (or (<= L 0) (not (<= N 0)))
       (or (<= C1 0) (not (<= I 0)))
       (or (<= C1 0) (not (<= K 0)))
       a!1
       (or (not J1) (not (= G1 I1)))
       (or (not J1) (= E1 C1))
       (or (not J1) (= F1 (select D1 E1)))
       (or (not J1) (and Z J1))
       (or (not J1) B1)
       (or (not M1) (and M1 J1))
       (or (not M1) L1)
       (or (not N1) (and N1 M1))
       (or (not Z) (and Z W))
       (= N1 true)
       (not S)
       (not (= (<= V U) X))))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Bool) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Bool) (Q Bool) (R Bool) (S Bool) (T Bool) ) 
    (=>
      (and
        (main@postcall A B C F G)
        (and (not (= (<= I (- 1)) J))
     (not (= J L))
     (= E (+ 1 B))
     (= H (+ F (* 4 E)))
     (= I (select G H))
     (not (<= F 0))
     (or (not P) (not M) (= O N))
     (or (not P) (not M) (= N L))
     (or (not S) (not P) (= Q O))
     (or (not S) (not P) (= R Q))
     (or (not K) (not M) (not P))
     (or (not (<= H 0)) (<= F 0))
     (or (not P) (and P M))
     (or (not S) (and S P))
     (or (not S) R)
     (or (not T) (and T S))
     (= T true)
     (= D true)
     (not A)
     (not (= (<= C E) D)))
      )
      main@precall.split
    )
  )
)
(assert
  (forall ( (A Bool) (B (Array Int Int)) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L (Array Int Int)) (M (Array Int Int)) (N Bool) (O Bool) (P Int) (Q Int) (R Int) (S Bool) (T Int) (U (Array Int Int)) (V Int) (W (Array Int Int)) (X Int) (Y (Array Int Int)) (Z Int) (A1 Int) (B1 (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph10 Q R S T U V W X Y Z E B)
        (let ((a!1 (or (not J) (not (= (<= Z 0) K)))))
  (and (not (= (<= Q F) H))
       (= A (= E 0))
       (= C (+ R (* 4 E)))
       (= D (ite A 0 899))
       (= F (+ 1 E))
       (not (<= R 0))
       (or (not I) (not H) (not G))
       (or (not O) K (not J))
       (or (not O) (not N) (= M L))
       (or (not O) (not N) (= B1 M))
       (or (not O) (not N) (= P 0))
       (or (not O) (not N) (= A1 P))
       (or S (not I) (not J))
       (or (<= R 0) (not (<= C 0)))
       (or (not I) (and I G))
       a!1
       (or (not J) (and J I))
       (or (not N) (and O N))
       (or (not O) (and O J))
       (= N true)
       (= L (store B C D))))
      )
      (main@.lr.ph7.us Q R S T U V W X Y Z A1 B1)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Bool) (N (Array Int Int)) (O Bool) (P (Array Int Int)) (Q Bool) (R Bool) (S (Array Int Int)) (T Int) (U Int) (V Bool) (W Bool) (X Int) (Y Bool) (Z (Array Int Int)) (A1 Int) (B1 (Array Int Int)) (C1 Bool) (D1 Bool) (E1 Int) (F1 Int) (G1 Int) (H1 Bool) (I1 Int) (J1 (Array Int Int)) (K1 Int) (L1 (Array Int Int)) (M1 Int) (N1 (Array Int Int)) (O1 Int) (P1 Int) (Q1 (Array Int Int)) ) 
    (=>
      (and
        (main@_bb4 F1 G1 H1 I1 J1 K1 L1 M1 N1 O1 X T N)
        (let ((a!1 (or (not V) (not (= (<= O1 U) W))))
      (a!2 (or (not D1) (not (= (<= F1 A1) Y)))))
  (and (= B (+ K1 (* 4 T)))
       (= D (select L1 B))
       (= F (+ M1 (* 4 T)))
       (= H (select N E))
       (= G (select N1 F))
       (= A (+ I1 (* 4 T)))
       (= C (select J1 A))
       (= E (+ G1 (* 4 D)))
       (= I (select N K))
       (= J (+ G H))
       (= K (+ G1 (* 4 C)))
       (not (<= G1 0))
       (not (<= I1 0))
       (not (<= K1 0))
       (not (<= M1 0))
       (or (not Q) (not O) M)
       (or (not R) (not Q) (= S N))
       (or (not R) (not Q) (= Z S))
       (or (not R) (not Q) (not M))
       (or (not V) (and V O) (and R Q))
       (or (not V) (not O) (= P L))
       (or (not V) (not O) (= Z P))
       (or (not D1) (not W) (not V))
       (or (not D1) (not C1) (= B1 Z))
       (or (not D1) (not C1) (= Q1 B1))
       (or (not D1) (not C1) (= E1 A1))
       (or (not D1) (not C1) (= P1 E1))
       (or (not D1) (not C1) Y)
       (or (<= G1 0) (not (<= E 0)))
       (or (<= G1 0) (not (<= K 0)))
       (or (<= I1 0) (not (<= A 0)))
       (or (<= K1 0) (not (<= B 0)))
       (or (<= M1 0) (not (<= F 0)))
       (or (not O) (= L (store N K (- 1))))
       (or (not O) (not (<= G1 0)))
       (or (not O) (and Q O))
       (or (not R) Q)
       a!1
       (or (not V) (= U (+ 1 T)))
       (or (not C1) (and D1 C1))
       a!2
       (or (not D1) (= A1 (+ 1 X)))
       (or (not D1) (and D1 V))
       (= C1 true)
       (not (= (<= I J) M))))
      )
      (main@.lr.ph7.us F1 G1 H1 I1 J1 K1 L1 M1 N1 O1 P1 Q1)
    )
  )
)
(assert
  (forall ( (A (Array Int Int)) (B (Array Int Int)) (C Bool) (D Bool) (E Int) (F Int) (G Int) (H Bool) (I Int) (J (Array Int Int)) (K Int) (L (Array Int Int)) (M Int) (N (Array Int Int)) (O Int) (P Int) (Q Int) (R (Array Int Int)) ) 
    (=>
      (and
        (main@.lr.ph7.us F G H I J K L M N O P A)
        (and (or (not D) (not C) (= R B))
     (or (not D) (not C) (= E 0))
     (or (not D) (not C) (= Q E))
     (or (not C) (and D C))
     (= C true)
     (or (not D) (not C) (= B A)))
      )
      (main@_bb4 F G H I J K L M N O P Q R)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) (M Bool) (N (Array Int Int)) (O Bool) (P (Array Int Int)) (Q Bool) (R Bool) (S (Array Int Int)) (T Int) (U Bool) (V (Array Int Int)) (W Int) (X (Array Int Int)) (Y Bool) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Int) (F1 (Array Int Int)) (G1 Int) (H1 (Array Int Int)) (I1 Int) (J1 (Array Int Int)) (K1 Int) (L1 Int) (M1 Int) (N1 (Array Int Int)) ) 
    (=>
      (and
        (main@_bb4 B1 C1 D1 E1 F1 G1 H1 I1 J1 K1 L1 T N)
        (let ((a!1 (or (not Z) (not (= (<= K1 W) U)))))
  (and (= A (+ E1 (* 4 T)))
       (= C (select F1 A))
       (= E (+ C1 (* 4 D)))
       (= D (select H1 B))
       (= J (+ G H))
       (= B (+ G1 (* 4 T)))
       (= F (+ I1 (* 4 T)))
       (= G (select J1 F))
       (= H (select N E))
       (= I (select N K))
       (= K (+ C1 (* 4 C)))
       (not (<= E1 0))
       (not (<= I1 0))
       (not (<= G1 0))
       (not (<= C1 0))
       (or M (not Q) (not O))
       (or (not R) (not Q) (= S N))
       (or (not R) (not Q) (= V S))
       (or (not R) (not Q) (not M))
       (or (not Z) (and Z O) (and R Q))
       (or (not Z) (not O) (= P L))
       (or (not Z) (not O) (= V P))
       (or (not Z) (not Y) (= X V))
       (or (not Z) (not Y) (= N1 X))
       (or (not Z) (not Y) (= A1 W))
       (or (not Z) (not Y) (= M1 A1))
       (or (not Z) U (not Y))
       (or (<= E1 0) (not (<= A 0)))
       (or (<= I1 0) (not (<= F 0)))
       (or (<= G1 0) (not (<= B 0)))
       (or (<= C1 0) (not (<= E 0)))
       (or (<= C1 0) (not (<= K 0)))
       (or (not O) (= L (store N K (- 1))))
       (or (not O) (not (<= C1 0)))
       (or (not O) (and O Q))
       (or (not R) Q)
       (or (not Y) (and Z Y))
       a!1
       (or (not Z) (= W (+ 1 T)))
       (= Y true)
       (not (= (<= I J) M))))
      )
      (main@_bb4 B1 C1 D1 E1 F1 G1 H1 I1 J1 K1 L1 M1 N1)
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        main@precall.split
        true
      )
      false
    )
  )
)

(check-sat)
(exit)
