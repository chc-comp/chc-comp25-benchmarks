(set-logic HORN)


(declare-fun |step_lturn| ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |combined_lturn| ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |lturn| ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) M) B) 3)
     (>= (+ (* (- 1) M) A) 1)
     (>= (+ (* (- 1) M) I) 3)
     (>= (+ (* (- 1) K) J) 1)
     (>= (+ (* (- 1) K) I) 2)
     (>= (+ (* (- 1) J) I) 1)
     (>= (+ (* (- 1) H) M) (- 1))
     (>= (+ (* (- 1) H) J) 1)
     (>= (+ (* (- 1) H) B) 2)
     (>= (+ (* (- 1) H) A) 0)
     (>= (+ (* (- 1) H) I) 2)
     (>= (+ (* (- 1) G) M) 0)
     (>= (+ (* (- 1) G) K) 0)
     (>= (+ (* (- 1) G) J) 2)
     (>= (+ (* (- 1) G) H) 1)
     (>= (+ (* (- 1) G) B) 3)
     (>= (+ (* (- 1) G) A) 1)
     (>= (+ (* (- 1) G) I) 3)
     (>= (+ (* (- 1) E) B) 0)
     (>= (+ (* (- 1) E) I) 0)
     (>= (+ (* (- 1) D) F) 0)
     (>= (+ (* (- 1) C) M) 0)
     (>= (+ (* (- 1) C) K) 0)
     (>= (+ (* (- 1) C) J) 2)
     (>= (+ (* (- 1) C) H) 1)
     (>= (+ (* (- 1) C) G) 0)
     (>= (+ (* (- 1) C) F) 3)
     (>= (+ (* (- 1) C) E) 3)
     (>= (+ (* (- 1) C) D) 3)
     (>= (+ (* (- 1) C) B) 3)
     (>= (+ (* (- 1) C) A) 1)
     (>= (+ (* (- 1) C) I) 3)
     (>= (+ (* (- 1) B) I) 0)
     (>= (+ (* (- 1) A) J) 1)
     (>= (+ (* (- 1) A) B) 2)
     (>= (+ (* (- 1) A) I) 2)
     (>= (+ M (* (- 1) A)) (- 1))
     (>= (+ H (* (- 1) M)) 1)
     (>= (+ H (* (- 1) A)) 0)
     (>= (+ F (* (- 1) M)) 3)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F (* (- 1) J)) 1)
     (>= (+ F (* (- 1) H)) 2)
     (>= (+ F (* (- 1) G)) 3)
     (>= (+ F (* (- 1) A)) 2)
     (>= (+ E (* (- 1) M)) 3)
     (>= (+ E (* (- 1) K)) 2)
     (>= (+ E (* (- 1) J)) 1)
     (>= (+ E (* (- 1) H)) 2)
     (>= (+ E (* (- 1) G)) 3)
     (>= (+ E (* (- 1) B)) 0)
     (>= (+ E (* (- 1) A)) 2)
     (>= (+ E (* (- 1) I)) 0)
     (>= (+ D (* (- 1) M)) 3)
     (>= (+ D (* (- 1) K)) 2)
     (>= (+ D (* (- 1) J)) 1)
     (>= (+ D (* (- 1) H)) 2)
     (>= (+ D (* (- 1) G)) 3)
     (>= (+ D (* (- 1) F)) 0)
     (>= (+ D (* (- 1) A)) 2)
     (>= (+ C (* (- 1) G)) 0)
     (>= (+ B (* (- 1) K)) 2)
     (>= (+ B (* (- 1) J)) 1)
     (>= (+ B (* (- 1) I)) 0)
     (>= (+ (* (- 1) M) J) 2))
      )
      (lturn M A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) M) J) 1)
     (>= (+ (* (- 1) M) B) 3)
     (>= (+ (* (- 1) M) A) 2)
     (>= (+ (* (- 1) M) I) 2)
     (>= (+ (* (- 1) K) J) 1)
     (>= (+ (* (- 1) K) I) 2)
     (>= (+ (* (- 1) J) I) 1)
     (>= (+ (* (- 1) H) B) 1)
     (>= (+ (* (- 1) H) A) 0)
     (>= (+ (* (- 1) H) I) 0)
     (>= (+ (* (- 1) G) M) 0)
     (>= (+ (* (- 1) G) K) 0)
     (>= (+ (* (- 1) G) J) 1)
     (>= (+ (* (- 1) G) H) 2)
     (>= (+ (* (- 1) G) B) 3)
     (>= (+ (* (- 1) G) A) 2)
     (>= (+ (* (- 1) G) I) 2)
     (>= (+ (* (- 1) E) H) (- 1))
     (>= (+ (* (- 1) E) F) 0)
     (>= (+ (* (- 1) E) D) 0)
     (>= (+ (* (- 1) E) B) 0)
     (>= (+ (* (- 1) E) A) (- 1))
     (>= (+ (* (- 1) E) I) (- 1))
     (>= (+ (* (- 1) D) F) 0)
     (>= (+ (* (- 1) C) M) 0)
     (>= (+ (* (- 1) C) K) 0)
     (>= (+ (* (- 1) C) J) 1)
     (>= (+ (* (- 1) C) H) 2)
     (>= (+ (* (- 1) C) G) 0)
     (>= (+ (* (- 1) C) F) 3)
     (>= (+ (* (- 1) C) E) 3)
     (>= (+ (* (- 1) C) D) 3)
     (>= (+ (* (- 1) C) B) 3)
     (>= (+ (* (- 1) C) A) 2)
     (>= (+ (* (- 1) C) I) 2)
     (>= (+ (* (- 1) B) I) (- 1))
     (>= (+ (* (- 1) A) B) 1)
     (>= (+ (* (- 1) A) I) 0)
     (>= (+ M (* (- 1) K)) 0)
     (>= (+ M (* (- 1) J)) (- 1))
     (>= (+ K (* (- 1) J)) (- 1))
     (>= (+ H (* (- 1) M)) 2)
     (>= (+ H (* (- 1) K)) 2)
     (>= (+ H (* (- 1) J)) 1)
     (>= (+ H (* (- 1) B)) (- 1))
     (>= (+ H (* (- 1) A)) 0)
     (>= (+ H (* (- 1) I)) 0)
     (>= (+ G (* (- 1) M)) 0)
     (>= (+ G (* (- 1) K)) 0)
     (>= (+ G (* (- 1) J)) (- 1))
     (>= (+ F (* (- 1) M)) 3)
     (>= (+ F (* (- 1) K)) 3)
     (>= (+ F (* (- 1) J)) 2)
     (>= (+ F (* (- 1) H)) 1)
     (>= (+ F (* (- 1) G)) 3)
     (>= (+ F (* (- 1) B)) 0)
     (>= (+ F (* (- 1) A)) 1)
     (>= (+ F (* (- 1) I)) 1)
     (>= (+ E (* (- 1) M)) 3)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E (* (- 1) J)) 2)
     (>= (+ E (* (- 1) H)) 1)
     (>= (+ E (* (- 1) G)) 3)
     (>= (+ E (* (- 1) B)) 0)
     (>= (+ E (* (- 1) A)) 1)
     (>= (+ E (* (- 1) I)) 1)
     (>= (+ D (* (- 1) M)) 3)
     (>= (+ D (* (- 1) K)) 3)
     (>= (+ D (* (- 1) J)) 2)
     (>= (+ D (* (- 1) H)) 1)
     (>= (+ D (* (- 1) G)) 3)
     (>= (+ D (* (- 1) F)) 0)
     (>= (+ D (* (- 1) B)) 0)
     (>= (+ D (* (- 1) A)) 1)
     (>= (+ D (* (- 1) I)) 1)
     (>= (+ C (* (- 1) M)) 0)
     (>= (+ C (* (- 1) K)) 0)
     (>= (+ C (* (- 1) J)) (- 1))
     (>= (+ C (* (- 1) G)) 0)
     (>= (+ B (* (- 1) K)) 3)
     (>= (+ B (* (- 1) J)) 2)
     (>= (+ B (* (- 1) I)) 1)
     (>= (+ A (* (- 1) K)) 2)
     (>= (+ A (* (- 1) J)) 1)
     (>= (+ A (* (- 1) B)) (- 1))
     (>= (+ A (* (- 1) I)) 0)
     (>= (+ (* (- 1) M) K) 0))
      )
      (lturn M A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) M) A) 1)
     (>= (+ (* (- 1) K) J) 1)
     (>= (+ (* (- 1) K) I) 2)
     (>= (+ (* (- 1) J) I) 1)
     (>= (+ (* (- 1) H) B) 1)
     (>= (+ (* (- 1) H) A) 0)
     (>= (+ (* (- 1) G) M) 0)
     (>= (+ (* (- 1) G) K) 0)
     (>= (+ (* (- 1) G) J) 1)
     (>= (+ (* (- 1) G) H) 1)
     (>= (+ (* (- 1) G) B) 3)
     (>= (+ (* (- 1) G) A) 1)
     (>= (+ (* (- 1) G) I) 2)
     (>= (+ (* (- 1) E) F) 0)
     (>= (+ (* (- 1) E) D) 0)
     (>= (+ (* (- 1) E) B) 0)
     (>= (+ (* (- 1) D) F) 0)
     (>= (+ (* (- 1) C) M) 0)
     (>= (+ (* (- 1) C) K) 0)
     (>= (+ (* (- 1) C) J) 1)
     (>= (+ (* (- 1) C) H) 1)
     (>= (+ (* (- 1) C) G) 0)
     (>= (+ (* (- 1) C) F) 3)
     (>= (+ (* (- 1) C) E) 3)
     (>= (+ (* (- 1) C) D) 3)
     (>= (+ (* (- 1) C) B) 3)
     (>= (+ (* (- 1) C) A) 1)
     (>= (+ (* (- 1) C) I) 2)
     (>= (+ (* (- 1) A) B) 1)
     (>= (+ H (* (- 1) M)) 1)
     (>= (+ H (* (- 1) A)) 0)
     (>= (+ F (* (- 1) M)) 2)
     (>= (+ F (* (- 1) K)) 3)
     (>= (+ F (* (- 1) J)) 2)
     (>= (+ F (* (- 1) H)) 1)
     (>= (+ F (* (- 1) G)) 3)
     (>= (+ F (* (- 1) B)) 0)
     (>= (+ F (* (- 1) A)) 1)
     (>= (+ F (* (- 1) I)) 1)
     (>= (+ E (* (- 1) M)) 2)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E (* (- 1) J)) 2)
     (>= (+ E (* (- 1) H)) 1)
     (>= (+ E (* (- 1) G)) 3)
     (>= (+ E (* (- 1) B)) 0)
     (>= (+ E (* (- 1) A)) 1)
     (>= (+ E (* (- 1) I)) 1)
     (>= (+ D (* (- 1) M)) 2)
     (>= (+ D (* (- 1) K)) 3)
     (>= (+ D (* (- 1) J)) 2)
     (>= (+ D (* (- 1) H)) 1)
     (>= (+ D (* (- 1) G)) 3)
     (>= (+ D (* (- 1) F)) 0)
     (>= (+ D (* (- 1) B)) 0)
     (>= (+ D (* (- 1) A)) 1)
     (>= (+ D (* (- 1) I)) 1)
     (>= (+ C (* (- 1) G)) 0)
     (>= (+ B (* (- 1) K)) 3)
     (>= (+ B (* (- 1) J)) 2)
     (>= (+ B (* (- 1) I)) 1)
     (>= (+ (* (- 1) M) B) 2))
      )
      (lturn M A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) M) J) 1)
     (>= (+ (* (- 1) M) B) 2)
     (>= (+ (* (- 1) M) A) 1)
     (>= (+ (* (- 1) M) I) 2)
     (>= (+ (* (- 1) K) J) 1)
     (>= (+ (* (- 1) K) I) 2)
     (>= (+ (* (- 1) J) I) 1)
     (>= (+ (* (- 1) H) J) 0)
     (>= (+ (* (- 1) H) B) 1)
     (>= (+ (* (- 1) H) A) 0)
     (>= (+ (* (- 1) H) I) 1)
     (>= (+ (* (- 1) G) M) 0)
     (>= (+ (* (- 1) G) K) 0)
     (>= (+ (* (- 1) G) J) 1)
     (>= (+ (* (- 1) G) H) 1)
     (>= (+ (* (- 1) G) B) 2)
     (>= (+ (* (- 1) G) A) 1)
     (>= (+ (* (- 1) G) I) 2)
     (>= (+ (* (- 1) E) B) 0)
     (>= (+ (* (- 1) E) I) 0)
     (>= (+ (* (- 1) D) F) 0)
     (>= (+ (* (- 1) C) M) 0)
     (>= (+ (* (- 1) C) K) 0)
     (>= (+ (* (- 1) C) J) 1)
     (>= (+ (* (- 1) C) H) 1)
     (>= (+ (* (- 1) C) G) 0)
     (>= (+ (* (- 1) C) F) 3)
     (>= (+ (* (- 1) C) E) 2)
     (>= (+ (* (- 1) C) D) 3)
     (>= (+ (* (- 1) C) B) 2)
     (>= (+ (* (- 1) C) A) 1)
     (>= (+ (* (- 1) C) I) 2)
     (>= (+ (* (- 1) B) I) 0)
     (>= (+ (* (- 1) A) J) 0)
     (>= (+ (* (- 1) A) B) 1)
     (>= (+ (* (- 1) A) I) 1)
     (>= (+ M (* (- 1) K)) 0)
     (>= (+ H (* (- 1) M)) 1)
     (>= (+ H (* (- 1) K)) 1)
     (>= (+ H (* (- 1) J)) 0)
     (>= (+ H (* (- 1) A)) 0)
     (>= (+ F (* (- 1) M)) 2)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F (* (- 1) J)) 1)
     (>= (+ F (* (- 1) H)) 1)
     (>= (+ F (* (- 1) G)) 3)
     (>= (+ F (* (- 1) A)) 1)
     (>= (+ E (* (- 1) M)) 2)
     (>= (+ E (* (- 1) K)) 2)
     (>= (+ E (* (- 1) J)) 1)
     (>= (+ E (* (- 1) H)) 1)
     (>= (+ E (* (- 1) G)) 2)
     (>= (+ E (* (- 1) B)) 0)
     (>= (+ E (* (- 1) A)) 1)
     (>= (+ E (* (- 1) I)) 0)
     (>= (+ D (* (- 1) M)) 2)
     (>= (+ D (* (- 1) K)) 2)
     (>= (+ D (* (- 1) J)) 1)
     (>= (+ D (* (- 1) H)) 1)
     (>= (+ D (* (- 1) G)) 3)
     (>= (+ D (* (- 1) F)) 0)
     (>= (+ D (* (- 1) A)) 1)
     (>= (+ C (* (- 1) G)) 0)
     (>= (+ B (* (- 1) K)) 2)
     (>= (+ B (* (- 1) J)) 1)
     (>= (+ B (* (- 1) I)) 0)
     (>= (+ A (* (- 1) K)) 1)
     (>= (+ A (* (- 1) J)) 0)
     (>= (+ (* (- 1) M) K) 0))
      )
      (step_lturn M A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (lturn M A B C D E F G H I J K L)
        true
      )
      (combined_lturn M A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (step_lturn M A B C D E F G H I J K L)
        true
      )
      (combined_lturn M A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (step_lturn J A B C D E F G H L K M I)
        true
      )
      (lturn J A B C D E F G H M L K I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (combined_lturn J A B C D E F G H v_13 K M I)
        (step_lturn J A B C D E F G H v_14 L K I)
        (combined_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      (lturn J A B C D E F G H M L K I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (combined_lturn J A B C D E F G H v_13 K M I)
        (combined_lturn J A B C D E F G H v_14 L K I)
        (step_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      (lturn J A B C D E F G H M L K I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (step_lturn J A B C D E F G H v_13 K M I)
        (combined_lturn J A B C D E F G H v_14 L K I)
        (combined_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      (lturn J A B C D E F G H M L K I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (step_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H N M L I)
        (step_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (step_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (step_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (step_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (step_lturn J A B C D E F G H L K M I)
        true
      )
      (step_lturn J A B C D E F G H M L K I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (combined_lturn J A B C D E F G H v_13 K M I)
        (step_lturn J A B C D E F G H v_14 L K I)
        (combined_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      (step_lturn J A B C D E F G H M L K I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (combined_lturn J A B C D E F G H v_13 K M I)
        (combined_lturn J A B C D E F G H v_14 L K I)
        (step_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      (step_lturn J A B C D E F G H M L K I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (step_lturn J A B C D E F G H v_13 K M I)
        (combined_lturn J A B C D E F G H v_14 L K I)
        (combined_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      (step_lturn J A B C D E F G H M L K I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (step_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (step_lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H N M L I)
        (step_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (step_lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (step_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (step_lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (step_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (step_lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (step_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      (step_lturn K A B C D E F G H J M L I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (step_lturn K A B C D E F G H J L M I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (step_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H J L M I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H J L M I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (step_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H J L M I)
        (combined_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (step_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H J L M I)
        (combined_lturn K A B C D E F G H N M L I)
        (step_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (v_14 Int) (v_15 Int) (v_16 Int) ) 
    (=>
      (and
        (combined_lturn K A B C D E F G H J M v_14 I)
        (combined_lturn K A B C D E F G H J L M I)
        (step_lturn K A B C D E F G H N M L I)
        (combined_lturn K A B C D E F G H v_15 M L I)
        (combined_lturn K A B C D E F G H v_16 N M I)
        (combined_lturn K A B C D E F G H J N M I)
        (and (= v_14 K) (= v_15 K) (= v_16 K))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (combined_lturn J A B C D E F G H v_13 K M I)
        (step_lturn J A B C D E F G H M K L I)
        (combined_lturn J A B C D E F G H v_14 L K I)
        (combined_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (step_lturn J A B C D E F G H v_13 K M I)
        (combined_lturn J A B C D E F G H M K L I)
        (combined_lturn J A B C D E F G H v_14 L K I)
        (combined_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (combined_lturn J A B C D E F G H v_13 K M I)
        (combined_lturn J A B C D E F G H M K L I)
        (combined_lturn J A B C D E F G H v_14 L K I)
        (step_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (v_13 Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (combined_lturn J A B C D E F G H v_13 K M I)
        (combined_lturn J A B C D E F G H M K L I)
        (step_lturn J A B C D E F G H v_14 L K I)
        (combined_lturn J A B C D E F G H v_15 M L I)
        (and (= v_13 J) (= v_14 J) (= v_15 J))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (combined_lturn J A B C D E F G H M L K I)
        (step_lturn J A B C D E F G H M K L I)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (step_lturn J A B C D E F G H M L K I)
        (combined_lturn J A B C D E F G H M K L I)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
