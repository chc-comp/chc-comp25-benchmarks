(set-logic HORN)


(declare-fun |combined_lturn| ( Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |lturn| ( Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |step_lturn| ( Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |step_lturn__bar| ( Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |combined_lturn__bar| ( Int Int Int Int Int Int Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) I) H) 1)
     (>= (+ (* (- 1) I) G) 4)
     (>= (+ (* (- 1) F) G) 1)
     (>= (+ (* (- 1) F) A) 1)
     (>= (+ (* (- 1) E) G) 0)
     (>= (+ (* (- 1) E) F) (- 1))
     (>= (+ (* (- 1) E) D) (- 1))
     (>= (+ (* (- 1) E) B) (- 2))
     (>= (+ (* (- 1) E) A) 0)
     (>= (+ (* (- 1) E) K) (- 3))
     (>= (+ (* (- 1) D) G) 1)
     (>= (+ (* (- 1) C) H) 1)
     (>= (+ (* (- 1) C) I) 0)
     (>= (+ (* (- 1) C) G) 4)
     (>= (+ (* (- 1) C) D) 3)
     (>= (+ (* (- 1) B) G) 2)
     (>= (+ (* (- 1) B) D) 1)
     (>= (+ (* (- 1) A) G) 0)
     (>= (+ (* (- 1) K) G) 3)
     (>= (+ (* (- 1) K) D) 2)
     (>= (+ (* (- 1) K) B) 1)
     (>= (+ H G) 11)
     (>= (+ I H) 7)
     (>= (+ I G) 10)
     (>= (+ F (* (- 1) H)) 2)
     (>= (+ F (* (- 1) I)) 3)
     (>= (+ F (* (- 1) D)) 0)
     (>= (+ F (* (- 1) C)) 3)
     (>= (+ F (* (- 1) B)) 1)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F H) 10)
     (>= (+ F I) 9)
     (>= (+ F G) 13)
     (>= (+ F D) 12)
     (>= (+ F C) 9)
     (>= (+ F B) 11)
     (>= (+ F A) 13)
     (>= (+ F K) 10)
     (>= (+ E (* (- 1) H)) 3)
     (>= (+ E (* (- 1) I)) 4)
     (>= (+ E (* (- 1) D)) 1)
     (>= (+ E (* (- 1) C)) 4)
     (>= (+ E (* (- 1) B)) 2)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E H) 11)
     (>= (+ E I) 10)
     (>= (+ E G) 14)
     (>= (+ E F) 13)
     (>= (+ E D) 13)
     (>= (+ E C) 10)
     (>= (+ E B) 12)
     (>= (+ E A) 14)
     (>= (+ E K) 11)
     (>= (+ D (* (- 1) H)) 2)
     (>= (+ D (* (- 1) I)) 3)
     (>= (+ D H) 10)
     (>= (+ D I) 9)
     (>= (+ D G) 13)
     (>= (+ C (* (- 1) I)) 0)
     (>= (+ C H) 7)
     (>= (+ C I) 6)
     (>= (+ C G) 10)
     (>= (+ C D) 9)
     (>= (+ B (* (- 1) H)) 1)
     (>= (+ B (* (- 1) I)) 2)
     (>= (+ B (* (- 1) D)) (- 1))
     (>= (+ B (* (- 1) C)) 2)
     (>= (+ B H) 9)
     (>= (+ B I) 8)
     (>= (+ B G) 12)
     (>= (+ B D) 11)
     (>= (+ B C) 8)
     (>= (+ A (* (- 1) H)) 3)
     (>= (+ A (* (- 1) I)) 4)
     (>= (+ A (* (- 1) G)) 0)
     (>= (+ A (* (- 1) D)) 1)
     (>= (+ A (* (- 1) C)) 4)
     (>= (+ A (* (- 1) B)) 2)
     (>= (+ A (* (- 1) K)) 3)
     (>= (+ A H) 11)
     (>= (+ A I) 10)
     (>= (+ A G) 14)
     (>= (+ A D) 13)
     (>= (+ A C) 10)
     (>= (+ A B) 12)
     (>= (+ A K) 11)
     (>= (+ K (* (- 1) H)) 0)
     (>= (+ K (* (- 1) I)) 1)
     (>= (+ K (* (- 1) D)) (- 2))
     (>= (+ K (* (- 1) C)) 1)
     (>= (+ K (* (- 1) B)) (- 1))
     (>= (+ K H) 8)
     (>= (+ K I) 7)
     (>= (+ K G) 11)
     (>= (+ K D) 10)
     (>= (+ K C) 7)
     (>= (+ K B) 9)
     (>= H 4)
     (>= I 3)
     (>= G 7)
     (>= F 6)
     (>= E 7)
     (>= D 6)
     (>= C 3)
     (>= B 5)
     (>= A 7)
     (>= K 4)
     (>= (+ (* (- 1) H) G) 3))
      )
      (lturn A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) I) H) 1)
     (>= (+ (* (- 1) I) G) 5)
     (>= (+ (* (- 1) F) G) 1)
     (>= (+ (* (- 1) F) A) 1)
     (>= (+ (* (- 1) E) G) 0)
     (>= (+ (* (- 1) E) F) (- 1))
     (>= (+ (* (- 1) E) D) (- 1))
     (>= (+ (* (- 1) E) B) (- 2))
     (>= (+ (* (- 1) E) A) 0)
     (>= (+ (* (- 1) D) G) 1)
     (>= (+ (* (- 1) C) G) 3)
     (>= (+ (* (- 1) C) D) 2)
     (>= (+ (* (- 1) B) G) 2)
     (>= (+ (* (- 1) B) D) 1)
     (>= (+ (* (- 1) A) G) 0)
     (>= (+ (* (- 1) K) G) 3)
     (>= (+ (* (- 1) K) D) 2)
     (>= (+ (* (- 1) K) B) 1)
     (>= (+ H G) 12)
     (>= (+ I H) 7)
     (>= (+ I G) 11)
     (>= (+ F (* (- 1) H)) 3)
     (>= (+ F (* (- 1) I)) 4)
     (>= (+ F (* (- 1) D)) 0)
     (>= (+ F (* (- 1) C)) 2)
     (>= (+ F (* (- 1) B)) 1)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F H) 11)
     (>= (+ F I) 10)
     (>= (+ F G) 15)
     (>= (+ F D) 14)
     (>= (+ F C) 12)
     (>= (+ F B) 13)
     (>= (+ F A) 15)
     (>= (+ F K) 11)
     (>= (+ E (* (- 1) H)) 4)
     (>= (+ E (* (- 1) I)) 5)
     (>= (+ E (* (- 1) D)) 1)
     (>= (+ E (* (- 1) C)) 3)
     (>= (+ E (* (- 1) B)) 2)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E H) 12)
     (>= (+ E I) 11)
     (>= (+ E G) 16)
     (>= (+ E F) 15)
     (>= (+ E D) 15)
     (>= (+ E C) 13)
     (>= (+ E B) 14)
     (>= (+ E A) 16)
     (>= (+ E K) 12)
     (>= (+ D (* (- 1) H)) 3)
     (>= (+ D (* (- 1) I)) 4)
     (>= (+ D H) 11)
     (>= (+ D I) 10)
     (>= (+ D G) 15)
     (>= (+ C (* (- 1) H)) 1)
     (>= (+ C (* (- 1) I)) 2)
     (>= (+ C H) 9)
     (>= (+ C I) 8)
     (>= (+ C G) 13)
     (>= (+ C D) 12)
     (>= (+ B (* (- 1) H)) 2)
     (>= (+ B (* (- 1) I)) 3)
     (>= (+ B (* (- 1) D)) (- 1))
     (>= (+ B (* (- 1) C)) 1)
     (>= (+ B H) 10)
     (>= (+ B I) 9)
     (>= (+ B G) 14)
     (>= (+ B D) 13)
     (>= (+ B C) 11)
     (>= (+ A (* (- 1) H)) 4)
     (>= (+ A (* (- 1) I)) 5)
     (>= (+ A (* (- 1) G)) 0)
     (>= (+ A (* (- 1) D)) 1)
     (>= (+ A (* (- 1) C)) 3)
     (>= (+ A (* (- 1) B)) 2)
     (>= (+ A (* (- 1) K)) 3)
     (>= (+ A H) 12)
     (>= (+ A I) 11)
     (>= (+ A G) 16)
     (>= (+ A D) 15)
     (>= (+ A C) 13)
     (>= (+ A B) 14)
     (>= (+ A K) 12)
     (>= (+ K (* (- 1) H)) 0)
     (>= (+ K (* (- 1) I)) 1)
     (>= (+ K H) 8)
     (>= (+ K I) 7)
     (>= (+ K G) 12)
     (>= (+ K D) 11)
     (>= (+ K C) 9)
     (>= (+ K B) 10)
     (>= H 4)
     (>= I 3)
     (>= G 8)
     (>= F 7)
     (>= E 8)
     (>= D 7)
     (>= C 5)
     (>= B 6)
     (>= A 8)
     (>= K 4)
     (>= (+ (* (- 1) H) G) 4))
      )
      (lturn A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) I) G) 3)
     (>= (+ (* (- 1) F) G) 1)
     (>= (+ (* (- 1) F) A) 1)
     (>= (+ (* (- 1) E) G) 0)
     (>= (+ (* (- 1) E) F) (- 1))
     (>= (+ (* (- 1) E) D) (- 1))
     (>= (+ (* (- 1) E) B) (- 2))
     (>= (+ (* (- 1) E) A) 0)
     (>= (+ (* (- 1) D) G) 1)
     (>= (+ (* (- 1) C) I) 0)
     (>= (+ (* (- 1) C) G) 3)
     (>= (+ (* (- 1) C) D) 2)
     (>= (+ (* (- 1) B) G) 2)
     (>= (+ (* (- 1) B) D) 1)
     (>= (+ (* (- 1) A) G) 0)
     (>= (+ (* (- 1) K) G) 3)
     (>= (+ (* (- 1) K) D) 2)
     (>= (+ (* (- 1) K) B) 1)
     (>= (+ H G) 9)
     (>= (+ I (* (- 1) H)) 1)
     (>= (+ I H) 6)
     (>= (+ I G) 11)
     (>= (+ F (* (- 1) H)) 3)
     (>= (+ F (* (- 1) I)) 2)
     (>= (+ F (* (- 1) D)) 0)
     (>= (+ F (* (- 1) C)) 2)
     (>= (+ F (* (- 1) B)) 1)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F H) 8)
     (>= (+ F I) 10)
     (>= (+ F G) 13)
     (>= (+ F D) 12)
     (>= (+ F C) 10)
     (>= (+ F B) 11)
     (>= (+ F A) 13)
     (>= (+ F K) 8)
     (>= (+ E (* (- 1) H)) 4)
     (>= (+ E (* (- 1) I)) 3)
     (>= (+ E (* (- 1) D)) 1)
     (>= (+ E (* (- 1) C)) 3)
     (>= (+ E (* (- 1) B)) 2)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E H) 9)
     (>= (+ E I) 11)
     (>= (+ E G) 14)
     (>= (+ E F) 13)
     (>= (+ E D) 13)
     (>= (+ E C) 11)
     (>= (+ E B) 12)
     (>= (+ E A) 14)
     (>= (+ E K) 9)
     (>= (+ D (* (- 1) H)) 3)
     (>= (+ D (* (- 1) I)) 2)
     (>= (+ D H) 8)
     (>= (+ D I) 10)
     (>= (+ D G) 13)
     (>= (+ C (* (- 1) H)) 1)
     (>= (+ C (* (- 1) I)) 0)
     (>= (+ C H) 6)
     (>= (+ C I) 8)
     (>= (+ C G) 11)
     (>= (+ C D) 10)
     (>= (+ B (* (- 1) H)) 2)
     (>= (+ B (* (- 1) I)) 1)
     (>= (+ B (* (- 1) D)) (- 1))
     (>= (+ B (* (- 1) C)) 1)
     (>= (+ B H) 7)
     (>= (+ B I) 9)
     (>= (+ B G) 12)
     (>= (+ B D) 11)
     (>= (+ B C) 9)
     (>= (+ A (* (- 1) H)) 4)
     (>= (+ A (* (- 1) I)) 3)
     (>= (+ A (* (- 1) G)) 0)
     (>= (+ A (* (- 1) D)) 1)
     (>= (+ A (* (- 1) C)) 3)
     (>= (+ A (* (- 1) B)) 2)
     (>= (+ A (* (- 1) K)) 3)
     (>= (+ A H) 9)
     (>= (+ A I) 11)
     (>= (+ A G) 14)
     (>= (+ A D) 13)
     (>= (+ A C) 11)
     (>= (+ A B) 12)
     (>= (+ A K) 9)
     (>= (+ K (* (- 1) H)) 0)
     (>= (+ K H) 4)
     (>= (+ K I) 6)
     (>= (+ K G) 9)
     (>= (+ K D) 8)
     (>= (+ K C) 6)
     (>= (+ K B) 7)
     (>= H 2)
     (>= I 4)
     (>= G 7)
     (>= F 6)
     (>= E 7)
     (>= D 6)
     (>= C 4)
     (>= B 5)
     (>= A 7)
     (>= K 2)
     (>= (+ (* (- 1) H) G) 4))
      )
      (lturn A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) I) G) 4)
     (>= (+ (* (- 1) F) G) 1)
     (>= (+ (* (- 1) F) A) 1)
     (>= (+ (* (- 1) E) G) 0)
     (>= (+ (* (- 1) E) F) (- 1))
     (>= (+ (* (- 1) E) D) (- 1))
     (>= (+ (* (- 1) E) B) (- 2))
     (>= (+ (* (- 1) E) A) 0)
     (>= (+ (* (- 1) D) G) 1)
     (>= (+ (* (- 1) C) G) 3)
     (>= (+ (* (- 1) C) D) 2)
     (>= (+ (* (- 1) B) G) 2)
     (>= (+ (* (- 1) B) D) 1)
     (>= (+ (* (- 1) A) G) 0)
     (>= (+ (* (- 1) K) G) 3)
     (>= (+ (* (- 1) K) D) 2)
     (>= (+ (* (- 1) K) B) 1)
     (>= (+ H G) 10)
     (>= (+ I (* (- 1) H)) 1)
     (>= (+ I H) 6)
     (>= (+ I G) 12)
     (>= (+ F (* (- 1) H)) 4)
     (>= (+ F (* (- 1) I)) 3)
     (>= (+ F (* (- 1) D)) 0)
     (>= (+ F (* (- 1) C)) 2)
     (>= (+ F (* (- 1) B)) 1)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F H) 9)
     (>= (+ F I) 11)
     (>= (+ F G) 15)
     (>= (+ F D) 14)
     (>= (+ F C) 12)
     (>= (+ F B) 13)
     (>= (+ F A) 15)
     (>= (+ F K) 9)
     (>= (+ E (* (- 1) H)) 5)
     (>= (+ E (* (- 1) I)) 4)
     (>= (+ E (* (- 1) D)) 1)
     (>= (+ E (* (- 1) C)) 3)
     (>= (+ E (* (- 1) B)) 2)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E H) 10)
     (>= (+ E I) 12)
     (>= (+ E G) 16)
     (>= (+ E F) 15)
     (>= (+ E D) 15)
     (>= (+ E C) 13)
     (>= (+ E B) 14)
     (>= (+ E A) 16)
     (>= (+ E K) 10)
     (>= (+ D (* (- 1) H)) 4)
     (>= (+ D (* (- 1) I)) 3)
     (>= (+ D H) 9)
     (>= (+ D I) 11)
     (>= (+ D G) 15)
     (>= (+ C (* (- 1) H)) 2)
     (>= (+ C (* (- 1) I)) 1)
     (>= (+ C H) 7)
     (>= (+ C I) 9)
     (>= (+ C G) 13)
     (>= (+ C D) 12)
     (>= (+ B (* (- 1) H)) 3)
     (>= (+ B (* (- 1) I)) 2)
     (>= (+ B (* (- 1) D)) (- 1))
     (>= (+ B (* (- 1) C)) 1)
     (>= (+ B H) 8)
     (>= (+ B I) 10)
     (>= (+ B G) 14)
     (>= (+ B D) 13)
     (>= (+ B C) 11)
     (>= (+ A (* (- 1) H)) 5)
     (>= (+ A (* (- 1) I)) 4)
     (>= (+ A (* (- 1) G)) 0)
     (>= (+ A (* (- 1) D)) 1)
     (>= (+ A (* (- 1) C)) 3)
     (>= (+ A (* (- 1) B)) 2)
     (>= (+ A (* (- 1) K)) 3)
     (>= (+ A H) 10)
     (>= (+ A I) 12)
     (>= (+ A G) 16)
     (>= (+ A D) 15)
     (>= (+ A C) 13)
     (>= (+ A B) 14)
     (>= (+ A K) 10)
     (>= (+ K (* (- 1) H)) 0)
     (>= (+ K H) 4)
     (>= (+ K I) 6)
     (>= (+ K G) 10)
     (>= (+ K D) 9)
     (>= (+ K C) 7)
     (>= (+ K B) 8)
     (>= H 2)
     (>= I 4)
     (>= G 8)
     (>= F 7)
     (>= E 8)
     (>= D 7)
     (>= C 5)
     (>= B 6)
     (>= A 8)
     (>= K 2)
     (>= (+ (* (- 1) H) G) 5))
      )
      (lturn A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) I) (* (- 1) H)) (- 5))
     (>= (+ (* (- 1) I) H) (- 1))
     (>= (+ (* (- 1) I) G) 3)
     (>= (+ (* (- 1) F) G) 1)
     (>= (+ (* (- 1) F) A) 1)
     (>= (+ (* (- 1) E) G) 0)
     (>= (+ (* (- 1) E) F) (- 1))
     (>= (+ (* (- 1) E) D) (- 1))
     (>= (+ (* (- 1) E) B) (- 2))
     (>= (+ (* (- 1) E) A) 0)
     (>= (+ (* (- 1) E) K) (- 4))
     (>= (+ (* (- 1) D) G) 1)
     (>= (+ (* (- 1) C) (* (- 1) H)) (- 5))
     (>= (+ (* (- 1) C) (* (- 1) I)) (- 6))
     (>= (+ (* (- 1) C) H) (- 1))
     (>= (+ (* (- 1) C) I) 0)
     (>= (+ (* (- 1) C) G) 3)
     (>= (+ (* (- 1) C) D) 2)
     (>= (+ (* (- 1) B) G) 2)
     (>= (+ (* (- 1) B) D) 1)
     (>= (+ (* (- 1) A) G) 0)
     (>= (+ (* (- 1) K) G) 3)
     (>= (+ (* (- 1) K) D) 2)
     (>= (+ (* (- 1) K) B) 1)
     (>= (+ H G) 8)
     (>= (+ I (* (- 1) H)) 1)
     (>= (+ I H) 5)
     (>= (+ I G) 9)
     (>= (+ F (* (- 1) H)) 3)
     (>= (+ F (* (- 1) I)) 2)
     (>= (+ F (* (- 1) D)) 0)
     (>= (+ F (* (- 1) C)) 2)
     (>= (+ F (* (- 1) B)) 1)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F H) 7)
     (>= (+ F I) 8)
     (>= (+ F G) 11)
     (>= (+ F D) 10)
     (>= (+ F C) 8)
     (>= (+ F B) 9)
     (>= (+ F A) 11)
     (>= (+ F K) 7)
     (>= (+ E (* (- 1) H)) 4)
     (>= (+ E (* (- 1) I)) 3)
     (>= (+ E (* (- 1) D)) 1)
     (>= (+ E (* (- 1) C)) 3)
     (>= (+ E (* (- 1) B)) 2)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E H) 8)
     (>= (+ E I) 9)
     (>= (+ E G) 12)
     (>= (+ E F) 11)
     (>= (+ E D) 11)
     (>= (+ E C) 9)
     (>= (+ E B) 10)
     (>= (+ E A) 12)
     (>= (+ E K) 8)
     (>= (+ D (* (- 1) H)) 3)
     (>= (+ D (* (- 1) I)) 2)
     (>= (+ D H) 7)
     (>= (+ D I) 8)
     (>= (+ D G) 11)
     (>= (+ C (* (- 1) H)) 1)
     (>= (+ C (* (- 1) I)) 0)
     (>= (+ C H) 5)
     (>= (+ C I) 6)
     (>= (+ C G) 9)
     (>= (+ C D) 8)
     (>= (+ B (* (- 1) H)) 2)
     (>= (+ B (* (- 1) I)) 1)
     (>= (+ B (* (- 1) D)) (- 1))
     (>= (+ B (* (- 1) C)) 1)
     (>= (+ B H) 6)
     (>= (+ B I) 7)
     (>= (+ B G) 10)
     (>= (+ B D) 9)
     (>= (+ B C) 7)
     (>= (+ A (* (- 1) H)) 4)
     (>= (+ A (* (- 1) I)) 3)
     (>= (+ A (* (- 1) G)) 0)
     (>= (+ A (* (- 1) D)) 1)
     (>= (+ A (* (- 1) C)) 3)
     (>= (+ A (* (- 1) B)) 2)
     (>= (+ A (* (- 1) K)) 3)
     (>= (+ A H) 8)
     (>= (+ A I) 9)
     (>= (+ A G) 12)
     (>= (+ A D) 11)
     (>= (+ A C) 9)
     (>= (+ A B) 10)
     (>= (+ A K) 8)
     (>= (+ K (* (- 1) H)) 0)
     (>= (+ K (* (- 1) I)) (- 1))
     (>= (+ K (* (- 1) D)) (- 3))
     (>= (+ K (* (- 1) C)) (- 1))
     (>= (+ K (* (- 1) B)) (- 2))
     (>= (+ K H) 4)
     (>= (+ K I) 5)
     (>= (+ K G) 8)
     (>= (+ K D) 7)
     (>= (+ K C) 5)
     (>= (+ K B) 6)
     (>= H 2)
     (>= I 3)
     (>= G 6)
     (>= F 5)
     (>= E 6)
     (>= D 5)
     (>= C 3)
     (>= B 4)
     (>= A 6)
     (>= K 2)
     (<= H 2)
     (<= I 3)
     (<= C 3)
     (>= (+ (* (- 1) H) G) 4))
      )
      (lturn A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) I) (* (- 1) H)) (- 5))
     (>= (+ (* (- 1) I) H) (- 1))
     (>= (+ (* (- 1) I) G) 4)
     (>= (+ (* (- 1) F) G) 1)
     (>= (+ (* (- 1) F) A) 1)
     (>= (+ (* (- 1) E) G) 0)
     (>= (+ (* (- 1) E) F) (- 1))
     (>= (+ (* (- 1) E) D) (- 1))
     (>= (+ (* (- 1) E) B) (- 2))
     (>= (+ (* (- 1) E) A) 0)
     (>= (+ (* (- 1) D) G) 1)
     (>= (+ (* (- 1) C) G) 3)
     (>= (+ (* (- 1) C) D) 2)
     (>= (+ (* (- 1) B) G) 2)
     (>= (+ (* (- 1) B) D) 1)
     (>= (+ (* (- 1) A) G) 0)
     (>= (+ (* (- 1) K) G) 3)
     (>= (+ (* (- 1) K) D) 2)
     (>= (+ (* (- 1) K) B) 1)
     (>= (+ H G) 9)
     (>= (+ I (* (- 1) H)) 1)
     (>= (+ I H) 5)
     (>= (+ I G) 10)
     (>= (+ F (* (- 1) H)) 4)
     (>= (+ F (* (- 1) I)) 3)
     (>= (+ F (* (- 1) D)) 0)
     (>= (+ F (* (- 1) C)) 2)
     (>= (+ F (* (- 1) B)) 1)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F H) 8)
     (>= (+ F I) 9)
     (>= (+ F G) 13)
     (>= (+ F D) 12)
     (>= (+ F C) 10)
     (>= (+ F B) 11)
     (>= (+ F A) 13)
     (>= (+ F K) 8)
     (>= (+ E (* (- 1) H)) 5)
     (>= (+ E (* (- 1) I)) 4)
     (>= (+ E (* (- 1) D)) 1)
     (>= (+ E (* (- 1) C)) 3)
     (>= (+ E (* (- 1) B)) 2)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E H) 9)
     (>= (+ E I) 10)
     (>= (+ E G) 14)
     (>= (+ E F) 13)
     (>= (+ E D) 13)
     (>= (+ E C) 11)
     (>= (+ E B) 12)
     (>= (+ E A) 14)
     (>= (+ E K) 9)
     (>= (+ D (* (- 1) H)) 4)
     (>= (+ D (* (- 1) I)) 3)
     (>= (+ D H) 8)
     (>= (+ D I) 9)
     (>= (+ D G) 13)
     (>= (+ C (* (- 1) H)) 2)
     (>= (+ C (* (- 1) I)) 1)
     (>= (+ C H) 6)
     (>= (+ C I) 7)
     (>= (+ C G) 11)
     (>= (+ C D) 10)
     (>= (+ B (* (- 1) H)) 3)
     (>= (+ B (* (- 1) I)) 2)
     (>= (+ B (* (- 1) D)) (- 1))
     (>= (+ B (* (- 1) C)) 1)
     (>= (+ B H) 7)
     (>= (+ B I) 8)
     (>= (+ B G) 12)
     (>= (+ B D) 11)
     (>= (+ B C) 9)
     (>= (+ A (* (- 1) H)) 5)
     (>= (+ A (* (- 1) I)) 4)
     (>= (+ A (* (- 1) G)) 0)
     (>= (+ A (* (- 1) D)) 1)
     (>= (+ A (* (- 1) C)) 3)
     (>= (+ A (* (- 1) B)) 2)
     (>= (+ A (* (- 1) K)) 3)
     (>= (+ A H) 9)
     (>= (+ A I) 10)
     (>= (+ A G) 14)
     (>= (+ A D) 13)
     (>= (+ A C) 11)
     (>= (+ A B) 12)
     (>= (+ A K) 9)
     (>= (+ K (* (- 1) H)) 0)
     (>= (+ K (* (- 1) I)) (- 1))
     (>= (+ K H) 4)
     (>= (+ K I) 5)
     (>= (+ K G) 9)
     (>= (+ K D) 8)
     (>= (+ K C) 6)
     (>= (+ K B) 7)
     (>= H 2)
     (>= I 3)
     (>= G 7)
     (>= F 6)
     (>= E 7)
     (>= D 6)
     (>= C 4)
     (>= B 5)
     (>= A 7)
     (>= K 2)
     (<= H 2)
     (<= I 3)
     (>= (+ (* (- 1) H) G) 5))
      )
      (lturn A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (and (>= (+ (* (- 1) I) H) 1)
     (>= (+ (* (- 1) I) G) 3)
     (>= (+ (* (- 1) F) G) 1)
     (>= (+ (* (- 1) F) A) 1)
     (>= (+ (* (- 1) E) H) (- 2))
     (>= (+ (* (- 1) E) G) 0)
     (>= (+ (* (- 1) E) F) (- 1))
     (>= (+ (* (- 1) E) D) (- 1))
     (>= (+ (* (- 1) E) B) (- 2))
     (>= (+ (* (- 1) E) A) 0)
     (>= (+ (* (- 1) D) H) (- 1))
     (>= (+ (* (- 1) D) G) 1)
     (>= (+ (* (- 1) C) H) 1)
     (>= (+ (* (- 1) C) I) 0)
     (>= (+ (* (- 1) C) G) 3)
     (>= (+ (* (- 1) C) D) 2)
     (>= (+ (* (- 1) B) H) 0)
     (>= (+ (* (- 1) B) G) 2)
     (>= (+ (* (- 1) B) D) 1)
     (>= (+ (* (- 1) A) G) 0)
     (>= (+ (* (- 1) K) H) 1)
     (>= (+ (* (- 1) K) G) 3)
     (>= (+ (* (- 1) K) D) 2)
     (>= (+ (* (- 1) K) B) 1)
     (>= (+ H G) 10)
     (>= (+ I H) 7)
     (>= (+ I G) 9)
     (>= (+ F (* (- 1) H)) 1)
     (>= (+ F (* (- 1) I)) 2)
     (>= (+ F (* (- 1) D)) 0)
     (>= (+ F (* (- 1) C)) 2)
     (>= (+ F (* (- 1) B)) 1)
     (>= (+ F (* (- 1) K)) 2)
     (>= (+ F H) 9)
     (>= (+ F I) 8)
     (>= (+ F G) 11)
     (>= (+ F D) 10)
     (>= (+ F C) 8)
     (>= (+ F B) 9)
     (>= (+ F A) 11)
     (>= (+ F K) 7)
     (>= (+ E (* (- 1) H)) 2)
     (>= (+ E (* (- 1) I)) 3)
     (>= (+ E (* (- 1) D)) 1)
     (>= (+ E (* (- 1) C)) 3)
     (>= (+ E (* (- 1) B)) 2)
     (>= (+ E (* (- 1) K)) 3)
     (>= (+ E H) 10)
     (>= (+ E I) 9)
     (>= (+ E G) 12)
     (>= (+ E F) 11)
     (>= (+ E D) 11)
     (>= (+ E C) 9)
     (>= (+ E B) 10)
     (>= (+ E A) 12)
     (>= (+ E K) 8)
     (>= (+ D (* (- 1) H)) 1)
     (>= (+ D (* (- 1) I)) 2)
     (>= (+ D H) 9)
     (>= (+ D I) 8)
     (>= (+ D G) 11)
     (>= (+ C (* (- 1) I)) 0)
     (>= (+ C H) 7)
     (>= (+ C I) 6)
     (>= (+ C G) 9)
     (>= (+ C D) 8)
     (>= (+ B (* (- 1) H)) 0)
     (>= (+ B (* (- 1) I)) 1)
     (>= (+ B (* (- 1) D)) (- 1))
     (>= (+ B (* (- 1) C)) 1)
     (>= (+ B H) 8)
     (>= (+ B I) 7)
     (>= (+ B G) 10)
     (>= (+ B D) 9)
     (>= (+ B C) 7)
     (>= (+ A (* (- 1) H)) 2)
     (>= (+ A (* (- 1) I)) 3)
     (>= (+ A (* (- 1) G)) 0)
     (>= (+ A (* (- 1) D)) 1)
     (>= (+ A (* (- 1) C)) 3)
     (>= (+ A (* (- 1) B)) 2)
     (>= (+ A (* (- 1) K)) 3)
     (>= (+ A H) 10)
     (>= (+ A I) 9)
     (>= (+ A G) 12)
     (>= (+ A D) 11)
     (>= (+ A C) 9)
     (>= (+ A B) 10)
     (>= (+ A K) 8)
     (>= (+ K H) 6)
     (>= (+ K I) 5)
     (>= (+ K G) 8)
     (>= (+ K D) 7)
     (>= (+ K C) 5)
     (>= (+ K B) 6)
     (>= H 4)
     (>= I 3)
     (>= G 6)
     (>= F 5)
     (>= E 6)
     (>= D 5)
     (>= C 3)
     (>= B 4)
     (>= A 6)
     (>= K 2)
     (>= (+ (* (- 1) H) G) 2))
      )
      (step_lturn__bar A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (lturn A B C D K E F G H I J)
        true
      )
      (combined_lturn A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (step_lturn A B C D K E F G H I J)
        true
      )
      (combined_lturn A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (step_lturn__bar A B C D K E F G H I J)
        true
      )
      (combined_lturn__bar A B C D K E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F J I K G)
        true
      )
      (lturn A B C D H E F K J I G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (step_lturn__bar A B C D H E F K I J G)
        true
      )
      (lturn A B C D H E F K J I G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F I J L G)
        (step_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        true
      )
      (lturn A B C D H E F L K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F I J L G)
        (combined_lturn A B C D H E F I K J G)
        (step_lturn A B C D H E F I L K G)
        true
      )
      (lturn A B C D H E F L K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F I J L G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        true
      )
      (lturn A B C D H E F L K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (step_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F L K J G)
        (step_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (step_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (step_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F J I K G)
        true
      )
      (step_lturn A B C D H E F K J I G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (step_lturn__bar A B C D H E F K I J G)
        true
      )
      (step_lturn A B C D H E F K J I G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F I J L G)
        (step_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        true
      )
      (step_lturn A B C D H E F L K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F I J L G)
        (combined_lturn A B C D H E F I K J G)
        (step_lturn A B C D H E F I L K G)
        true
      )
      (step_lturn A B C D H E F L K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F I J L G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        true
      )
      (step_lturn A B C D H E F L K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (step_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (step_lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F L K J G)
        (step_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (step_lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (step_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (step_lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (step_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (step_lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_13 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      (step_lturn A B C D H E F v_14 K J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (step_lturn A B C D H E F v_13 J K G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_14 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F v_13 J K G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_14 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F v_13 J K G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (step_lturn A B C D H E F v_14 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F v_13 J K G)
        (combined_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (step_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_14 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F v_13 J K G)
        (combined_lturn A B C D H E F L K J G)
        (step_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_14 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F v_12 K I G)
        (combined_lturn A B C D H E F v_13 J K G)
        (step_lturn A B C D H E F L K J G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        (combined_lturn A B C D H E F v_14 L K G)
        (and (= v_12 H) (= v_13 H) (= v_14 H))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F I J L G)
        (step_lturn A B C D H E F L J K G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F I J L G)
        (combined_lturn A B C D H E F L J K G)
        (combined_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F I J L G)
        (combined_lturn A B C D H E F L J K G)
        (combined_lturn A B C D H E F I K J G)
        (step_lturn A B C D H E F I L K G)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F I J L G)
        (combined_lturn A B C D H E F L J K G)
        (step_lturn A B C D H E F I K J G)
        (combined_lturn A B C D H E F I L K G)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (combined_lturn A B C D H E F K J I G)
        (step_lturn A B C D H E F K I J G)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (step_lturn A B C D H E F K J I G)
        (combined_lturn A B C D H E F K I J G)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (combined_lturn__bar A B C D H E F K J I G)
        (step_lturn A B C D H E F K J I G)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (step_lturn__bar A B C D H E F K J I G)
        (combined_lturn A B C D H E F K J I G)
        true
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
