(set-logic HORN)


(declare-fun |REC_f_f| ( (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)
(declare-fun |REC_f_| ( (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |REC__f| ( (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) ) Bool)

(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) ) 
    (=>
      (and
        (and (= A #x00000000) (= B (bvadd #xffffffff C)))
      )
      (REC_f_ A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ A F E)
        (REC_f_ D E C)
        (and (= B (bvadd #x00000001 F))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 D))
     (not (bvsle #x00000000 (bvadd #xffffffff A))))
      )
      (REC_f_ A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ A F E)
        (REC_f_ D E C)
        (and (= B (bvadd #x00000001 F))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 D))
     (not (= B #x00000000)))
      )
      (REC_f_ A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ D E C)
        (and (= E #x00000001)
     (= B #x00000000)
     (not (= A #x00000000))
     (= A (bvadd #x00000001 D))
     (bvsle #x00000000 (bvadd #xffffffff A)))
      )
      (REC_f_ A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) ) 
    (=>
      (and
        (and (= E (bvadd #xffffffff F))
     (= D #x00000001)
     (= B (bvadd #xffffffff C))
     (= A #x00000000)
     (not (bvsle #x00000000 (bvadd #xffffffff D))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f D I H)
        (REC__f G H F)
        (and (= B (bvadd #xffffffff C))
     (= A #x00000000)
     (= E (bvadd #x00000001 I))
     (= D (bvadd #x00000001 G))
     (not (= D #x00000001))
     (not (bvsle #x00000000 (bvadd #xffffffff D))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) ) 
    (=>
      (and
        (and (= E (bvadd #xffffffff F))
     (= D #x00000001)
     (= B (bvadd #xffffffff C))
     (= A #x00000000)
     (not (= E #x00000000)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f D I H)
        (REC__f G H F)
        (and (= A #x00000000)
     (not (= E #x00000000))
     (= E (bvadd #x00000001 I))
     (= D (bvadd #x00000001 G))
     (not (= D #x00000001))
     (= B (bvadd #xffffffff C)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f G H F)
        (and (= A #x00000000)
     (= H #x00000001)
     (= E #x00000000)
     (= D (bvadd #x00000001 G))
     (= B (bvadd #xffffffff C))
     (bvsle #x00000000 (bvadd #xffffffff D)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f A I H J K F)
        (REC_f_ G H C)
        (and (not (bvsle #x00000000 (bvadd #xffffffff A)))
     (= D (bvadd #x00000001 J))
     (= B (bvadd #x00000001 I))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= K #x00000001)
     (= E #x00000000)
     (bvsle #x00000000 (bvadd #xffffffff D)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f A K I D L J)
        (REC_f_f G I C H J F)
        (and (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (not (= E #x00000000))
     (= E (bvadd #x00000001 L))
     (= D (bvadd #x00000001 H))
     (not (= D #x00000001))
     (= B (bvadd #x00000001 K))
     (not (bvsle #x00000000 (bvadd #xffffffff A))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ A I H)
        (REC_f_ G H C)
        (and (= B (bvadd #x00000001 I))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (not (= E #x00000000))
     (= E (bvadd #xffffffff F))
     (= D #x00000001)
     (not (bvsle #x00000000 (bvadd #xffffffff A))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f A K I D L J)
        (REC_f_f G I C H J F)
        (and (not (bvsle #x00000000 (bvadd #xffffffff D)))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= E (bvadd #x00000001 L))
     (= D (bvadd #x00000001 H))
     (not (= D #x00000001))
     (= B (bvadd #x00000001 K))
     (not (bvsle #x00000000 (bvadd #xffffffff A))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ A I H)
        (REC_f_ G H C)
        (and (not (bvsle #x00000000 (bvadd #xffffffff D)))
     (= B (bvadd #x00000001 I))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= E (bvadd #xffffffff F))
     (= D #x00000001)
     (not (bvsle #x00000000 (bvadd #xffffffff A))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f A I H J K F)
        (REC_f_ G H C)
        (and (= D (bvadd #x00000001 J))
     (not (= B #x00000000))
     (= B (bvadd #x00000001 I))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= K #x00000001)
     (= E #x00000000)
     (bvsle #x00000000 (bvadd #xffffffff D)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f A K I D L J)
        (REC_f_f G I C H J F)
        (and (= A (bvadd #x00000001 G))
     (not (= E #x00000000))
     (= E (bvadd #x00000001 L))
     (= D (bvadd #x00000001 H))
     (not (= D #x00000001))
     (not (= B #x00000000))
     (= B (bvadd #x00000001 K))
     (not (= A #x00000000)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ A I H)
        (REC_f_ G H C)
        (and (= B (bvadd #x00000001 I))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (not (= E #x00000000))
     (= E (bvadd #xffffffff F))
     (= D #x00000001)
     (not (= B #x00000000)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f A K I D L J)
        (REC_f_f G I C H J F)
        (and (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= E (bvadd #x00000001 L))
     (= D (bvadd #x00000001 H))
     (not (= D #x00000001))
     (not (= B #x00000000))
     (= B (bvadd #x00000001 K))
     (not (bvsle #x00000000 (bvadd #xffffffff D))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ A I H)
        (REC_f_ G H C)
        (and (not (= B #x00000000))
     (= B (bvadd #x00000001 I))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= E (bvadd #xffffffff F))
     (= D #x00000001)
     (not (bvsle #x00000000 (bvadd #xffffffff D))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f G H C I J F)
        (and (bvsle #x00000000 (bvadd #xffffffff D))
     (= B #x00000000)
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= J #x00000001)
     (= H #x00000001)
     (= E #x00000000)
     (= D (bvadd #x00000001 I))
     (bvsle #x00000000 (bvadd #xffffffff A)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f I J C D K H)
        (REC__f G H F)
        (and (= D (bvadd #x00000001 G))
     (not (= D #x00000001))
     (= B #x00000000)
     (not (= A #x00000000))
     (= A (bvadd #x00000001 I))
     (= J #x00000001)
     (not (= E #x00000000))
     (= E (bvadd #x00000001 K))
     (bvsle #x00000000 (bvadd #xffffffff A)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ G H C)
        (and (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= H #x00000001)
     (not (= E #x00000000))
     (= E (bvadd #xffffffff F))
     (= D #x00000001)
     (= B #x00000000)
     (bvsle #x00000000 (bvadd #xffffffff A)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f I J C D K H)
        (REC__f G H F)
        (and (bvsle #x00000000 (bvadd #xffffffff A))
     (= D (bvadd #x00000001 G))
     (not (= D #x00000001))
     (= B #x00000000)
     (not (= A #x00000000))
     (= A (bvadd #x00000001 I))
     (= J #x00000001)
     (= E (bvadd #x00000001 K))
     (not (bvsle #x00000000 (bvadd #xffffffff D))))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ G H C)
        (and (not (bvsle #x00000000 (bvadd #xffffffff D)))
     (not (= A #x00000000))
     (= A (bvadd #x00000001 G))
     (= H #x00000001)
     (= E (bvadd #xffffffff F))
     (= D #x00000001)
     (= B #x00000000)
     (bvsle #x00000000 (bvadd #xffffffff A)))
      )
      (REC_f_f A B C D E F)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f D E C)
        (and (= E #x00000001)
     (= B #x00000000)
     (= A (bvadd #x00000001 D))
     (bvsle #x00000000 (bvadd #xffffffff A)))
      )
      (REC__f A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f A F E)
        (REC__f D E C)
        (and (= B (bvadd #x00000001 F))
     (= A (bvadd #x00000001 D))
     (not (= A #x00000001))
     (not (= B #x00000000)))
      )
      (REC__f A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) ) 
    (=>
      (and
        (and (= B (bvadd #xffffffff C)) (= A #x00000001) (not (= B #x00000000)))
      )
      (REC__f A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f A F E)
        (REC__f D E C)
        (and (= B (bvadd #x00000001 F))
     (= A (bvadd #x00000001 D))
     (not (= A #x00000001))
     (not (bvsle #x00000000 (bvadd #xffffffff A))))
      )
      (REC__f A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) ) 
    (=>
      (and
        (and (= B (bvadd #xffffffff C))
     (= A #x00000001)
     (not (bvsle #x00000000 (bvadd #xffffffff A))))
      )
      (REC__f A B C)
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ D E A)
        (and (bvsle #x00000000 (bvadd #xffffffff C))
     (= G #x00000000)
     (= G B)
     (= F #x00000001)
     (= E #x00000001)
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C F)
     (not (= A (bvadd #x00000001 B)))
     (not (bvsle #x00000000 (bvadd #xffffffff F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f G H A C J E)
        (REC__f D E B)
        (and (bvsle #x00000000 (bvadd #xffffffff F))
     (= C (bvadd #x00000001 D))
     (not (= C #x00000001))
     (not (= A B))
     (= K #x00000000)
     (= K I)
     (= I (bvadd #x00000001 J))
     (= H #x00000001)
     (not (= F #x00000000))
     (= F (bvadd #x00000001 G))
     (= F C)
     (not (bvsle #x00000000 (bvadd #xffffffff C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ D E A)
        (and (= G #x00000000)
     (= G B)
     (= F #x00000001)
     (= E #x00000001)
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C F)
     (not (= B #x00000000))
     (not (= A (bvadd #x00000001 B)))
     (bvsle #x00000000 (bvadd #xffffffff C)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f G H A C J E)
        (REC__f D E B)
        (and (= C (bvadd #x00000001 D))
     (not (= C #x00000001))
     (not (= A B))
     (= K #x00000000)
     (= K I)
     (not (= I #x00000000))
     (= I (bvadd #x00000001 J))
     (= H #x00000001)
     (not (= F #x00000000))
     (= F (bvadd #x00000001 G))
     (= F C)
     (bvsle #x00000000 (bvadd #xffffffff F)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f D E A G H B)
        (and (bvsle #x00000000 (bvadd #xffffffff F))
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C F)
     (not (= A B))
     (= J #x00000000)
     (= J I)
     (= I #x00000000)
     (= H #x00000001)
     (= F (bvadd #x00000001 G))
     (= E #x00000001)
     (bvsle #x00000000 (bvadd #xffffffff C)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ C G E)
        (REC_f_ D E A)
        (and (not (= A (bvadd #x00000001 B)))
     (= H #x00000001)
     (not (= F #x00000000))
     (= F (bvadd #x00000001 G))
     (= F B)
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C H)
     (not (bvsle #x00000000 (bvadd #xffffffff H))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f C J G E L H)
        (REC_f_f D G A F H B)
        (and (not (= A B))
     (= E (bvadd #x00000001 F))
     (not (= E #x00000001))
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C E)
     (= K (bvadd #x00000001 L))
     (not (= I #x00000000))
     (= I (bvadd #x00000001 J))
     (= I K)
     (not (bvsle #x00000000 (bvadd #xffffffff E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ C G E)
        (REC_f_ D E A)
        (and (= H #x00000001)
     (not (= F #x00000000))
     (= F (bvadd #x00000001 G))
     (= F B)
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C H)
     (not (= B #x00000000))
     (not (= A (bvadd #x00000001 B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f C J G E L H)
        (REC_f_f D G A F H B)
        (and (= E (bvadd #x00000001 F))
     (not (= E #x00000001))
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C E)
     (not (= K #x00000000))
     (= K (bvadd #x00000001 L))
     (not (= I #x00000000))
     (= I (bvadd #x00000001 J))
     (= I K)
     (not (= A B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f C G E I J B)
        (REC_f_ D E A)
        (and (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C H)
     (not (= A B))
     (= K #x00000000)
     (= J #x00000001)
     (= H (bvadd #x00000001 I))
     (not (= F #x00000000))
     (= F (bvadd #x00000001 G))
     (= F K)
     (bvsle #x00000000 (bvadd #xffffffff H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ C G E)
        (REC_f_ D E A)
        (and (not (bvsle #x00000000 (bvadd #xffffffff C)))
     (not (= A (bvadd #x00000001 B)))
     (= H #x00000001)
     (= F (bvadd #x00000001 G))
     (= F B)
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C H)
     (not (bvsle #x00000000 (bvadd #xffffffff H))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f C J G E L H)
        (REC_f_f D G A F H B)
        (and (not (bvsle #x00000000 (bvadd #xffffffff C)))
     (not (= A B))
     (= E (bvadd #x00000001 F))
     (not (= E #x00000001))
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C E)
     (= K (bvadd #x00000001 L))
     (= I (bvadd #x00000001 J))
     (= I K)
     (not (bvsle #x00000000 (bvadd #xffffffff E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_ C G E)
        (REC_f_ D E A)
        (and (not (= A (bvadd #x00000001 B)))
     (= H #x00000001)
     (= F (bvadd #x00000001 G))
     (= F B)
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C H)
     (not (= B #x00000000))
     (not (bvsle #x00000000 (bvadd #xffffffff C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) (L (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f C J G E L H)
        (REC_f_f D G A F H B)
        (and (not (= A B))
     (= E (bvadd #x00000001 F))
     (not (= E #x00000001))
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C E)
     (not (= K #x00000000))
     (= K (bvadd #x00000001 L))
     (= I (bvadd #x00000001 J))
     (= I K)
     (not (bvsle #x00000000 (bvadd #xffffffff C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) (I (_ BitVec 32)) (J (_ BitVec 32)) (K (_ BitVec 32)) ) 
    (=>
      (and
        (REC_f_f C G E I J B)
        (REC_f_ D E A)
        (and (bvsle #x00000000 (bvadd #xffffffff H))
     (not (= C #x00000000))
     (= C (bvadd #x00000001 D))
     (= C H)
     (not (= A B))
     (= K #x00000000)
     (= J #x00000001)
     (= H (bvadd #x00000001 I))
     (= F (bvadd #x00000001 G))
     (= F K)
     (not (bvsle #x00000000 (bvadd #xffffffff C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f D E B)
        (and (= G #x00000000)
     (= G C)
     (= F #x00000000)
     (= E #x00000001)
     (= C (bvadd #x00000001 D))
     (not (= A (bvadd #xffffffff B)))
     (= A F)
     (bvsle #x00000000 (bvadd #xffffffff C)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f C G E)
        (REC__f D E B)
        (and (= A F)
     (= H #x00000000)
     (= H C)
     (not (= F #x00000000))
     (= F (bvadd #x00000001 G))
     (= C (bvadd #x00000001 D))
     (not (= C #x00000001))
     (not (= A (bvadd #xffffffff B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A (_ BitVec 32)) (B (_ BitVec 32)) (C (_ BitVec 32)) (D (_ BitVec 32)) (E (_ BitVec 32)) (F (_ BitVec 32)) (G (_ BitVec 32)) (H (_ BitVec 32)) ) 
    (=>
      (and
        (REC__f C G E)
        (REC__f D E B)
        (and (not (= A (bvadd #xffffffff B)))
     (= A F)
     (= H #x00000000)
     (= H C)
     (= F (bvadd #x00000001 G))
     (= C (bvadd #x00000001 D))
     (not (= C #x00000001))
     (not (bvsle #x00000000 (bvadd #xffffffff C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
