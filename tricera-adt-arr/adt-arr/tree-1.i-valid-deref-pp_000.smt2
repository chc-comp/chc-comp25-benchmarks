(set-logic HORN)

(declare-datatypes ((|node| 0)) (((|node|  (|node::left| Int) (|node::right| Int) (|node::parent| Int) (|node::value| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_node|  (|getnode| node)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue76| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue27| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue146_exp_exp| ( Int Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue163| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue39| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue99| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue148_exp_exp| ( Heap Int Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue115| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue151_exp_exp| ( Heap Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue162| ( Heap HeapObject ) Bool)
(declare-fun |_Glue98| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue113| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue6| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main| ( Heap Int ) Bool)
(declare-fun |inv_main_3| ( Heap Int Int ) Bool)
(declare-fun |_Glue96| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue107| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue5| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main603_9| ( Heap Int Int Int ) Bool)
(declare-fun |_Glue78| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue81| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue36| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue31| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue75| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue105| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_29| ( Heap Int Int ) Bool)
(declare-fun |_Glue56| ( Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue80| ( Heap HeapObject ) Bool)
(declare-fun |inv_main_48| ( Heap Int ) Bool)
(declare-fun |_Glue46| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue159| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue50_exp_exp| ( Int Int Int Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue72| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue110| ( Int Heap Int HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |_Glue118| ( Heap HeapObject ) Bool)
(declare-fun |_Glue61| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue13| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue135| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue142_exp_exp| ( Heap Int Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue152| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue156| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue140_exp_exp| ( Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue2| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue109| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue34| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue30| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue116| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue0| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue131| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue60| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue154| ( Int Int Heap ) Bool)
(declare-fun |_Glue102| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue143_exp_exp| ( Int Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |Inv_Heap| ( Int HeapObject ) Bool)
(declare-fun |_Glue139_exp_exp| ( Heap Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue112| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue73| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main_30| ( Heap Int Int ) Bool)
(declare-fun |_Glue165| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue157| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue155| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue66_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue68| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue137_exp_exp| ( Int Int Int Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue153| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue65| ( Int Heap HeapObject ) Bool)
(declare-fun |_Glue28| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue40| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue25| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue9| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue82| ( Int Int Int Heap ) Bool)
(declare-fun |_Glue149_exp_exp| ( Int Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue45| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue33| ( Heap HeapObject ) Bool)
(declare-fun |_Glue8| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue101| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue14| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue145_exp_exp| ( Heap Int Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue58| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue160| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue49| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue42| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue3| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue104| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue70| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue93| ( Int Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue83| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue43| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue16| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main_53| ( Heap Int ) Bool)
(declare-fun |_Glue37| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue95| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue11| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main_9| ( Heap Int Int ) Bool)
(declare-fun |inv_main_49| ( Heap Int ) Bool)
(declare-fun |inv_main615_5_43| ( Heap Int ) Bool)
(declare-fun |_Glue17| ( Int Int Heap Int HeapObject ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_3 C B E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (not (= A 0))))
      )
      (_Glue56 A C B E D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_3 E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (not (= B 0))))
      )
      (_Glue56 B E D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue56 L K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= J C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize K) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M HeapObject) (N Int) ) 
    (=>
      (and
        (_Glue56 L K J N I)
        (Inv_Heap N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize K) N))
                (HeapCtor (HeapSize K) (store (HeapContents K) N A))
                K))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize H) N))
                (select (HeapContents H) N)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= J C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 M)
       (= (O_node B) A)
       (>= (HeapSize H) N)
       (not (<= N 0))
       ((_ is O_node) I)))
      )
      (_Glue58 H L J N M)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Int) (M Heap) (N Int) ) 
    (=>
      (and
        (_Glue56 N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize M) K))
                (HeapCtor (HeapSize M) (store (HeapContents M) K A))
                M))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (select (HeapContents I) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize I) K)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue58 I N L K H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue58 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E I D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize K) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue58 K J M I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize K) I))
                (HeapCtor (HeapSize K) (store (HeapContents K) I A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E M D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue60 G J M I L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Int) (M Heap) ) 
    (=>
      (and
        (_Glue58 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize M) J))
                (HeapCtor (HeapSize M) (store (HeapContents M) J A))
                M))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue60 H L K J G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue60 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D H C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize K) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue60 L K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize L) J))
                (HeapCtor (HeapSize L) (store (HeapContents L) J B))
                L)))
  (and (= a!1 A)
       (= (|node::value| G) D)
       (= (|node::right| G) E)
       (= (|node::left| G) F)
       (= (node F E I D) C)
       (= (getnode H) G)
       (= (O_node C) B)
       ((_ is O_node) H)))
      )
      (inv_main_9 A I K)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main603_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue11 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main603_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue11 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue11 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue11 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue13 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue11 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue13 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue13 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue14 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue13 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue14 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue14 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue14 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue16 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue14 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue16 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue16 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue17 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue16 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue17 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue17 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main603_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue34 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main603_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue34 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue34 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue34 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue36 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue34 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue36 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue36 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue37 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue36 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue37 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue37 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue37 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue39 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue37 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue39 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue39 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue40 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue39 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue40 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue40 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue40 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue42 G M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue40 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue42 H M G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue42 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue43 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue42 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue43 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue43 J I H G)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D C 42) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue43 L J I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue45 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue43 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and (= a!1 H)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue45 H L G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue45 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue46 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue45 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue46 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue46 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D J C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (inv_main_30 E D G)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= 0 B)
       (= (|node::value| C) A)
       (= (|node::parent| C) B)
       (not (= A 0))
       (= (getnode F) C)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) F)))
      )
      (inv_main615_5_43 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_30 G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= 0 B)
       (= (|node::value| C) A)
       (= (|node::parent| C) B)
       (not (= A 0))
       (= (getnode D) C)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main615_5_43 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main603_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue157 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main603_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue157 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue157 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue157 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue159 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue157 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue159 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue159 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue160 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue159 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue160 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue160 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue160 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue162 H L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue160 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue162 I H)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (Inv_Heap D C)
        (inv_main_3 B A D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (>= (HeapSize B) D) (not (<= D 0)) (= a!1 C)))
      )
      (_Glue153 B D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_3 D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize D) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue153 D B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main_3 J G I)
        (_Glue153 J I H)
        (and (= 0 G)
     (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node G E D C) B)
     (= (getnode H) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H Int) (I HeapObject) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main_3 K H J)
        (_Glue153 K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J B))
                K)))
  (and (= a!1 A)
       (= 0 H)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (= (node H F E D) C)
       (= (getnode I) G)
       (= (O_node C) B)
       ((_ is O_node) I)))
      )
      (_Glue154 J H A)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C HeapObject) (D Int) ) 
    (=>
      (and
        (Inv_Heap D C)
        (_Glue154 D B A)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize A) D))
                (select (HeapContents A) D)
                defObj)))
  (and (>= (HeapSize A) D) (not (<= D 0)) (= a!1 C)))
      )
      (_Glue155 A B D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Heap) (C Int) (D Int) ) 
    (=>
      (and
        (_Glue154 D C B)
        (let ((a!1 (or (<= D 0) (not (>= (HeapSize B) D))))
      (a!2 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue155 B C D A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue155 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E I D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H node) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue155 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize L) J))
                (HeapCtor (HeapSize L) (store (HeapContents L) J C))
                L)))
  (and (= a!1 B)
       (= (|node::value| H) E)
       (= (|node::parent| H) F)
       (= (|node::left| H) G)
       (= A 1)
       (= (node G K F E) D)
       (= (getnode I) H)
       (= (O_node D) C)
       ((_ is O_node) I)))
      )
      (inv_main_9 B J A)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main615_5_43 C E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= 0 B)
       (= (|node::right| A) B)
       (not (= E B))
       (= (getnode D) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) D)))
      )
      (inv_main_48 C E)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main615_5_43 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= 0 B)
       (= (|node::right| A) B)
       (not (= D B))
       (= (getnode C) A)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_48 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_49 C E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= 0 A)
       (= (|node::right| B) A)
       (= (getnode D) B)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) D)))
      )
      (inv_main_53 C E)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_49 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= 0 A)
       (= (|node::right| B) A)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_53 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main603_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue25 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main603_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue25 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue25 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue25 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue27 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue25 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue27 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue27 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue28 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue27 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue28 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue28 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue28 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue30 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue28 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue30 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue30 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue31 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue30 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue31 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue31 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue31 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue33 G L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue31 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue33 H G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_49 B D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (= 0 A)))
      )
      (_Glue156 A B D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_49 D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue156 B D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue156 G F E D)
        (and (= (|node::right| C) B)
     (not (= B G))
     (= (getnode D) C)
     (= defObj A)
     (>= (HeapSize F) B)
     (not (<= B 0))
     ((_ is O_node) D))
      )
      (Inv_Heap B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D node) (E HeapObject) (F Int) (G Heap) (H Int) ) 
    (=>
      (and
        (_Glue156 H G F E)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize G) C))
                (HeapCtor (HeapSize G) (store (HeapContents G) C B))
                G)))
  (and (= a!1 A)
       (= (|node::right| D) C)
       (not (= C H))
       (= (getnode E) D)
       (= defObj B)
       ((_ is O_node) E)))
      )
      (inv_main_53 A F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (inv_main E G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (>= (HeapSize E) G) (not (<= G 0)) (= a!1 F)))
      )
      (_Glue66_exp_exp G D C B A E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E HeapObject) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main G F)
        (let ((a!1 (or (<= F 0) (not (>= (HeapSize G) F))))
      (a!2 (ite (and (not (<= F 0)) (>= (HeapSize G) F))
                (select (HeapContents G) F)
                defObj)))
  (and a!1 (= a!2 E)))
      )
      (_Glue66_exp_exp F D C B A G E)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue66_exp_exp N M L K J I H)
        (and (= 0 E)
     (= (|node::value| A) D)
     (= (|node::right| A) F)
     (= (|node::left| A) G)
     (not (= N E))
     (= (node G F E D) C)
     (= (getnode H) A)
     (= (O_node C) B)
     (>= (HeapSize I) N)
     (not (<= N 0))
     ((_ is O_node) H))
      )
      (Inv_Heap N B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C AllocResHeap) (D Heap) (E HeapObject) (F node) (G Int) (H Int) (I Int) (J Int) (K HeapObject) (L node) (M HeapObject) (N Heap) (O Int) (P Int) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue66_exp_exp S R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) K)))
      (a!3 (ite (and (not (<= S 0)) (>= (HeapSize N) S))
                (HeapCtor (HeapSize N) (store (HeapContents N) S E))
                N)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= 0 H)
       (= (|node::value| B) G)
       (= (|node::right| B) I)
       (= (|node::left| B) J)
       (= A (newAddr C))
       (not (= S H))
       (= (node J I H G) F)
       (= (node R Q P O) L)
       (= (getnode M) B)
       (= (O_node F) E)
       (= (O_node L) K)
       ((_ is O_node) M))))
      )
      (Inv_Heap A K)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H node) (I Int) (J Int) (K Int) (L Int) (M HeapObject) (N node) (O HeapObject) (P Heap) (Q Int) (R Int) (S Int) (T Int) (U Int) ) 
    (=>
      (and
        (_Glue66_exp_exp U T S R Q P O)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) M)))
      (a!3 (ite (and (not (<= U 0)) (>= (HeapSize P) U))
                (HeapCtor (HeapSize P) (store (HeapContents P) U G))
                P)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) E)))
  (and a!2
       (= a!3 F)
       (= (newHeap E) D)
       (= 0 J)
       (= (newAddr E) C)
       (= (|node::value| B) I)
       (= (|node::right| B) K)
       (= (|node::left| B) L)
       (= A U)
       (not (= U J))
       (= (node L K J I) H)
       (= (node T S R Q) N)
       (= (getnode O) B)
       (= (O_node H) G)
       (= (O_node N) M)
       ((_ is O_node) O))))
      )
      (inv_main603_9 D U A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main615_5_43 D F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 0 A)
       (= (|node::right| C) B)
       (not (= B A))
       (= (getnode E) C)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) E)))
      )
      (inv_main615_5_43 D B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main615_5_43 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|node::right| C) B)
       (not (= B A))
       (= (getnode D) C)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main615_5_43 F B)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (Inv_Heap D C)
        (inv_main_3 B A D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (>= (HeapSize B) D) (not (<= D 0)) (= a!1 C)))
      )
      (_Glue163 B A D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_3 D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize D) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue163 D C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue163 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= J C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize K) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue163 K J M I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (HeapCtor (HeapSize K) (store (HeapContents K) M A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= J C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue165 H J M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Int) (M Heap) ) 
    (=>
      (and
        (_Glue163 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize M) K))
                (HeapCtor (HeapSize M) (store (HeapContents M) K A))
                M))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (select (HeapContents I) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize I) K)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue165 I L K H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue165 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E I D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main603_9 D C F B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (not (= F A)) (= a!1 E) (>= (HeapSize D) F) (not (<= F 0)) (= 0 A)))
      )
      (_Glue61 D F B E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main603_9 F E D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (not (= D B)) (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue61 F D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue61 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main603_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue73 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main603_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue73 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue73 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue73 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue75 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue73 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue75 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue75 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue76 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue75 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue76 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue76 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main603_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue0 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main603_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue0 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue0 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue0 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue2 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue0 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue2 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue2 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue3 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue2 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue3 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue3 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue3 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue5 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue3 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue5 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue5 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue6 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue5 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue6 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue6 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue6 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue8 G M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue6 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue8 H M G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue8 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue9 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue8 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue9 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue9 J I H G)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D C 42) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (Inv_Heap D C)
        (inv_main_3 B A D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (>= (HeapSize B) D) (not (<= D 0)) (= a!1 C)))
      )
      (_Glue135 B D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_3 D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize D) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue135 D B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue135 J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (inv_main603_9 E D G C)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (>= (HeapSize E) G) (not (<= G 0)) (= a!1 F)))
      )
      (_Glue93 B A D E G C F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main603_9 G F E D)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize G) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj)))
  (and a!1 (= a!2 C)))
      )
      (_Glue93 B A F G E D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue93 M L K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N HeapObject) (O Int) ) 
    (=>
      (and
        (_Glue93 M L K J O I H)
        (Inv_Heap O N)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O A))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize G) O))
                (select (HeapContents G) O)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 N)
       (= (O_node B) A)
       (>= (HeapSize G) O)
       (not (<= O 0))
       ((_ is O_node) H)))
      )
      (_Glue95 G M L K O N)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue93 O N M L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue95 H O N M K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue95 G F E D C B)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|node::left| A) I)
       (= (getnode B) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_node) B)))
      )
      (_Glue96 C D E F G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue95 I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue96 E F G H I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (v_13 Int) ) 
    (=>
      (and
        (_Glue96 M L K v_13 J I H)
        (and (= v_13 L)
     (= 0 G)
     (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (not (= L G))
     (not (= M G))
     (= (node G E D C) B)
     (= (getnode H) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N HeapObject) (O Int) (v_15 Int) ) 
    (=>
      (and
        (_Glue96 O M L v_15 K J I)
        (Inv_Heap O N)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize G) O))
                (select (HeapContents G) O)
                defObj)))
  (and (= v_15 M)
       (= a!1 G)
       (= 0 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (not (= M H))
       (not (= O H))
       (= (node H E D C) B)
       (= (getnode I) F)
       (= a!2 N)
       (= (O_node B) A)
       (>= (HeapSize G) O)
       (not (<= O 0))
       ((_ is O_node) I)))
      )
      (_Glue98 G H O M L N)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (v_15 Int) ) 
    (=>
      (and
        (_Glue96 O N M v_15 L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize H) O))
                (select (HeapContents H) O)
                defObj))
      (a!3 (or (<= O 0) (not (>= (HeapSize H) O)))))
  (and (= v_15 N)
       (= a!1 H)
       (= 0 I)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (not (= N I))
       (not (= O I))
       (= (node I E D C) B)
       (= (getnode J) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue98 H I O N M G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue98 G F E D C B)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|node::left| A) I)
       (not (= D F))
       (= (getnode B) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_node) B)))
      )
      (_Glue99 D C E F G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue98 I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|node::left| C) B)
       (not (= F H))
       (= (getnode D) C)
       (= a!1 A)
       a!2
       ((_ is O_node) D)))
      )
      (_Glue99 F E G H I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue99 M L K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (not (= M J))
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O HeapObject) (P Int) ) 
    (=>
      (and
        (_Glue99 N M P L K J I)
        (Inv_Heap P O)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize G) P))
                (select (HeapContents G) P)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (not (= N H))
       (not (= N L))
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 O)
       (= (O_node B) A)
       (>= (HeapSize G) P)
       (not (<= P 0))
       ((_ is O_node) I)))
      )
      (_Glue101 G N M P O)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue99 P O N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize H) N))
                (select (HeapContents H) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize H) N)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (not (= P I))
       (not (= P M))
       (= (node E M D C) B)
       (= (getnode J) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue101 H P O N G)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue101 G F E D C)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|node::left| A) I)
       (not (= F B))
       (= (getnode C) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_node) C)))
      )
      (_Glue102 D F E G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D Int) (E HeapObject) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue101 I H G F E)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|node::left| C) B)
       (not (= H D))
       (= (getnode E) C)
       (= a!1 A)
       a!2
       ((_ is O_node) E)))
      )
      (_Glue102 F H G I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue102 M L K J I H)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (not (= L G))
     (= (node E D C 42) B)
     (= (getnode H) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H Heap) (I Int) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O HeapObject) (P Int) ) 
    (=>
      (and
        (_Glue102 P N M L K J)
        (Inv_Heap P O)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize H) P))
                (select (HeapContents H) P)
                defObj)))
  (and (= a!1 H)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (not (= N G))
       (not (= N I))
       (= (node E D C 42) B)
       (= (getnode J) F)
       (= a!2 O)
       (= (O_node B) A)
       (>= (HeapSize H) P)
       (not (<= P 0))
       ((_ is O_node) J)))
      )
      (_Glue104 H P N M O)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Heap) (J Int) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue102 P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L A))
                M))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize I) P))
                (select (HeapContents I) P)
                defObj))
      (a!3 (or (<= P 0) (not (>= (HeapSize I) P)))))
  (and (= a!1 I)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (not (= O G))
       (not (= O J))
       (= (node E D C 42) B)
       (= (getnode K) F)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) K)))
      )
      (_Glue104 I P O N H)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue104 G F E D C)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|node::left| A) I)
       (not (= E B))
       (= (getnode C) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_node) C)))
      )
      (_Glue105 E D F G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D Int) (E HeapObject) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue104 I H G F E)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|node::left| C) B)
       (not (= G D))
       (= (getnode E) C)
       (= a!1 A)
       a!2
       ((_ is O_node) E)))
      )
      (_Glue105 G F H I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue105 M L K J I H)
        (and (= (|node::value| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (not (= M G))
     (= (node E D K C) B)
     (= (getnode H) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H Int) (I node) (J Heap) (K Int) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue105 P O R N M L)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M B))
                N))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize J) R))
                (select (HeapContents J) R)
                defObj)))
  (and ((_ is O_node) Q)
       (= a!1 J)
       (= 0 O)
       (= (|node::value| G) D)
       (= (|node::right| G) E)
       (= (|node::right| I) O)
       (= (|node::left| G) F)
       (= A P)
       (not (= P H))
       (not (= P K))
       (= (node F E R D) C)
       (= (getnode L) G)
       (= (getnode Q) I)
       (= a!2 Q)
       (= (O_node C) B)
       (>= (HeapSize J) R)
       (not (<= R 0))
       ((_ is O_node) L)))
      )
      (inv_main_29 J A P)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H Int) (I node) (J HeapObject) (K Heap) (L Int) (M HeapObject) (N Int) (O Heap) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue105 R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize O) N))
                (HeapCtor (HeapSize O) (store (HeapContents O) N B))
                O))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize K) P))
                (select (HeapContents K) P)
                defObj))
      (a!3 (or (<= P 0) (not (>= (HeapSize K) P)))))
  (and ((_ is O_node) M)
       (= a!1 K)
       (= 0 Q)
       (= (|node::value| G) D)
       (= (|node::right| G) E)
       (= (|node::right| I) Q)
       (= (|node::left| G) F)
       (= A R)
       (not (= R H))
       (not (= R L))
       (= (node F E P D) C)
       (= (getnode J) I)
       (= (getnode M) G)
       (= a!2 J)
       (= (O_node C) B)
       a!3
       ((_ is O_node) J)))
      )
      (inv_main_29 K A R)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_48 C E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= 0 A)
       (= (|node::left| B) A)
       (= (getnode D) B)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) D)))
      )
      (inv_main_49 C E)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_48 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= 0 A)
       (= (|node::left| B) A)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_49 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (inv_main_9 G I F)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= a!1 H) (>= (HeapSize G) I) (not (<= I 0)) (= 0 E)))
      )
      (_Glue50_exp_exp E D C B A G I F H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E HeapObject) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main_9 I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (select (HeapContents I) H)
                defObj))
      (a!2 (or (<= H 0) (not (>= (HeapSize I) H)))))
  (and (= a!1 E) a!2 (= 0 F)))
      )
      (_Glue50_exp_exp F D C B A I H G E)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue50_exp_exp O N M L K J I H G)
        (and (= (|node::parent| A) D)
     (= (|node::right| A) E)
     (= (|node::left| A) F)
     (= (node F E D H) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I Int) (J Int) (K HeapObject) (L node) (M HeapObject) (N Int) (O Int) (P Heap) (Q Int) (R Int) (S Int) (T Int) (U Int) ) 
    (=>
      (and
        (_Glue50_exp_exp U T S R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) K)))
      (a!3 (ite (and (not (<= O 0)) (>= (HeapSize P) O))
                (HeapCtor (HeapSize P) (store (HeapContents P) O F))
                P)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= a!3 E)
       (= (newAddr D) C)
       (= (|node::parent| B) H)
       (= (|node::right| B) I)
       (= (|node::left| B) J)
       (not (= C U))
       (= A (newAddr D))
       (= (node J I H N) G)
       (= (node T S R Q) L)
       (= (getnode M) B)
       (= (O_node G) F)
       (= (O_node L) K)
       ((_ is O_node) M))))
      )
      (Inv_Heap A K)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Heap) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I Int) (J Int) (K HeapObject) (L node) (M HeapObject) (N Int) (O Int) (P Heap) (Q Int) (R Int) (S Int) (T Int) (U Int) ) 
    (=>
      (and
        (_Glue50_exp_exp U T S R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) K)))
      (a!3 (ite (and (not (<= O 0)) (>= (HeapSize P) O))
                (HeapCtor (HeapSize P) (store (HeapContents P) O F))
                P)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= a!3 E)
       (= (newHeap D) C)
       (= (newAddr D) B)
       (= (|node::parent| A) H)
       (= (|node::right| A) I)
       (= (|node::left| A) J)
       (not (= B U))
       (= (node J I H N) G)
       (= (node T S R Q) L)
       (= (getnode M) A)
       (= (O_node G) F)
       (= (O_node L) K)
       ((_ is O_node) M))))
      )
      (inv_main_3 C O B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main603_9 D C F B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (not (= F A)) (= a!1 E) (>= (HeapSize D) F) (not (<= F 0)) (= 0 A)))
      )
      (_Glue78 D F B E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main603_9 F E D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (not (= D B)) (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue78 F D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue78 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue78 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue80 G K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue78 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue80 H G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D node) (E Int) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (inv_main_30 F E H)
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj)))
  (and (= 0 B)
       (= (|node::value| D) A)
       (= (|node::parent| D) C)
       (not (= A 0))
       (not (= C B))
       (= (getnode G) D)
       (= a!1 G)
       (>= (HeapSize F) H)
       (not (<= H 0))
       ((_ is O_node) G)))
      )
      (inv_main_29 F E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D node) (E HeapObject) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main_30 H G F)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize H) F))
                (select (HeapContents H) F)
                defObj))
      (a!2 (or (<= F 0) (not (>= (HeapSize H) F)))))
  (and (= 0 B)
       (= (|node::value| D) A)
       (= (|node::parent| D) C)
       (not (= A 0))
       (not (= C B))
       (= (getnode E) D)
       (= a!1 E)
       a!2
       ((_ is O_node) E)))
      )
      (inv_main_29 H G C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_3 C B E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (not (= A 0))))
      )
      (_Glue81 A C E D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_3 E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (not (= B 0))))
      )
      (_Glue81 B E C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (inv_main_3 J G I)
        (_Glue81 K J I H)
        (and (= 0 G)
     (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node G E D C) B)
     (= (getnode H) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (inv_main_3 K H J)
        (_Glue81 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J B))
                K)))
  (and (= a!1 A)
       (= 0 H)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (= (node H F E D) C)
       (= (getnode I) G)
       (= (O_node C) B)
       ((_ is O_node) I)))
      )
      (_Glue82 J L H A)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (_Glue82 E C B A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize A) E))
                (select (HeapContents A) E)
                defObj)))
  (and (>= (HeapSize A) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue83 A B C E D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Heap) (C Int) (D Int) (E Int) ) 
    (=>
      (and
        (_Glue82 E D C B)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize B) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize B) E))
                (select (HeapContents B) E)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue83 B C D E A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue83 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize K) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue83 L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize L) I))
                (HeapCtor (HeapSize L) (store (HeapContents L) I B))
                L)))
  (and (= a!1 A)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::left| G) F)
       (= (node F K E D) C)
       (= (getnode H) G)
       (= (O_node C) B)
       ((_ is O_node) H)))
      )
      (inv_main_9 A I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_29 C B E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (= 0 A)))
      )
      (_Glue49 A B C E D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_29 E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue49 B D E C A)
    )
  )
)
(assert
  (forall ( (A node) (B node) (C HeapObject) (D Int) (E Heap) (F Int) (G Int) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue49 G F E D C)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize E) I))
                (select (HeapContents E) I)
                defObj)))
  (and ((_ is O_node) H)
       (= (|node::value| A) 42)
       (= (|node::left| B) I)
       (not (= I G))
       (= (getnode C) B)
       (= (getnode H) A)
       (= a!1 H)
       (>= (HeapSize E) I)
       (not (<= I 0))
       ((_ is O_node) C)))
      )
      (inv_main_30 E F D)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D node) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue49 I H G F E)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize G) C))
                (select (HeapContents G) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize G) C)))))
  (and ((_ is O_node) E)
       (= (|node::value| A) 42)
       (= (|node::left| D) C)
       (not (= C I))
       (= (getnode B) A)
       (= (getnode E) D)
       (= a!1 B)
       a!2
       ((_ is O_node) B)))
      )
      (inv_main_30 G H F)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main_53 D F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 0 B)
       (= (|node::parent| A) C)
       (not (= C B))
       (= (getnode E) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) E)))
      )
      (inv_main_48 D C)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Int) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_53 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 B)
       (= (|node::parent| A) C)
       (not (= C B))
       (= (getnode D) A)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main_48 F C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_29 C B E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (= 0 A)))
      )
      (_Glue65 A C D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_29 E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue65 B E A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (Inv_Heap I H)
        (inv_main603_9 G F I E)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (>= (HeapSize G) I) (not (<= I 0)) (= a!1 H)))
      )
      (_Glue137_exp_exp D C B A F G I E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E HeapObject) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main603_9 I H G F)
        (let ((a!1 (or (<= G 0) (not (>= (HeapSize I) G))))
      (a!2 (ite (and (not (<= G 0)) (>= (HeapSize I) G))
                (select (HeapContents I) G)
                defObj)))
  (and a!1 (= a!2 E)))
      )
      (_Glue137_exp_exp D C B A H I G F E)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue137_exp_exp O N M L K J I H G)
        (and (= (|node::value| A) D)
     (= (|node::parent| A) E)
     (= (|node::right| A) F)
     (= (node H F E D) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P HeapObject) (Q Int) ) 
    (=>
      (and
        (_Glue137_exp_exp O N M L K J Q I H)
        (Inv_Heap Q P)
        (let ((a!1 (ite (and (not (<= Q 0)) (>= (HeapSize J) Q))
                (HeapCtor (HeapSize J) (store (HeapContents J) Q C))
                J))
      (a!2 (ite (and (not (<= Q 0)) (>= (HeapSize B) Q))
                (select (HeapContents B) Q)
                defObj)))
  (and (= a!1 B)
       (= (|node::value| A) E)
       (= (|node::parent| A) F)
       (= (|node::right| A) G)
       (= (node I G F E) D)
       (= (getnode H) A)
       (= a!2 P)
       (= (O_node D) C)
       (>= (HeapSize B) Q)
       (not (<= Q 0))
       ((_ is O_node) H)))
      )
      (_Glue139_exp_exp B O N M L K Q P)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue137_exp_exp Q P O N M L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K D))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|node::value| A) F)
       (= (|node::parent| A) G)
       (= (|node::right| A) H)
       (= (node J H G F) E)
       (= (getnode I) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue139_exp_exp C Q P O N M K B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue139_exp_exp I H G F E D C B)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (select (HeapContents I) K)
                defObj)))
  (and (= (|node::left| A) K)
       (= (getnode B) A)
       (= a!1 J)
       (>= (HeapSize I) K)
       (not (<= K 0))
       ((_ is O_node) B)))
      )
      (_Glue140_exp_exp C D H G F E I K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue139_exp_exp K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize K) B))
                (select (HeapContents K) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize K) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue140_exp_exp E F J I H G K B A)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue140_exp_exp P O N M L K J I H)
        (and (= 0 G)
     (= (|node::value| A) D)
     (= (|node::parent| A) E)
     (= (|node::right| A) F)
     (not (= P G))
     (= (node G F E D) C)
     (= (getnode H) A)
     (= (O_node C) B)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue140_exp_exp R P O N M L K J I)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= 0 H)
       (= (|node::value| A) E)
       (= (|node::parent| A) F)
       (= (|node::right| A) G)
       (not (= R H))
       (= (node H G F E) D)
       (= (getnode I) A)
       (= a!2 Q)
       (= (O_node D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_node) I)))
      )
      (_Glue142_exp_exp B H R P O N M L Q)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I Int) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue140_exp_exp R Q P O N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K D))
                L))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize C) R))
                (select (HeapContents C) R)
                defObj))
      (a!3 (or (<= R 0) (not (>= (HeapSize C) R)))))
  (and (= a!1 C)
       (= 0 I)
       (= (|node::value| A) F)
       (= (|node::parent| A) G)
       (= (|node::right| A) H)
       (not (= R I))
       (= (node I H G F) E)
       (= (getnode J) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue142_exp_exp C I R Q P O N M B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue142_exp_exp J I H G F E D C B)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (select (HeapContents J) L)
                defObj)))
  (and (= (|node::left| A) L)
       (= (getnode B) A)
       (= a!1 K)
       (>= (HeapSize J) L)
       (not (<= L 0))
       ((_ is O_node) B)))
      )
      (_Glue143_exp_exp F E D C G H I J L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue142_exp_exp L K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize L) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue143_exp_exp H G F E I J K L B A)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue143_exp_exp P O N M L K J I H G)
        (and (= (|node::value| A) D)
     (= (|node::parent| A) E)
     (= (|node::left| A) F)
     (= (node F J E D) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue143_exp_exp P O N M L R K J I H)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|node::value| A) E)
       (= (|node::parent| A) F)
       (= (|node::left| A) G)
       (= (node G K F E) D)
       (= (getnode H) A)
       (= a!2 Q)
       (= (O_node D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_node) H)))
      )
      (_Glue145_exp_exp B P O N M L R K Q)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue143_exp_exp R Q P O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize C) M)))))
  (and (= a!1 C)
       (= (|node::value| A) F)
       (= (|node::parent| A) G)
       (= (|node::left| A) H)
       (= (node H L G F) E)
       (= (getnode I) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue145_exp_exp C R Q P O N M L B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue145_exp_exp J I H G F E D C B)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (select (HeapContents J) L)
                defObj)))
  (and (= (|node::left| A) L)
       (= (getnode B) A)
       (= a!1 K)
       (>= (HeapSize J) L)
       (not (<= L 0))
       ((_ is O_node) B)))
      )
      (_Glue146_exp_exp C D E I H G F J L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue145_exp_exp L K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize L) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue146_exp_exp E F G K J I H L B A)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue146_exp_exp P O N M L K J I H G)
        (and (= (|node::parent| A) D)
     (= (|node::right| A) E)
     (= (|node::left| A) F)
     (= (node F E D 42) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue146_exp_exp P R O N M L K J I H)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|node::parent| A) E)
       (= (|node::right| A) F)
       (= (|node::left| A) G)
       (= (node G F E 42) D)
       (= (getnode H) A)
       (= a!2 Q)
       (= (O_node D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_node) H)))
      )
      (_Glue148_exp_exp B P R O N M L K Q)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue146_exp_exp R Q P O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= Q 0)) (>= (HeapSize C) Q))
                (select (HeapContents C) Q)
                defObj))
      (a!3 (or (<= Q 0) (not (>= (HeapSize C) Q)))))
  (and (= a!1 C)
       (= (|node::parent| A) F)
       (= (|node::right| A) G)
       (= (|node::left| A) H)
       (= (node H G F 42) E)
       (= (getnode I) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue148_exp_exp C R Q P O N M L B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue148_exp_exp J I H G F E D C B)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (select (HeapContents J) L)
                defObj)))
  (and (= (|node::left| A) L)
       (= (getnode B) A)
       (= a!1 K)
       (>= (HeapSize J) L)
       (not (<= L 0))
       ((_ is O_node) B)))
      )
      (_Glue149_exp_exp F E D C G H I J L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue148_exp_exp L K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize L) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue149_exp_exp H G F E I J K L B A)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue149_exp_exp P O N M L K J I H G)
        (and (= (|node::value| A) D)
     (= (|node::right| A) E)
     (= (|node::left| A) F)
     (= (node F E K D) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue149_exp_exp P O N M L R K J I H)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|node::value| A) E)
       (= (|node::right| A) F)
       (= (|node::left| A) G)
       (= (node G F R E) D)
       (= (getnode H) A)
       (= a!2 Q)
       (= (O_node D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_node) H)))
      )
      (_Glue151_exp_exp B P O N M L K Q)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue149_exp_exp R Q P O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize C) M)))))
  (and (= a!1 C)
       (= (|node::value| A) F)
       (= (|node::right| A) G)
       (= (|node::left| A) H)
       (= (node H G M F) E)
       (= (getnode I) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue151_exp_exp C R Q P O N L B)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D node) (E HeapObject) (F node) (G HeapObject) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Heap) ) 
    (=>
      (and
        (_Glue151_exp_exp N M L K J I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize N))
                     (store (HeapContents N) (+ 1 (HeapSize N)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize N))) B)))
  (and a!2
       (= (|node::right| D) C)
       (= A (newAddr B))
       (not (= C H))
       (= (node M L K J) F)
       (= (getnode G) D)
       (= (O_node F) E)
       ((_ is O_node) G))))
      )
      (Inv_Heap A E)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C AllocResHeap) (D Int) (E node) (F HeapObject) (G node) (H HeapObject) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (_Glue151_exp_exp O N M L K J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize O))
                     (store (HeapContents O) (+ 1 (HeapSize O)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize O))) C)))
  (and a!2
       (= (newHeap C) B)
       (= (newAddr C) A)
       (= (|node::right| E) D)
       (not (= D I))
       (= (node N M L K) G)
       (= (getnode H) E)
       (= (O_node G) F)
       ((_ is O_node) H))))
      )
      (inv_main603_9 B J D A)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main_29 D C F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 0 A)
       (= (|node::left| B) A)
       (= (getnode E) B)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) E)))
      )
      (inv_main_30 D C F)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_29 F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= 0 A)
       (= (|node::left| B) A)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_30 F E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (Inv_Heap D C)
        (inv_main_3 B A D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (>= (HeapSize B) D) (not (<= D 0)) (= a!1 C)))
      )
      (_Glue68 B A D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_3 D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize D) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue68 D C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue68 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= J C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize K) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue68 K J M I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (HeapCtor (HeapSize K) (store (HeapContents K) M A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= J C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue70 H J M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Int) (M Heap) ) 
    (=>
      (and
        (_Glue68 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize M) K))
                (HeapCtor (HeapSize M) (store (HeapContents M) K A))
                M))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (select (HeapContents I) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize I) K)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue70 I L K H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue70 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E I D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue70 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue72 G L I K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue70 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize L) J))
                (HeapCtor (HeapSize L) (store (HeapContents L) J A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue72 H K J G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue72 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D H C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H node) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue72 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K C))
                L)))
  (and (= a!1 B)
       (= (|node::value| H) E)
       (= (|node::right| H) F)
       (= (|node::left| H) G)
       (= A 1)
       (= (node G F J E) D)
       (= (getnode I) H)
       (= (O_node D) C)
       ((_ is O_node) I)))
      )
      (inv_main_9 B J A)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) ) 
    (=>
      (and
        (and (= 0 B) (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A))
      )
      (inv_main A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E)
       (= 0 B)
       (= (newAddr D) C)
       (= A (newAddr D))
       (not (= C B))
       (= (O_node G) F)
       a!2)))
      )
      (Inv_Heap A F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D AllocResHeap) (E Heap) (F HeapObject) (G node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E)
       (= (newHeap D) C)
       (= 0 A)
       (= (newAddr D) B)
       (not (= B A))
       (= (O_node G) F)
       a!2)))
      )
      (inv_main_3 C A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (Inv_Heap D C)
        (inv_main_9 B D A)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (>= (HeapSize B) D) (not (<= D 0)) (= a!1 C)))
      )
      (_Glue131 B D A C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_9 D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize D) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue131 D C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue131 J I H G)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D C H) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue131 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J B))
                K)))
  (and (= a!1 A)
       (= (|node::parent| G) D)
       (= (|node::right| G) E)
       (= (|node::left| G) F)
       (= (node F E D I) C)
       (= (getnode H) G)
       (= (O_node C) B)
       ((_ is O_node) H)))
      )
      (inv_main A J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main603_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue107 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main603_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue107 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue107 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue107 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue109 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue107 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue109 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue109 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue110 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue109 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue110 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue110 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue110 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue112 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue110 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue112 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue112 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue113 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue112 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue113 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue113 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue113 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue115 G M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue113 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue115 H M G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue115 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue116 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue115 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue116 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue116 J I H G)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D C 42) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue116 L J I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue118 G K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue116 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and (= a!1 H)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue118 H G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_48 B D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (= 0 A)))
      )
      (_Glue152 A B D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_48 D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue152 B D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue152 G F E D)
        (and (= (|node::left| C) B)
     (not (= B G))
     (= (getnode D) C)
     (= defObj A)
     (>= (HeapSize F) B)
     (not (<= B 0))
     ((_ is O_node) D))
      )
      (Inv_Heap B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D node) (E HeapObject) (F Int) (G Heap) (H Int) ) 
    (=>
      (and
        (_Glue152 H G F E)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize G) C))
                (HeapCtor (HeapSize G) (store (HeapContents G) C B))
                G)))
  (and (= a!1 A)
       (= (|node::left| D) C)
       (not (= C H))
       (= (getnode E) D)
       (= defObj B)
       ((_ is O_node) E)))
      )
      (inv_main_49 A F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main603_9 C B E A)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (not ((_ is O_node) D))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main603_9 E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue17 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (not ((_ is O_node) L))
       (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue17 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue46 L J I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D L C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue46 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D L C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_9 B D A)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_node) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_9 D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_30 B A D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_node) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_30 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue162 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_node) D))
       (= (|node::left| A) E)
       (= (getnode B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue162 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_29 B A D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_node) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_29 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue33 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_node) D))
       (= (|node::left| A) E)
       (= (getnode B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue33 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main615_5_43 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main615_5_43 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_3 B A D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_node) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_3 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue165 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue165 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize L) J))
                (HeapCtor (HeapSize L) (store (HeapContents L) J A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue61 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue61 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue76 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (not ((_ is O_node) L))
       (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue76 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and ((_ is O_node) J)
       (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) H))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue9 L J I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 G)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue9 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue135 J L I)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_node) I)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue135 L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (select (HeapContents I) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize I) K)))))
  (and ((_ is O_node) J)
       (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) H))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main_49 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_49 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue80 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_node) D))
       (= (|node::left| A) E)
       (= (getnode B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue80 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main_53 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_53 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main_48 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_48 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D Int) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue65 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize C) F))
                (select (HeapContents C) F)
                defObj)))
  (and (not ((_ is O_node) E))
       (= (|node::left| A) F)
       (not (= F D))
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize C) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) (F Int) ) 
    (=>
      (and
        (_Glue65 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (not (= B F))
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue118 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_node) D))
       (= (|node::left| A) E)
       (= (getnode B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue118 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
