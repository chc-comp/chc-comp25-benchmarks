(set-logic HORN)

(declare-datatypes ((|node| 0)) (((|node|  (|node::h| Int) (|node::n| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_node|  (|getnode| node)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |Inv_Heap_exp_exp| ( Int Int Int ) Bool)
(declare-fun |_Glue1| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_16| ( Heap Int ) Bool)
(declare-fun |_Glue4| ( Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_4| ( Heap Int Int Int ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |_Glue9_exp_exp| ( Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue7| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue2_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main554_5| ( Heap Int ) Bool)
(declare-fun |_Glue6| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main551_5| ( Heap Int ) Bool)
(declare-fun |inv_main_9| ( Heap Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Heap) (F Int) (G Int) (H Int) (v_8 Int) ) 
    (=>
      (and
        (inv_main_4 E v_8 H D)
        (Inv_Heap_exp_exp H G F)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize E) H))
                (select (HeapContents E) H)
                defObj)))
  (and (= 0 v_8)
       (= a!1 B)
       (= (O_node C) B)
       (>= (HeapSize E) H)
       (not (<= H 0))
       (= (node G F) C)))
      )
      (_Glue1 A D E H B)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C Int) (D Int) (E Heap) (v_5 Int) ) 
    (=>
      (and
        (inv_main_4 E v_5 D C)
        (let ((a!1 (or (<= D 0) (not (>= (HeapSize E) D))))
      (a!2 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj)))
  (and (= 0 v_5) a!1 (= a!2 B)))
      )
      (_Glue1 A C E D B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (v_7 Int) ) 
    (=>
      (and
        (_Glue1 G v_7 F E D)
        (and (= v_7 G)
     (= (|node::n| C) B)
     (= A 3)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E node) (F HeapObject) (G Int) (H Heap) (I Int) (v_9 Int) ) 
    (=>
      (and
        (_Glue1 I v_9 H G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (HeapCtor (HeapSize H) (store (HeapContents H) G B))
                H)))
  (and (= v_9 I)
       (= a!1 A)
       (= (|node::n| E) D)
       (= (node 3 D) C)
       (= (getnode F) E)
       (= (O_node C) B)
       ((_ is O_node) F)))
      )
      (inv_main554_5 A I)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Heap) (D Int) (E Int) (v_5 Int) ) 
    (=>
      (and
        (inv_main554_5 C E)
        (Inv_Heap_exp_exp E v_5 D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= 2 v_5)
       (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize C) E)
       (not (<= E 0))
       (= (node 2 D) B)))
      )
      (inv_main554_5 C D)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main554_5 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= (|node::n| B) A)
       (= (|node::h| B) 2)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main554_5 E A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E node) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (inv_main_4 H G K F)
        (Inv_Heap_exp_exp K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj)))
  (and (= (node J I) E)
       (= a!1 D)
       (= (O_node E) D)
       (>= (HeapSize H) K)
       (not (<= K 0))
       (= 0 C)))
      )
      (_Glue9_exp_exp C B A F G H K D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main_4 H G F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize H) F))
                (select (HeapContents H) F)
                defObj))
      (a!2 (or (<= F 0) (not (>= (HeapSize H) F)))))
  (and (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue9_exp_exp D B A E G H F C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue9_exp_exp K J I H G F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I HeapObject) (J node) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue9_exp_exp R Q P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L F))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= a!3 E)
       (= (newAddr D) C)
       (= (|node::n| B) H)
       (= A (newAddr D))
       (not (= C R))
       (not (= N 0))
       (= (node 1 H) G)
       (= (node Q P) J)
       (= (getnode K) B)
       (= (O_node G) F)
       (= (O_node J) I)
       ((_ is O_node) K))))
      )
      (Inv_Heap_exp_exp A Q P)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Heap) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I HeapObject) (J node) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue9_exp_exp R Q P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L F))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= a!3 E)
       (= (newHeap D) C)
       (= (newAddr D) B)
       (= (|node::n| A) H)
       (not (= B R))
       (not (= N 0))
       (= (node 1 H) G)
       (= (node Q P) J)
       (= (getnode K) A)
       (= (O_node G) F)
       (= (O_node J) I)
       ((_ is O_node) K))))
      )
      (inv_main_9 C N L O B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Heap) (F Int) (G Int) (H HeapObject) (I node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) H))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E)
       (= 0 B)
       (= (newAddr D) C)
       (= A (newAddr D))
       (not (= C B))
       (= (node G F) I)
       (= (O_node I) H)
       a!2)))
      )
      (Inv_Heap_exp_exp A G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F AllocResHeap) (G Heap) (H HeapObject) (I node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize G))
                     (store (HeapContents G) (+ 1 (HeapSize G)) H))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize G))) F)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) G)
       (= (newHeap F) E)
       (= 0 C)
       (= (newAddr F) D)
       (not (= D C))
       (= B D)
       (= (O_node I) H)
       a!2)))
      )
      (inv_main_4 E A B D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (inv_main_9 F E I D C)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize F) I)
       (not (<= I 0))
       (= (node H G) B)))
      )
      (_Glue4 I F C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (or (<= D 0) (not (>= (HeapSize F) D))))
      (a!2 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue4 D F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) (F Int) ) 
    (=>
      (and
        (_Glue4 F E D C)
        (and (= (|node::h| B) A)
     (= (getnode C) B)
     (>= (HeapSize E) F)
     (not (<= F 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp F A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Heap) (D Int) (E Int) (v_5 Int) ) 
    (=>
      (and
        (inv_main551_5 C E)
        (Inv_Heap_exp_exp E v_5 D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= 1 v_5)
       (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize C) E)
       (not (<= E 0))
       (= (node 1 D) B)))
      )
      (inv_main551_5 C D)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main551_5 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= (|node::n| B) A)
       (= (|node::h| B) 1)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main551_5 E A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Heap) (D Int) (E Int) (F Int) ) 
    (=>
      (and
        (inv_main554_5 C F)
        (Inv_Heap_exp_exp F E D)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize C) F))
                (select (HeapContents C) F)
                defObj)))
  (and (= (node E D) B)
       (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize C) F)
       (not (<= F 0))
       (not (= E 2))))
      )
      (inv_main_16 C F)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main554_5 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= (|node::h| A) B)
       (not (= B 2))
       (= (getnode C) A)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_16 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (inv_main_4 F E I D)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= a!1 B)
       (= (O_node C) B)
       (>= (HeapSize F) I)
       (not (<= I 0))
       (= (node H G) C)))
      )
      (_Glue6 A D E F I B)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_4 F E D C)
        (let ((a!1 (or (<= D 0) (not (>= (HeapSize F) D))))
      (a!2 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj)))
  (and a!1 (= a!2 B)))
      )
      (_Glue6 A C E F D B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (v_8 Int) ) 
    (=>
      (and
        (_Glue6 H v_8 G F E D)
        (and (= v_8 H)
     (= (|node::n| C) B)
     (= A 3)
     (not (= G 0))
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E node) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (v_10 Int) ) 
    (=>
      (and
        (_Glue6 J v_10 I H G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (HeapCtor (HeapSize H) (store (HeapContents H) G B))
                H)))
  (and (= v_10 J)
       (= a!1 A)
       (= (|node::n| E) D)
       (not (= I 0))
       (= (node 3 D) C)
       (= (getnode F) E)
       (= (O_node C) B)
       ((_ is O_node) F)))
      )
      (inv_main551_5 A J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Heap) (D Int) (E Int) (F Int) ) 
    (=>
      (and
        (inv_main551_5 C F)
        (Inv_Heap_exp_exp F E D)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize C) F))
                (select (HeapContents C) F)
                defObj)))
  (and (= (node E D) B)
       (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize C) F)
       (not (<= F 0))
       (not (= E 1))))
      )
      (inv_main_16 C F)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main551_5 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= (|node::h| A) B)
       (not (= B 1))
       (= (getnode C) A)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_16 E D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (inv_main_9 F E I D C)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize F) I)
       (not (<= I 0))
       (= (node H G) B)))
      )
      (_Glue7 D E I F C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (or (<= D 0) (not (>= (HeapSize F) D))))
      (a!2 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue7 C E D F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue7 H G F E D C)
        (and (= (|node::h| B) A)
     (= (getnode C) B)
     (>= (HeapSize E) F)
     (not (<= F 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp F A D)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue7 L K O J I H)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|node::h| A) E)
       (= (node E I) D)
       (= (node N M) G)
       (= (getnode H) A)
       (= a!2 F)
       (= (O_node D) C)
       (= (O_node G) F)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_node) H)))
      )
      (inv_main_4 B K M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue7 N M L K J I)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize K) L))
                (HeapCtor (HeapSize K) (store (HeapContents K) L A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and ((_ is O_node) G)
       (= a!1 H)
       (= (|node::n| F) E)
       (= (|node::h| D) C)
       (= (node C J) B)
       (= (getnode I) D)
       (= (getnode G) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (inv_main_4 H M E N)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E node) (F Int) (G Heap) (H Int) (I Int) (J Int) (v_10 Int) ) 
    (=>
      (and
        (inv_main_4 G v_10 J F)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= 0 v_10)
       (= (node I H) E)
       (= a!1 D)
       (= (O_node E) D)
       (>= (HeapSize G) J)
       (not (<= J 0))
       (= 0 C)))
      )
      (_Glue2_exp_exp C B A F G J D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) (v_7 Int) ) 
    (=>
      (and
        (inv_main_4 G v_7 F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize G) F))
                (select (HeapContents G) F)
                defObj))
      (a!2 (or (<= F 0) (not (>= (HeapSize G) F)))))
  (and (= 0 v_7) (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue2_exp_exp D B A E G F C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue2_exp_exp J I H G F E D)
        (and (= (|node::n| C) B)
     (= A 2)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I HeapObject) (J node) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue2_exp_exp Q P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L F))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= a!3 E)
       (= (newAddr D) C)
       (= (|node::n| B) H)
       (not (= C Q))
       (= A (newAddr D))
       (= (node 2 H) G)
       (= (node P O) J)
       (= (getnode K) B)
       (= (O_node G) F)
       (= (O_node J) I)
       ((_ is O_node) K))))
      )
      (Inv_Heap_exp_exp A P O)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H node) (I Int) (J HeapObject) (K node) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue2_exp_exp R Q P O N M L)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) J)))
      (a!3 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M G))
                N)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) E)))
  (and a!2
       (= a!3 F)
       (= (newHeap E) D)
       (= (newAddr E) C)
       (= (|node::n| B) I)
       (= A 0)
       (not (= C R))
       (= (node 2 I) H)
       (= (node Q P) K)
       (= (getnode L) B)
       (= (O_node H) G)
       (= (O_node K) J)
       ((_ is O_node) L))))
      )
      (inv_main_9 D A M O C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main551_5 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main554_5 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue4 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize I) J))
                (HeapCtor (HeapSize I) (store (HeapContents I) J A))
                I))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and ((_ is O_node) G)
       (= a!1 F)
       (= (|node::h| D) C)
       (= (node C H) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_4 E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) (v_4 Int) ) 
    (=>
      (and
        (inv_main_4 D v_4 C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and (= 0 v_4) (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_4 E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (not (= D 0)) (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_16 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
