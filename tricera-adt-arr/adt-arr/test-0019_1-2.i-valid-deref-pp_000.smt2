(set-logic HORN)

(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|TData| 0)) (((|TData|  (|TData::lo| Int) (|TData::hi| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_TData|  (|getTData| TData)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue24| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue5| ( Heap Int Int Heap Heap HeapObject ) Bool)
(declare-fun |_Glue6| ( Heap Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue13| ( Int Int Heap Heap HeapObject ) Bool)
(declare-fun |Inv_Heap_exp| ( Int Int ) Bool)
(declare-fun |_Glue7| ( Int Heap HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |_Glue14| ( Heap Int HeapObject ) Bool)

(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       a!2
       (= (O_Int E) D)
       (= A (newAddr B)))))
      )
      (Inv_Heap_exp A E)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Int) (G AllocResHeap) (H Heap) (I HeapObject) (J Int) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) I))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize H))) G)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!2
       a!4
       (= (AllocResHeap H F) E)
       (= (O_Int D) C)
       (= (O_Int J) I)
       (= A (newAddr G)))))
      )
      (Inv_Heap_exp A J)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Heap) (G HeapObject) (H Int) (I AllocResHeap) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize F))) I)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!2
       a!4
       (= (AllocResHeap F K) E)
       (= (AllocResHeap L J) I)
       (= (O_Int D) C)
       (= (O_Int H) G)
       (>= (HeapSize L) K)
       (not (<= K 0))
       (= A 4))))
      )
      (Inv_Heap_exp K A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Heap) (G HeapObject) (H Int) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Heap) ) 
    (=>
      (and
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J L))
                K))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!4 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) E))
      (a!5 (= (AllocResHeap a!4 (+ 1 (HeapSize F))) I)))
  (and (= a!1 N)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!3
       a!5
       (= (AllocResHeap K M) I)
       (= (AllocResHeap F J) E)
       (= (O_Int 4) L)
       (= (O_Int D) C)
       (= (O_Int H) G)
       (>= (HeapSize N) M)
       (not (<= M 0))
       (= A 8))))
      )
      (Inv_Heap_exp M A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G Int) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L Heap) (M HeapObject) (N Heap) (O HeapObject) (P Int) (Q Int) ) 
    (=>
      (and
        (Inv_Heap_exp Q P)
        (let ((a!1 (ite (and (not (<= Q 0)) (>= (HeapSize L) Q))
                (HeapCtor (HeapSize L) (store (HeapContents L) Q M))
                L))
      (a!2 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!4 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F)))
      (a!6 (ite (and (not (<= Q 0)) (>= (HeapSize N) Q))
                (select (HeapContents N) Q)
                defObj))
      (a!7 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I K))
                J)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize A))) D))
      (a!5 (= (AllocResHeap a!4 (+ 1 (HeapSize E))) H)))
  (and (= a!1 N)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!3
       a!5
       (= (AllocResHeap J Q) H)
       (= (AllocResHeap E I) D)
       (= a!6 O)
       (= (O_Int 8) M)
       (= (O_Int 4) K)
       (= (O_Int C) B)
       (= (O_Int G) F)
       (= (O_Int P) O)
       (>= (HeapSize N) Q)
       (not (<= Q 0))
       (= a!7 L))))
      )
      (_Glue5 N I Q J L O)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G Int) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L Heap) (M HeapObject) (N HeapObject) (O Int) (P Heap) ) 
    (=>
      (and
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize L) O))
                (HeapCtor (HeapSize L) (store (HeapContents L) O M))
                L))
      (a!2 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!4 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F)))
      (a!6 (ite (and (not (<= O 0)) (>= (HeapSize P) O))
                (select (HeapContents P) O)
                defObj))
      (a!7 (or (<= O 0) (not (>= (HeapSize P) O))))
      (a!8 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I K))
                J)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize A))) D))
      (a!5 (= (AllocResHeap a!4 (+ 1 (HeapSize E))) H)))
  (and (= a!1 P)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!3
       a!5
       (= (AllocResHeap E I) D)
       (= (AllocResHeap J O) H)
       (= a!6 N)
       (= (O_Int 8) M)
       (= (O_Int 4) K)
       (= (O_Int G) F)
       (= (O_Int C) B)
       a!7
       (= a!8 L))))
      )
      (_Glue5 P I O J L N)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Heap) (D Heap) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue5 F H E D C B)
        (Inv_Heap_exp H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj)))
  (and (= a!1 A)
       (= (O_Int G) A)
       (>= (HeapSize F) H)
       (not (<= H 0))
       (not ((_ is O_Int) B))))
      )
      (_Glue6 C D E H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Heap) (D Heap) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue5 G F E D C B)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize G) F))
                (select (HeapContents G) F)
                defObj))
      (a!2 (or (<= F 0) (not (>= (HeapSize G) F)))))
  (and (= a!1 A) a!2 (not ((_ is O_Int) B))))
      )
      (_Glue6 C D E F A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Int) (D Heap) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue6 E D G C B)
        (Inv_Heap_exp G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= a!1 A)
       (= (O_Int F) A)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_Int) B)))
      )
      (_Glue7 C D A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Int) (D Int) (E Heap) (F Heap) ) 
    (=>
      (and
        (_Glue6 F E D C B)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= a!1 A) a!2 ((_ is O_Int) B)))
      )
      (_Glue7 C E A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       a!2
       (= (O_Int E) D)
       (= A (newAddr B)))))
      )
      (Inv_Heap_exp A E)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Int) (G AllocResHeap) (H Heap) (I HeapObject) (J Int) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) I))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize H))) G)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!2
       a!4
       (= (AllocResHeap H F) E)
       (= (O_Int D) C)
       (= (O_Int J) I)
       (= A (newAddr G)))))
      )
      (Inv_Heap_exp A J)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Heap) (G HeapObject) (H Int) (I AllocResHeap) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize F))) I)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!2
       a!4
       (= (AllocResHeap F K) E)
       (= (AllocResHeap L J) I)
       (= (O_Int D) C)
       (= (O_Int H) G)
       (>= (HeapSize L) K)
       (not (<= K 0))
       (= A 4))))
      )
      (Inv_Heap_exp K A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Heap) (G HeapObject) (H Int) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Heap) ) 
    (=>
      (and
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J L))
                K))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!4 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) E))
      (a!5 (= (AllocResHeap a!4 (+ 1 (HeapSize F))) I)))
  (and (= a!1 N)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!3
       a!5
       (= (AllocResHeap K M) I)
       (= (AllocResHeap F J) E)
       (= (O_Int 4) L)
       (= (O_Int D) C)
       (= (O_Int H) G)
       (>= (HeapSize N) M)
       (not (<= M 0))
       (= A 8))))
      )
      (Inv_Heap_exp M A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G Int) (H AllocResHeap) (I Heap) (J HeapObject) (K Int) (L Heap) (M HeapObject) (N Heap) (O HeapObject) (P Int) (Q Int) ) 
    (=>
      (and
        (Inv_Heap_exp Q P)
        (let ((a!1 (ite (and (not (<= Q 0)) (>= (HeapSize I) Q))
                (HeapCtor (HeapSize I) (store (HeapContents I) Q J))
                I))
      (a!2 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!4 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F)))
      (a!6 (ite (and (not (<= Q 0)) (>= (HeapSize N) Q))
                (select (HeapContents N) Q)
                defObj))
      (a!7 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K M))
                L)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize A))) D))
      (a!5 (= (AllocResHeap a!4 (+ 1 (HeapSize E))) H)))
  (and (= a!1 L)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!3
       a!5
       (= (AllocResHeap E Q) D)
       (= (AllocResHeap I K) H)
       (= a!6 O)
       (= (O_Int 8) M)
       (= (O_Int 4) J)
       (= (O_Int C) B)
       (= (O_Int G) F)
       (= (O_Int P) O)
       (>= (HeapSize N) Q)
       (not (<= Q 0))
       (= a!7 N))))
      )
      (_Glue13 Q K I L O)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G Int) (H AllocResHeap) (I Heap) (J HeapObject) (K Int) (L Heap) (M HeapObject) (N HeapObject) (O Int) (P Heap) ) 
    (=>
      (and
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize I) O))
                (HeapCtor (HeapSize I) (store (HeapContents I) O J))
                I))
      (a!2 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!4 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F)))
      (a!6 (ite (and (not (<= O 0)) (>= (HeapSize P) O))
                (select (HeapContents P) O)
                defObj))
      (a!7 (or (<= O 0) (not (>= (HeapSize P) O))))
      (a!8 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K M))
                L)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize A))) D))
      (a!5 (= (AllocResHeap a!4 (+ 1 (HeapSize E))) H)))
  (and (= a!1 L)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!3
       a!5
       (= (AllocResHeap E O) D)
       (= (AllocResHeap I K) H)
       (= a!6 N)
       (= (O_Int 8) M)
       (= (O_Int 4) J)
       (= (O_Int G) F)
       (= (O_Int C) B)
       a!7
       (= a!8 P))))
      )
      (_Glue13 O K I L N)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Heap) (D Heap) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue13 E G D C B)
        (Inv_Heap_exp G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize C) G))
                (select (HeapContents C) G)
                defObj)))
  (and (= a!1 A)
       (= (O_Int F) A)
       (>= (HeapSize C) G)
       (not (<= G 0))
       (not ((_ is O_Int) B))))
      )
      (_Glue14 D E A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Heap) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue13 F E D C B)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize C) E)))))
  (and (= a!1 A) a!2 (not ((_ is O_Int) B))))
      )
      (_Glue14 D F A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       a!2
       (= (O_Int E) D)
       (= A (newAddr B)))))
      )
      (Inv_Heap_exp A E)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Int) (G AllocResHeap) (H Heap) (I HeapObject) (J Int) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) I))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize H))) G)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!2
       a!4
       (= (AllocResHeap H F) E)
       (= (O_Int D) C)
       (= (O_Int J) I)
       (= A (newAddr G)))))
      )
      (Inv_Heap_exp A J)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Heap) (G HeapObject) (H Int) (I AllocResHeap) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize F))) I)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!2
       a!4
       (= (AllocResHeap F K) E)
       (= (AllocResHeap L J) I)
       (= (O_Int D) C)
       (= (O_Int H) G)
       (>= (HeapSize L) K)
       (not (<= K 0))
       (= A 4))))
      )
      (Inv_Heap_exp K A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G Int) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L Heap) (M HeapObject) (N Int) (O Int) ) 
    (=>
      (and
        (Inv_Heap_exp O N)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!3 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F)))
      (a!5 (ite (and (not (<= O 0)) (>= (HeapSize L) O))
                (select (HeapContents L) O)
                defObj))
      (a!6 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I K))
                J)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize A))) D))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize E))) H)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!2
       a!4
       (= (AllocResHeap J O) H)
       (= (AllocResHeap E I) D)
       (= a!5 M)
       (= (O_Int 4) K)
       (= (O_Int C) B)
       (= (O_Int G) F)
       (= (O_Int N) M)
       (>= (HeapSize L) O)
       (not (<= O 0))
       (= a!6 L))))
      )
      (_Glue24 J I M)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G Int) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L HeapObject) (M Int) (N Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!3 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F)))
      (a!5 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (select (HeapContents N) M)
                defObj))
      (a!6 (or (<= M 0) (not (>= (HeapSize N) M))))
      (a!7 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I K))
                J)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize A))) D))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize E))) H)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!2
       a!4
       (= (AllocResHeap E I) D)
       (= (AllocResHeap J M) H)
       (= a!5 L)
       (= (O_Int 4) K)
       (= (O_Int G) F)
       (= (O_Int C) B)
       a!6
       (= a!7 N))))
      )
      (_Glue24 J I L)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       a!2
       (= (O_Int E) D)
       (= A (newAddr B)))))
      )
      (Inv_Heap_exp A E)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (E AllocResHeap) (F Int) (G AllocResHeap) (H Heap) (I HeapObject) (J Int) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) I))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize H))) G)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       a!2
       a!4
       (= (AllocResHeap H F) E)
       (= (O_Int D) C)
       (= (O_Int J) I)
       (= A (newAddr G)))))
      )
      (Inv_Heap_exp A J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Heap) (D Int) (E Int) ) 
    (=>
      (and
        (_Glue7 E C B)
        (Inv_Heap_exp E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 A)
       (= (O_Int D) A)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_Int) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Heap) (D Int) ) 
    (=>
      (and
        (_Glue7 D C B)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize C) D))
                (select (HeapContents C) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize C) D)))))
  (and ((_ is O_Int) B) (= a!1 A) a!2 ((_ is O_Int) A)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Heap) (D Int) (E Int) ) 
    (=>
      (and
        (_Glue14 C E B)
        (Inv_Heap_exp E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 A)
       (= (O_Int D) A)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_Int) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Int) (D Heap) ) 
    (=>
      (and
        (_Glue14 D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and ((_ is O_Int) B) (= a!1 A) a!2 ((_ is O_Int) A)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Heap) (D Int) (E Int) ) 
    (=>
      (and
        (_Glue24 C E B)
        (Inv_Heap_exp E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 A)
       (= (O_Int D) A)
       (>= (HeapSize C) E)
       (not (<= E 0))
       (not ((_ is O_Int) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B HeapObject) (C Int) (D Heap) ) 
    (=>
      (and
        (_Glue24 D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and (not ((_ is O_Int) B)) (= a!1 A) a!2 ((_ is O_Int) A)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G Int) (H AllocResHeap) (I Int) (J HeapObject) (K Int) (L Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!3 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F)))
      (a!5 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (select (HeapContents L) K)
                defObj))
      (a!6 (or (<= K 0) (not (>= (HeapSize L) K)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize A))) D))
      (a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize E))) H)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!2
       a!4
       (= (AllocResHeap E K) D)
       (= (AllocResHeap L I) H)
       (= a!5 J)
       (= (O_Int G) F)
       (= (O_Int C) B)
       a!6
       (not ((_ is O_Int) J)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
