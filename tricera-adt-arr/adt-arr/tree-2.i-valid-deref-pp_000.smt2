(set-logic HORN)

(declare-datatypes ((|node| 0)) (((|node|  (|node::left| Int) (|node::right| Int) (|node::parent| Int) (|node::value| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_node|  (|getnode| node)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue20| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue42| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue147_exp_exp| ( Int Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue146_exp_exp| ( Heap Int Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue129| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue98| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue117| ( Heap HeapObject ) Bool)
(declare-fun |_Glue143_exp_exp| ( Heap Int Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue23| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue90| ( Int Heap HeapObject ) Bool)
(declare-fun |inv_main_26| ( Heap Int Int ) Bool)
(declare-fun |_Glue67| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue104| ( Heap HeapObject ) Bool)
(declare-fun |_Glue150_exp_exp| ( Int Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue114| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue133| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |inv_main595_9| ( Heap Int Int ) Bool)
(declare-fun |_Glue64| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue109| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue45| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue77| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue149_exp_exp| ( Heap Int Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue72| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue93| ( Heap Int Int HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |_Glue50| ( Int Int Int Heap ) Bool)
(declare-fun |inv_main_27| ( Heap Int Int ) Bool)
(declare-fun |_Glue13| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue156| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue138_exp_exp| ( Int Int Int Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue115| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue126| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue96| ( Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_46| ( Heap Int ) Bool)
(declare-fun |_Glue49| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue75| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue27| ( Int Heap HeapObject ) Bool)
(declare-fun |_Glue141_exp_exp| ( Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue118| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue102| ( Int Heap Int HeapObject ) Bool)
(declare-fun |Inv_Heap| ( Int HeapObject ) Bool)
(declare-fun |_Glue47| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue95| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue33| ( Int Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue120| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue31| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue36| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue131| ( Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue111| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue155| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue19| ( Heap Int HeapObject ) Bool)
(declare-fun |inv_main_50| ( Heap Int ) Bool)
(declare-fun |inv_main600_9| ( Heap Int Int Int ) Bool)
(declare-fun |_Glue66| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue101| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue41| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue140_exp_exp| ( Heap Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue70| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue136| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue29| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue25| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue44| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue124| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue51| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue108| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue14| ( Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main586_5| ( Heap Int ) Bool)
(declare-fun |_Glue153| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue112| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue144_exp_exp| ( Int Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main612_5_40| ( Heap Int ) Bool)
(declare-fun |_Glue158| ( Heap HeapObject ) Bool)
(declare-fun |_Glue78| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue22| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue152_exp_exp| ( Heap Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue121| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue16| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue38| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue69| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue39| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_45| ( Heap Int ) Bool)
(declare-fun |_Glue135| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue35| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue11| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue123| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue74| ( Heap HeapObject ) Bool)
(declare-fun |_Glue127| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue17| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue99| ( Int Int Heap Int HeapObject ) Bool)

(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main586_5 F E)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) C))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) B)))
  (and a!2 (= (O_node D) C) (= A (newAddr B)))))
      )
      (Inv_Heap A C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D Heap) (E Int) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (inv_main586_5 F E)
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize D) H))
                (select (HeapContents D) H)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) B))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize F))) A)))
  (and (= (AllocResHeap D H) A)
       (= a!1 G)
       (= (O_node C) B)
       (>= (HeapSize D) H)
       (not (<= H 0))
       a!3)))
      )
      (_Glue29 E H D G)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main586_5 H G)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E))))
      (a!3 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) B))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize H))) A)))
  (and (= (AllocResHeap F E) A) (= a!1 D) (= (O_node C) B) a!2 a!4)))
      )
      (_Glue29 G E F D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue29 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= J C))
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize I) J)
     (not (<= J 0))
     ((_ is O_node) H))
      )
      (Inv_Heap J A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue29 K M J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize J) M))
                (HeapCtor (HeapSize J) (store (HeapContents J) M A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= K C))
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue31 H K M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue29 M L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize K) L))
                (HeapCtor (HeapSize K) (store (HeapContents K) L A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize I) L))
                (select (HeapContents I) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize I) L)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L C))
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue31 I M L H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue31 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E I D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main_50 D F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 0 B)
       (= (|node::parent| A) C)
       (not (= C B))
       (= (getnode E) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) E)))
      )
      (inv_main_45 D C)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Int) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_50 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 B)
       (= (|node::parent| A) C)
       (not (= C B))
       (= (getnode D) A)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main_45 F C)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main586_5 F E)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) C))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) B)))
  (and a!2 (= (O_node D) C) (= A (newAddr B)))))
      )
      (Inv_Heap A C)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E Heap) (F Int) (G Heap) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (inv_main586_5 G F)
        (inv_main586_5 I H)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize E) K))
                (select (HeapContents E) K)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) B)))
  (and (= (AllocResHeap E K) B)
       (= a!1 J)
       (= (O_node D) C)
       (>= (HeapSize E) K)
       (not (<= K 0))
       a!3)))
      )
      (_Glue49 A K E J)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E HeapObject) (F Int) (G Heap) (H Int) (I Heap) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main586_5 I H)
        (inv_main586_5 K J)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize G) F))
                (select (HeapContents G) F)
                defObj))
      (a!2 (or (<= F 0) (not (>= (HeapSize G) F))))
      (a!3 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize K))) B)))
  (and (= (AllocResHeap G F) B) (= a!1 E) (= (O_node D) C) a!2 a!4)))
      )
      (_Glue49 A F G E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H Heap) (I HeapObject) (J Heap) (K Int) (L Int) ) 
    (=>
      (and
        (inv_main586_5 H G)
        (_Glue49 L K J I)
        (and (= 0 G)
     (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (not (= K G))
     (= (node G E D C) B)
     (= (getnode I) F)
     (= (O_node B) A)
     (>= (HeapSize J) K)
     (not (<= K 0))
     ((_ is O_node) I))
      )
      (Inv_Heap K A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H Int) (I Heap) (J HeapObject) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (inv_main586_5 I H)
        (_Glue49 M L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize K) L))
                (HeapCtor (HeapSize K) (store (HeapContents K) L B))
                K)))
  (and (= a!1 A)
       (= 0 H)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L H))
       (= (node H F E D) C)
       (= (getnode J) G)
       (= (O_node C) B)
       ((_ is O_node) J)))
      )
      (_Glue50 L M H A)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) (C Int) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (_Glue50 E C B A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize A) E))
                (select (HeapContents A) E)
                defObj)))
  (and (>= (HeapSize A) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue51 A B C E D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Heap) (C Int) (D Int) (E Int) ) 
    (=>
      (and
        (_Glue50 E D C B)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize B) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize B) E))
                (select (HeapContents B) E)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue51 B C D E A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue51 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize K) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue51 L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize L) I))
                (HeapCtor (HeapSize L) (store (HeapContents L) I B))
                L)))
  (and (= a!1 A)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::left| G) F)
       (= (node F K E D) C)
       (= (getnode H) G)
       (= (O_node C) B)
       ((_ is O_node) H)))
      )
      (inv_main595_9 A I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (inv_main_27 E D G)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= 0 B)
       (= (|node::value| C) A)
       (= (|node::parent| C) B)
       (not (= A 0))
       (= (getnode F) C)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) F)))
      )
      (inv_main612_5_40 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_27 G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= 0 B)
       (= (|node::value| C) A)
       (= (|node::parent| C) B)
       (not (= A 0))
       (= (getnode D) C)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main612_5_40 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main600_9 D C F B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (not (= F A)) (= a!1 E) (>= (HeapSize D) F) (not (<= F 0)) (= 0 A)))
      )
      (_Glue136 D F B E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main600_9 F E D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (not (= D B)) (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue136 F D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue136 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main586_5 F E)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) C))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) B)))
  (and a!2 (= (O_node D) C) (= A (newAddr B)))))
      )
      (Inv_Heap A C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D Heap) (E Int) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (inv_main586_5 F E)
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize D) H))
                (select (HeapContents D) H)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) B))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize F))) A)))
  (and (= (AllocResHeap D H) A)
       (= a!1 G)
       (= (O_node C) B)
       (>= (HeapSize D) H)
       (not (<= H 0))
       a!3)))
      )
      (_Glue90 H D G)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main586_5 H G)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E))))
      (a!3 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) B))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize H))) A)))
  (and (= (AllocResHeap F E) A) (= a!1 D) (= (O_node C) B) a!2 a!4)))
      )
      (_Glue90 E F D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue90 J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= J C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize I) J)
     (not (<= J 0))
     ((_ is O_node) H))
      )
      (Inv_Heap J A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_26 C B E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (= 0 A)))
      )
      (_Glue129 A B C E D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_26 E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue129 B D E C A)
    )
  )
)
(assert
  (forall ( (A node) (B node) (C HeapObject) (D Int) (E Heap) (F Int) (G Int) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue129 G F E D C)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize E) I))
                (select (HeapContents E) I)
                defObj)))
  (and ((_ is O_node) H)
       (= (|node::value| A) 42)
       (= (|node::left| B) I)
       (not (= I G))
       (= (getnode C) B)
       (= (getnode H) A)
       (= a!1 H)
       (>= (HeapSize E) I)
       (not (<= I 0))
       ((_ is O_node) C)))
      )
      (inv_main_27 E F D)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D node) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue129 I H G F E)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize G) C))
                (select (HeapContents G) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize G) C)))))
  (and ((_ is O_node) E)
       (= (|node::value| A) 42)
       (= (|node::left| D) C)
       (not (= C I))
       (= (getnode B) A)
       (= (getnode E) D)
       (= a!1 B)
       a!2
       ((_ is O_node) B)))
      )
      (inv_main_27 G H F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main600_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue11 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main600_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue11 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue11 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue11 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue13 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue11 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue13 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue13 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue14 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue13 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue14 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue14 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue14 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue16 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue14 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue16 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue16 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue17 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue16 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue17 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue17 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue17 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue19 G M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue17 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue19 H M G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue19 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue20 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue19 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue20 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue20 J I H G)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D C 42) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue20 L J I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue22 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue20 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and (= a!1 H)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue22 H L G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue22 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue23 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue22 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue23 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue23 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D J C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main586_5 F E)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) C))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) B)))
  (and a!2 (= (O_node D) C) (= A (newAddr B)))))
      )
      (Inv_Heap A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main612_5_40 D F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 0 A)
       (= (|node::right| C) B)
       (not (= B A))
       (= (getnode E) C)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) E)))
      )
      (inv_main612_5_40 D B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main612_5_40 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|node::right| C) B)
       (not (= B A))
       (= (getnode D) C)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main612_5_40 F B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_46 C E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= 0 A)
       (= (|node::right| B) A)
       (= (getnode D) B)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) D)))
      )
      (inv_main_50 C E)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_46 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= 0 A)
       (= (|node::right| B) A)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_50 E D)
    )
  )
)
(assert
  (forall ( (A Heap) (B Int) ) 
    (=>
      (and
        (and (= 0 B) (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A))
      )
      (inv_main586_5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_26 C B E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (= 0 A)))
      )
      (_Glue27 A C D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_26 E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue27 B E A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main600_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue75 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main600_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue75 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue75 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue75 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue77 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue75 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue77 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue77 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue78 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue77 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue78 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue78 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main600_9 D C F B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (not (= F A)) (= a!1 E) (>= (HeapSize D) F) (not (<= F 0)) (= 0 A)))
      )
      (_Glue72 D F B E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main600_9 F E D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (not (= D B)) (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue72 F D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue72 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue72 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue74 G K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue72 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue74 H G)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main586_5 F E)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) C))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) B)))
  (and a!2 (= (O_node D) C) (= A (newAddr B)))))
      )
      (Inv_Heap A C)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E Heap) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (inv_main586_5 G F)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize E) I))
                (select (HeapContents E) I)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize G))
                     (store (HeapContents G) (+ 1 (HeapSize G)) C))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize G))) B)))
  (and (= (AllocResHeap E I) B)
       (= a!1 H)
       (= (O_node D) C)
       (>= (HeapSize E) I)
       (not (<= I 0))
       a!3)))
      )
      (_Glue131 F A I E H)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E HeapObject) (F Int) (G Heap) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main586_5 I H)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize G) F))
                (select (HeapContents G) F)
                defObj))
      (a!2 (or (<= F 0) (not (>= (HeapSize G) F))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) B)))
  (and (= (AllocResHeap G F) B) (= a!1 E) (= (O_node D) C) a!2 a!4)))
      )
      (_Glue131 H A F G E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue131 L K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= J C))
     (not (= L C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize I) J)
     (not (<= J 0))
     ((_ is O_node) H))
      )
      (Inv_Heap J A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Heap) (K Int) (L Int) (M HeapObject) (N Int) ) 
    (=>
      (and
        (_Glue131 L K N J I)
        (Inv_Heap N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize J) N))
                (HeapCtor (HeapSize J) (store (HeapContents J) N A))
                J))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize H) N))
                (select (HeapContents H) N)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L C))
       (not (= N C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 M)
       (= (O_node B) A)
       (>= (HeapSize H) N)
       (not (<= N 0))
       ((_ is O_node) I)))
      )
      (_Glue133 H L K N M)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue131 N M L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize K) L))
                (HeapCtor (HeapSize K) (store (HeapContents K) L A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize I) L))
                (select (HeapContents I) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize I) L)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L C))
       (not (= N C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue133 I N M L H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue133 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize K) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue133 K M J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize K) I))
                (HeapCtor (HeapSize K) (store (HeapContents K) I A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E M D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue135 G M J I L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Int) (M Heap) ) 
    (=>
      (and
        (_Glue133 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize M) J))
                (HeapCtor (HeapSize M) (store (HeapContents M) J A))
                M))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue135 H L K J G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue135 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D H C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize K) J)
     (not (<= J 0))
     ((_ is O_node) G))
      )
      (Inv_Heap J A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue135 L K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K B))
                L)))
  (and (= a!1 A)
       (= (|node::value| G) D)
       (= (|node::right| G) E)
       (= (|node::left| G) F)
       (= (node F E I D) C)
       (= (getnode H) G)
       (= (O_node C) B)
       ((_ is O_node) H)))
      )
      (inv_main595_9 A I J)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main612_5_40 C E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= 0 B)
       (= (|node::right| A) B)
       (not (= E B))
       (= (getnode D) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) D)))
      )
      (inv_main_45 C E)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main612_5_40 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= 0 B)
       (= (|node::right| A) B)
       (not (= D B))
       (= (getnode C) A)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_45 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_45 C E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= 0 A)
       (= (|node::left| B) A)
       (= (getnode D) B)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) D)))
      )
      (inv_main_46 C E)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_45 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= 0 A)
       (= (|node::left| B) A)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_46 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (Inv_Heap D C)
        (inv_main595_9 B D A)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (>= (HeapSize B) D) (not (<= D 0)) (= a!1 C)))
      )
      (_Glue108 B D A C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main595_9 D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize D) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue108 D C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue108 J I H G)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D C H) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue108 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J B))
                K)))
  (and (= a!1 A)
       (= (|node::parent| G) D)
       (= (|node::right| G) E)
       (= (|node::left| G) F)
       (= (node F E D I) C)
       (= (getnode H) G)
       (= (O_node C) B)
       ((_ is O_node) H)))
      )
      (inv_main586_5 A J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main600_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue118 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main600_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue118 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue118 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue118 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue120 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue118 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue120 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue120 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue121 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue120 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue121 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue121 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue121 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue123 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue121 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue123 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue123 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue124 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue123 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue124 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue124 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue124 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue126 G M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue124 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue126 H M G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue126 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue127 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue126 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue127 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue127 J I H G)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D C 42) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D node) (E Int) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (inv_main_27 F E H)
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj)))
  (and (= 0 B)
       (= (|node::value| D) A)
       (= (|node::parent| D) C)
       (not (= C B))
       (not (= A 0))
       (= (getnode G) D)
       (= a!1 G)
       (>= (HeapSize F) H)
       (not (<= H 0))
       ((_ is O_node) G)))
      )
      (inv_main_26 F E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D node) (E HeapObject) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main_27 H G F)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize H) F))
                (select (HeapContents H) F)
                defObj))
      (a!2 (or (<= F 0) (not (>= (HeapSize H) F)))))
  (and (= 0 B)
       (= (|node::value| D) A)
       (= (|node::parent| D) C)
       (not (= C B))
       (not (= A 0))
       (= (getnode E) D)
       (= a!1 E)
       a!2
       ((_ is O_node) E)))
      )
      (inv_main_26 H G C)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_46 B D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (= 0 A)))
      )
      (_Glue47 A B D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_46 D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue47 B D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue47 G F E D)
        (and (= (|node::right| C) B)
     (not (= B G))
     (= (getnode D) C)
     (= defObj A)
     (>= (HeapSize F) B)
     (not (<= B 0))
     ((_ is O_node) D))
      )
      (Inv_Heap B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D node) (E HeapObject) (F Int) (G Heap) (H Int) ) 
    (=>
      (and
        (_Glue47 H G F E)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize G) C))
                (HeapCtor (HeapSize G) (store (HeapContents G) C B))
                G)))
  (and (= a!1 A)
       (= (|node::right| D) C)
       (not (= C H))
       (= (getnode E) D)
       (= defObj B)
       ((_ is O_node) E)))
      )
      (inv_main_50 A F)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_45 B D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (= 0 A)))
      )
      (_Glue25 A B D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_45 D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue25 B D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue25 G F E D)
        (and (= (|node::left| C) B)
     (not (= B G))
     (= (getnode D) C)
     (= defObj A)
     (>= (HeapSize F) B)
     (not (<= B 0))
     ((_ is O_node) D))
      )
      (Inv_Heap B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D node) (E HeapObject) (F Int) (G Heap) (H Int) ) 
    (=>
      (and
        (_Glue25 H G F E)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize G) C))
                (HeapCtor (HeapSize G) (store (HeapContents G) C B))
                G)))
  (and (= a!1 A)
       (= (|node::left| D) C)
       (not (= C H))
       (= (getnode E) D)
       (= defObj B)
       ((_ is O_node) E)))
      )
      (inv_main_46 A F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (Inv_Heap I H)
        (inv_main600_9 G F I E)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (>= (HeapSize G) I) (not (<= I 0)) (= a!1 H)))
      )
      (_Glue138_exp_exp D C B A F G I E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E HeapObject) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main600_9 I H G F)
        (let ((a!1 (or (<= G 0) (not (>= (HeapSize I) G))))
      (a!2 (ite (and (not (<= G 0)) (>= (HeapSize I) G))
                (select (HeapContents I) G)
                defObj)))
  (and a!1 (= a!2 E)))
      )
      (_Glue138_exp_exp D C B A H I G F E)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue138_exp_exp O N M L K J I H G)
        (and (= (|node::value| A) D)
     (= (|node::parent| A) E)
     (= (|node::right| A) F)
     (= (node H F E D) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P HeapObject) (Q Int) ) 
    (=>
      (and
        (_Glue138_exp_exp O N M L K J Q I H)
        (Inv_Heap Q P)
        (let ((a!1 (ite (and (not (<= Q 0)) (>= (HeapSize J) Q))
                (HeapCtor (HeapSize J) (store (HeapContents J) Q C))
                J))
      (a!2 (ite (and (not (<= Q 0)) (>= (HeapSize B) Q))
                (select (HeapContents B) Q)
                defObj)))
  (and (= a!1 B)
       (= (|node::value| A) E)
       (= (|node::parent| A) F)
       (= (|node::right| A) G)
       (= (node I G F E) D)
       (= (getnode H) A)
       (= a!2 P)
       (= (O_node D) C)
       (>= (HeapSize B) Q)
       (not (<= Q 0))
       ((_ is O_node) H)))
      )
      (_Glue140_exp_exp B O N M L K Q P)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue138_exp_exp Q P O N M L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K D))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|node::value| A) F)
       (= (|node::parent| A) G)
       (= (|node::right| A) H)
       (= (node J H G F) E)
       (= (getnode I) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue140_exp_exp C Q P O N M K B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue140_exp_exp I H G F E D C B)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (select (HeapContents I) K)
                defObj)))
  (and (= (|node::left| A) K)
       (= (getnode B) A)
       (= a!1 J)
       (>= (HeapSize I) K)
       (not (<= K 0))
       ((_ is O_node) B)))
      )
      (_Glue141_exp_exp C D H G F E I K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue140_exp_exp K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize K) B))
                (select (HeapContents K) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize K) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue141_exp_exp E F J I H G K B A)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue141_exp_exp P O N M L K J I H)
        (and (= 0 G)
     (= (|node::value| A) D)
     (= (|node::parent| A) E)
     (= (|node::right| A) F)
     (not (= P G))
     (= (node G F E D) C)
     (= (getnode H) A)
     (= (O_node C) B)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue141_exp_exp R P O N M L K J I)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= 0 H)
       (= (|node::value| A) E)
       (= (|node::parent| A) F)
       (= (|node::right| A) G)
       (not (= R H))
       (= (node H G F E) D)
       (= (getnode I) A)
       (= a!2 Q)
       (= (O_node D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_node) I)))
      )
      (_Glue143_exp_exp B H R P O N M L Q)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I Int) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue141_exp_exp R Q P O N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K D))
                L))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize C) R))
                (select (HeapContents C) R)
                defObj))
      (a!3 (or (<= R 0) (not (>= (HeapSize C) R)))))
  (and (= a!1 C)
       (= 0 I)
       (= (|node::value| A) F)
       (= (|node::parent| A) G)
       (= (|node::right| A) H)
       (not (= R I))
       (= (node I H G F) E)
       (= (getnode J) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue143_exp_exp C I R Q P O N M B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue143_exp_exp J I H G F E D C B)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (select (HeapContents J) L)
                defObj)))
  (and (= (|node::left| A) L)
       (= (getnode B) A)
       (= a!1 K)
       (>= (HeapSize J) L)
       (not (<= L 0))
       ((_ is O_node) B)))
      )
      (_Glue144_exp_exp F E D C G H I J L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue143_exp_exp L K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize L) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue144_exp_exp H G F E I J K L B A)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue144_exp_exp P O N M L K J I H G)
        (and (= (|node::value| A) D)
     (= (|node::parent| A) E)
     (= (|node::left| A) F)
     (= (node F J E D) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue144_exp_exp P O N M L R K J I H)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|node::value| A) E)
       (= (|node::parent| A) F)
       (= (|node::left| A) G)
       (= (node G K F E) D)
       (= (getnode H) A)
       (= a!2 Q)
       (= (O_node D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_node) H)))
      )
      (_Glue146_exp_exp B P O N M L R K Q)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue144_exp_exp R Q P O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize C) M)))))
  (and (= a!1 C)
       (= (|node::value| A) F)
       (= (|node::parent| A) G)
       (= (|node::left| A) H)
       (= (node H L G F) E)
       (= (getnode I) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue146_exp_exp C R Q P O N M L B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue146_exp_exp J I H G F E D C B)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (select (HeapContents J) L)
                defObj)))
  (and (= (|node::left| A) L)
       (= (getnode B) A)
       (= a!1 K)
       (>= (HeapSize J) L)
       (not (<= L 0))
       ((_ is O_node) B)))
      )
      (_Glue147_exp_exp C D E I H G F J L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue146_exp_exp L K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize L) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue147_exp_exp E F G K J I H L B A)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue147_exp_exp P O N M L K J I H G)
        (and (= (|node::parent| A) D)
     (= (|node::right| A) E)
     (= (|node::left| A) F)
     (= (node F E D 42) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue147_exp_exp P R O N M L K J I H)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|node::parent| A) E)
       (= (|node::right| A) F)
       (= (|node::left| A) G)
       (= (node G F E 42) D)
       (= (getnode H) A)
       (= a!2 Q)
       (= (O_node D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_node) H)))
      )
      (_Glue149_exp_exp B P R O N M L K Q)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue147_exp_exp R Q P O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= Q 0)) (>= (HeapSize C) Q))
                (select (HeapContents C) Q)
                defObj))
      (a!3 (or (<= Q 0) (not (>= (HeapSize C) Q)))))
  (and (= a!1 C)
       (= (|node::parent| A) F)
       (= (|node::right| A) G)
       (= (|node::left| A) H)
       (= (node H G F 42) E)
       (= (getnode I) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue149_exp_exp C R Q P O N M L B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue149_exp_exp J I H G F E D C B)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (select (HeapContents J) L)
                defObj)))
  (and (= (|node::left| A) L)
       (= (getnode B) A)
       (= a!1 K)
       (>= (HeapSize J) L)
       (not (<= L 0))
       ((_ is O_node) B)))
      )
      (_Glue150_exp_exp F E D C G H I J L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue149_exp_exp L K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize L) B))
                (select (HeapContents L) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize L) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue150_exp_exp H G F E I J K L B A)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue150_exp_exp P O N M L K J I H G)
        (and (= (|node::value| A) D)
     (= (|node::right| A) E)
     (= (|node::left| A) F)
     (= (node F E K D) C)
     (= (getnode G) A)
     (= (O_node C) B)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue150_exp_exp P O N M L R K J I H)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|node::value| A) E)
       (= (|node::right| A) F)
       (= (|node::left| A) G)
       (= (node G F R E) D)
       (= (getnode H) A)
       (= a!2 Q)
       (= (O_node D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_node) H)))
      )
      (_Glue152_exp_exp B P O N M L K Q)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E node) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue150_exp_exp R Q P O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize C) M)))))
  (and (= a!1 C)
       (= (|node::value| A) F)
       (= (|node::right| A) G)
       (= (|node::left| A) H)
       (= (node H G M F) E)
       (= (getnode I) A)
       (= a!2 B)
       (= (O_node E) D)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue152_exp_exp C R Q P O N L B)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D node) (E HeapObject) (F node) (G HeapObject) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Heap) ) 
    (=>
      (and
        (_Glue152_exp_exp N M L K J I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize N))
                     (store (HeapContents N) (+ 1 (HeapSize N)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize N))) B)))
  (and (= (|node::right| D) C)
       (= A (newAddr B))
       (not (= C H))
       (= (node M L K J) F)
       (= (getnode G) D)
       a!2
       (= (O_node F) E)
       ((_ is O_node) G))))
      )
      (Inv_Heap A E)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C AllocResHeap) (D Int) (E node) (F HeapObject) (G node) (H HeapObject) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (_Glue152_exp_exp O N M L K J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize O))
                     (store (HeapContents O) (+ 1 (HeapSize O)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize O))) C)))
  (and (= (newHeap C) B)
       (= (newAddr C) A)
       (= (|node::right| E) D)
       (not (= D I))
       (= (node N M L K) G)
       (= (getnode H) E)
       a!2
       (= (O_node G) F)
       ((_ is O_node) H))))
      )
      (inv_main600_9 B J D A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C HeapObject) (D node) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main586_5 G F)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize G))
                     (store (HeapContents G) (+ 1 (HeapSize G)) C))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize G))) B)))
  (and (= A (newAddr B)) (not (= F E)) a!2 (= (O_node D) C) (= 0 E))))
      )
      (Inv_Heap A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C Int) (D AllocResHeap) (E HeapObject) (F node) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main586_5 I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) D)))
  (and (= 0 G)
       (= (newAddr D) C)
       (= A H)
       (not (= H G))
       a!2
       (= (O_node F) E)
       (= (newHeap D) B))))
      )
      (inv_main600_9 B H A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main600_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue109 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main600_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue109 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue109 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue109 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue111 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue109 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue111 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue111 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue112 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue111 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue112 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue112 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue112 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue114 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue112 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue114 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue114 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue115 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue114 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue115 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue115 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue115 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue117 G L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue115 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue117 H G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main600_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue93 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main600_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue93 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue93 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue93 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue95 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue93 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue95 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue95 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue96 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue95 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue96 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue96 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue96 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue98 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue96 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue98 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue98 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue99 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue98 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue99 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue99 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue99 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue101 G M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue99 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue101 H M G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue101 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue102 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue101 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue102 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue102 J I H G)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (= (node E D C 42) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue102 L J I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue104 G K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue102 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and (= a!1 H)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue104 H G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main600_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue153 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main600_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue153 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue153 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue153 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue155 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue153 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue155 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue155 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue156 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue155 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue156 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue156 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue156 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue158 H L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue156 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue158 I H)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main_26 D C F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 0 A)
       (= (|node::left| B) A)
       (= (getnode E) B)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) E)))
      )
      (inv_main_27 D C F)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_26 F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= 0 A)
       (= (|node::left| B) A)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_27 F E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (inv_main600_9 E D G C)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (>= (HeapSize E) G) (not (<= G 0)) (= a!1 F)))
      )
      (_Glue33 B A D E G C F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main600_9 G F E D)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize G) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj)))
  (and a!1 (= a!2 C)))
      )
      (_Glue33 B A F G E D C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue33 M L K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N HeapObject) (O Int) ) 
    (=>
      (and
        (_Glue33 M L K J O I H)
        (Inv_Heap O N)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O A))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize G) O))
                (select (HeapContents G) O)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 N)
       (= (O_node B) A)
       (>= (HeapSize G) O)
       (not (<= O 0))
       ((_ is O_node) H)))
      )
      (_Glue35 G M L K O N)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue33 O N M L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue35 H O N M K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue35 G F E D C B)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|node::left| A) I)
       (= (getnode B) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_node) B)))
      )
      (_Glue36 C D E F G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue35 I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue36 E F G H I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (v_13 Int) ) 
    (=>
      (and
        (_Glue36 M L K v_13 J I H)
        (and (= v_13 L)
     (= 0 G)
     (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (not (= L G))
     (not (= M G))
     (= (node G E D C) B)
     (= (getnode H) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N HeapObject) (O Int) (v_15 Int) ) 
    (=>
      (and
        (_Glue36 O M L v_15 K J I)
        (Inv_Heap O N)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize G) O))
                (select (HeapContents G) O)
                defObj)))
  (and (= v_15 M)
       (= a!1 G)
       (= 0 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (not (= M H))
       (not (= O H))
       (= (node H E D C) B)
       (= (getnode I) F)
       (= a!2 N)
       (= (O_node B) A)
       (>= (HeapSize G) O)
       (not (<= O 0))
       ((_ is O_node) I)))
      )
      (_Glue38 G H O M L N)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (v_15 Int) ) 
    (=>
      (and
        (_Glue36 O N M v_15 L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize H) O))
                (select (HeapContents H) O)
                defObj))
      (a!3 (or (<= O 0) (not (>= (HeapSize H) O)))))
  (and (= v_15 N)
       (= a!1 H)
       (= 0 I)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (not (= N I))
       (not (= O I))
       (= (node I E D C) B)
       (= (getnode J) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue38 H I O N M G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue38 G F E D C B)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|node::left| A) I)
       (not (= D F))
       (= (getnode B) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_node) B)))
      )
      (_Glue39 D C E F G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue38 I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|node::left| C) B)
       (not (= F H))
       (= (getnode D) C)
       (= a!1 A)
       a!2
       ((_ is O_node) D)))
      )
      (_Glue39 F E G H I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue39 M L K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (not (= M J))
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O HeapObject) (P Int) ) 
    (=>
      (and
        (_Glue39 N M P L K J I)
        (Inv_Heap P O)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize G) P))
                (select (HeapContents G) P)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (not (= N L))
       (not (= N H))
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 O)
       (= (O_node B) A)
       (>= (HeapSize G) P)
       (not (<= P 0))
       ((_ is O_node) I)))
      )
      (_Glue41 G N M P O)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue39 P O N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize H) N))
                (select (HeapContents H) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize H) N)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (not (= P I))
       (not (= P M))
       (= (node E M D C) B)
       (= (getnode J) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue41 H P O N G)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue41 G F E D C)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|node::left| A) I)
       (not (= F B))
       (= (getnode C) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_node) C)))
      )
      (_Glue42 D F E G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D Int) (E HeapObject) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue41 I H G F E)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|node::left| C) B)
       (not (= H D))
       (= (getnode E) C)
       (= a!1 A)
       a!2
       ((_ is O_node) E)))
      )
      (_Glue42 F H G I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue42 M L K J I H)
        (and (= (|node::parent| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (not (= L G))
     (= (node E D C 42) B)
     (= (getnode H) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H Heap) (I Int) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O HeapObject) (P Int) ) 
    (=>
      (and
        (_Glue42 P N M L K J)
        (Inv_Heap P O)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize H) P))
                (select (HeapContents H) P)
                defObj)))
  (and (= a!1 H)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (not (= N G))
       (not (= N I))
       (= (node E D C 42) B)
       (= (getnode J) F)
       (= a!2 O)
       (= (O_node B) A)
       (>= (HeapSize H) P)
       (not (<= P 0))
       ((_ is O_node) J)))
      )
      (_Glue44 H P N M O)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Heap) (J Int) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue42 P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L A))
                M))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize I) P))
                (select (HeapContents I) P)
                defObj))
      (a!3 (or (<= P 0) (not (>= (HeapSize I) P)))))
  (and (= a!1 I)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (not (= O G))
       (not (= O J))
       (= (node E D C 42) B)
       (= (getnode K) F)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) K)))
      )
      (_Glue44 I P O N H)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue44 G F E D C)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|node::left| A) I)
       (not (= E B))
       (= (getnode C) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_node) C)))
      )
      (_Glue45 E D F G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D Int) (E HeapObject) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue44 I H G F E)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|node::left| C) B)
       (not (= G D))
       (= (getnode E) C)
       (= a!1 A)
       a!2
       ((_ is O_node) E)))
      )
      (_Glue45 G F H I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue45 M L K J I H)
        (and (= (|node::value| F) C)
     (= (|node::right| F) D)
     (= (|node::left| F) E)
     (not (= M G))
     (= (node E D K C) B)
     (= (getnode H) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H Int) (I node) (J Heap) (K Int) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue45 P O R N M L)
        (Inv_Heap R Q)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M B))
                N))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize J) R))
                (select (HeapContents J) R)
                defObj)))
  (and ((_ is O_node) Q)
       (= a!1 J)
       (= 0 O)
       (= (|node::value| G) D)
       (= (|node::right| G) E)
       (= (|node::right| I) O)
       (= (|node::left| G) F)
       (= A P)
       (not (= P H))
       (not (= P K))
       (= (node F E R D) C)
       (= (getnode L) G)
       (= (getnode Q) I)
       (= a!2 Q)
       (= (O_node C) B)
       (>= (HeapSize J) R)
       (not (<= R 0))
       ((_ is O_node) L)))
      )
      (inv_main_26 J A P)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G node) (H Int) (I node) (J HeapObject) (K Heap) (L Int) (M HeapObject) (N Int) (O Heap) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue45 R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize O) N))
                (HeapCtor (HeapSize O) (store (HeapContents O) N B))
                O))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize K) P))
                (select (HeapContents K) P)
                defObj))
      (a!3 (or (<= P 0) (not (>= (HeapSize K) P)))))
  (and ((_ is O_node) M)
       (= a!1 K)
       (= 0 Q)
       (= (|node::value| G) D)
       (= (|node::right| G) E)
       (= (|node::right| I) Q)
       (= (|node::left| G) F)
       (= A R)
       (not (= R H))
       (not (= R L))
       (= (node F E P D) C)
       (= (getnode J) I)
       (= (getnode M) G)
       (= a!2 J)
       (= (O_node C) B)
       a!3
       ((_ is O_node) J)))
      )
      (inv_main_26 K A R)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main600_9 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue64 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main600_9 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue64 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue64 J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::right| F) E)
     (= (node H E D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) G))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue64 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      (_Glue66 G L K)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue64 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (_Glue66 H K G)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue66 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::left| A) F)
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      (_Glue67 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue66 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue67 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue67 K J I H)
        (and (= 0 C)
     (= (|node::value| G) D)
     (= (|node::parent| G) E)
     (= (|node::right| G) F)
     (not (= K C))
     (= (node C F E D) B)
     (= (getnode H) G)
     (= (O_node B) A)
     (>= (HeapSize J) I)
     (not (<= I 0))
     ((_ is O_node) H))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue67 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      (_Glue69 H C M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue67 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       ((_ is O_node) J)))
      )
      (_Glue69 I C M H)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue69 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::left| A) G)
       (= (getnode B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) B)))
      )
      (_Glue70 C D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue69 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|node::left| C) B) (= (getnode D) C) (= a!1 A) a!2 ((_ is O_node) D)))
      )
      (_Glue70 E F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue70 K J I H G)
        (and (= (|node::value| F) C)
     (= (|node::parent| F) D)
     (= (|node::left| F) E)
     (= (node E J D C) B)
     (= (getnode G) F)
     (= (O_node B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_node) G))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue31 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue31 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize L) J))
                (HeapCtor (HeapSize L) (store (HeapContents L) J A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main_46 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_46 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main595_9 B D A)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_node) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main595_9 D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize D) C))
                (select (HeapContents D) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize D) C)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue136 J L I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node I E D C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue136 L K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize H) K)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::right| F) E)
       (= (node J E D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue90 L J I)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize J) L))
                (HeapCtor (HeapSize J) (store (HeapContents J) L A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_node) I)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue90 L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize K) L))
                (HeapCtor (HeapSize K) (store (HeapContents K) L A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize I) L))
                (select (HeapContents I) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize I) L)))))
  (and ((_ is O_node) J)
       (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= L C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) H))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue23 L J I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D L C) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue23 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D L C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D Heap) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (inv_main586_5 G F)
        (Inv_Heap I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize G))
                     (store (HeapContents G) (+ 1 (HeapSize G)) B)))
      (a!3 (ite (and (not (<= I 0)) (>= (HeapSize D) I))
                (select (HeapContents D) I)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize G))) A)))
  (and (= 0 E)
       (not (= I E))
       a!2
       (= (AllocResHeap D I) A)
       (= a!3 H)
       (= (O_node C) B)
       (>= (HeapSize D) I)
       (not (<= I 0))
       (not ((_ is O_node) H)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main586_5 I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) B)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize E) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) A)))
  (and (= 0 F)
       (not (= G F))
       a!2
       (= (AllocResHeap E G) A)
       (= a!3 D)
       (= (O_node C) B)
       a!4
       (not ((_ is O_node) D)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D Int) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue27 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize C) F))
                (select (HeapContents C) F)
                defObj)))
  (and (not ((_ is O_node) E))
       (= (|node::left| A) F)
       (not (= F D))
       (= (getnode B) A)
       (= a!1 E)
       (>= (HeapSize C) F)
       (not (<= F 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) (F Int) ) 
    (=>
      (and
        (_Glue27 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (not (= B F))
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H Heap) (I HeapObject) (J Int) (K Heap) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue78 M K J I)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj)))
  (and (not ((_ is O_node) L))
       (= a!1 H)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode I) G)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize H) M)
       (not (<= M 0))
       ((_ is O_node) I)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Int) (G node) (H HeapObject) (I Heap) (J HeapObject) (K Int) (L Heap) (M Int) ) 
    (=>
      (and
        (_Glue78 M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K A))
                L))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize I) M)))))
  (and ((_ is O_node) J)
       (= a!1 I)
       (= 0 C)
       (= (|node::value| G) D)
       (= (|node::parent| G) E)
       (= (|node::right| G) F)
       (not (= M C))
       (= (node C F E D) B)
       (= (getnode J) G)
       (= a!2 H)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) H))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue74 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_node) D))
       (= (|node::left| A) E)
       (= (getnode B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue74 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main600_9 C B E A)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (not ((_ is O_node) D))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main600_9 E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_27 B A D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_node) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_27 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_26 B A D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_node) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_26 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main_50 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_50 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K HeapObject) (L Int) ) 
    (=>
      (and
        (_Glue127 L J I H)
        (Inv_Heap L K)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj)))
  (and (not ((_ is O_node) K))
       (= a!1 G)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode H) F)
       (= a!2 K)
       (= (O_node B) A)
       (>= (HeapSize G) L)
       (not (<= L 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue127 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize H) L)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::parent| F) C)
       (= (|node::right| F) D)
       (= (|node::left| F) E)
       (= (node E D C 42) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue117 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_node) D))
       (= (|node::left| A) E)
       (= (getnode B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue117 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue104 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_node) D))
       (= (|node::left| A) E)
       (= (getnode B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue104 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue158 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_node) D))
       (= (|node::left| A) E)
       (= (getnode B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_node) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue158 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_node) D)
       (= (|node::left| C) B)
       (= (getnode D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main612_5_40 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main612_5_40 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue70 M K J I H)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj)))
  (and (not ((_ is O_node) L))
       (= a!1 G)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E K D C) B)
       (= (getnode H) F)
       (= a!2 L)
       (= (O_node B) A)
       (>= (HeapSize G) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue70 M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and (not ((_ is O_node) G))
       (= a!1 H)
       (= (|node::value| F) C)
       (= (|node::parent| F) D)
       (= (|node::left| F) E)
       (= (node E L D C) B)
       (= (getnode I) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main_45 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_45 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
