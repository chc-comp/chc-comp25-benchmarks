(set-logic HORN)

(declare-datatypes ((|node| 0)) (((|node|  (|node::h| Int) (|node::n| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_node|  (|getnode| node)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue22_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue28| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue0_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |Inv_Heap_exp_exp| ( Int Int Int ) Bool)
(declare-fun |_Glue3| ( Int Int Int Heap HeapObject ) Bool)
(declare-fun |inv_main_16| ( Heap Int ) Bool)
(declare-fun |_Glue14| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_3| ( Heap Int Int ) Bool)
(declare-fun |_Glue16| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue17_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue9_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue20| ( Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue12| ( Int Int Heap HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |inv_main535_3_4| ( Heap Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D node) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (inv_main_3 F E I)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= (node H G) D)
       (= a!1 C)
       (= (O_node D) C)
       (>= (HeapSize F) I)
       (not (<= I 0))
       (= 0 B)))
      )
      (_Glue14 A B E F I C)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_3 F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= a!1 B) a!2 (= 0 C)))
      )
      (_Glue14 A C E F D B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue14 I H G F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue14 L K J I O H)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize I) O))
                (HeapCtor (HeapSize I) (store (HeapContents I) O C))
                I))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|node::n| A) E)
       (= (node 1 E) D)
       (= (node N M) G)
       (= (getnode H) A)
       (= a!2 F)
       (= (O_node G) F)
       (= (O_node D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_node) H)))
      )
      (_Glue16 B L K J O F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue14 L K J I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj))
      (a!3 (or (<= H 0) (not (>= (HeapSize F) H)))))
  (and (= a!1 F)
       (= (|node::n| D) C)
       (= (node 1 C) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       ((_ is O_node) G)))
      )
      (_Glue16 F L K J H E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (v_8 Int) ) 
    (=>
      (and
        (_Glue16 H G F v_8 E D)
        (and (= v_8 G)
     (= (|node::h| C) B)
     (= A 0)
     (not (= G F))
     (= (getnode D) C)
     (>= (HeapSize H) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E node) (F HeapObject) (G Int) (H Int) (I Int) (J Heap) (v_10 Int) ) 
    (=>
      (and
        (_Glue16 J I H v_10 G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize J) G))
                (HeapCtor (HeapSize J) (store (HeapContents J) G B))
                J)))
  (and (= v_10 I)
       (= a!1 A)
       (= (|node::h| E) D)
       (not (= I H))
       (= (node D 0) C)
       (= (getnode F) E)
       (= (O_node C) B)
       ((_ is O_node) F)))
      )
      (inv_main_16 A I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Heap) (F Int) (G Int) (H HeapObject) (I node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) H))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E)
       (= 0 B)
       (= (newAddr D) C)
       (not (= C B))
       (= A (newAddr D))
       (= (node G F) I)
       (= (O_node I) H)
       a!2)))
      )
      (Inv_Heap_exp_exp A G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) E)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) F)
       (= (newHeap E) D)
       (= 0 B)
       (= (newAddr E) C)
       (not (= C B))
       (= A C)
       (= (O_node H) G)
       a!2)))
      )
      (inv_main535_3_4 D A C)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Heap) (E Int) (F Int) (v_6 Int) ) 
    (=>
      (and
        (inv_main_16 D F)
        (Inv_Heap_exp_exp F v_6 E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 1 v_6)
       (not (= E A))
       (= (node 1 E) C)
       (= a!1 B)
       (= (O_node C) B)
       (>= (HeapSize D) F)
       (not (<= F 0))
       (= 0 A)))
      )
      (inv_main_16 D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_16 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|node::n| C) B)
       (= (|node::h| C) 1)
       (not (= B A))
       (= (getnode D) C)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main_16 F B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Heap) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (inv_main_3 D C G)
        (Inv_Heap_exp_exp G F E)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize D) G))
                (select (HeapContents D) G)
                defObj)))
  (and (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize D) G)
       (not (<= G 0))
       (= (node F E) B)))
      )
      (_Glue28 D G A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_3 D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize D) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue28 D B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue28 F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E node) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (inv_main535_3_4 G F J)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (node I H) E)
       (= a!1 D)
       (= (O_node E) D)
       (>= (HeapSize G) J)
       (not (<= J 0))
       (= 0 C)))
      )
      (_Glue22_exp_exp C B A G J D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main535_3_4 G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue22_exp_exp D B A G E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue22_exp_exp I H G F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C AllocResHeap) (D Heap) (E HeapObject) (F node) (G Int) (H HeapObject) (I node) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue22_exp_exp O N M L K J)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H)))
      (a!3 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K E))
                L)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|node::n| B) G)
       (= A (newAddr C))
       (= (node 1 G) F)
       (= (node N M) I)
       (= (getnode J) B)
       (= (O_node F) E)
       (= (O_node I) H)
       ((_ is O_node) J))))
      )
      (Inv_Heap_exp_exp A N M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E node) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (inv_main535_3_4 G F J)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (node I H) E)
       (= a!1 D)
       (= (O_node E) D)
       (>= (HeapSize G) J)
       (not (<= J 0))
       (= 0 C)))
      )
      (_Glue17_exp_exp C B A F G J D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main535_3_4 G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue17_exp_exp D B A F G E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue17_exp_exp J I H G F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C AllocResHeap) (D Heap) (E HeapObject) (F node) (G Int) (H HeapObject) (I node) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue17_exp_exp P O N M L K J)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H)))
      (a!3 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K E))
                L)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|node::n| B) G)
       (= A (newAddr C))
       (= (node 1 G) F)
       (= (node O N) I)
       (= (getnode J) B)
       (= (O_node I) H)
       (= (O_node F) E)
       ((_ is O_node) J))))
      )
      (Inv_Heap_exp_exp A O N)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L node) (M HeapObject) (N Heap) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) ) 
    (=>
      (and
        (_Glue17_exp_exp R Q P O N U M)
        (Inv_Heap_exp_exp U T S)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) F)))
      (a!3 (ite (and (not (<= U 0)) (>= (HeapSize N) U))
                (HeapCtor (HeapSize N) (store (HeapContents N) U C))
                N))
      (a!4 (ite (and (not (<= U 0)) (>= (HeapSize J) U))
                (select (HeapContents J) U)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) H)))
  (and a!2
       (= (AllocResHeap J I) H)
       (= a!3 B)
       (= (|node::n| A) E)
       (not (= I R))
       (= (node 1 E) D)
       (= (node Q P) G)
       (= (node T S) L)
       (= (getnode M) A)
       (= a!4 K)
       (= (O_node D) C)
       (= (O_node L) K)
       (= (O_node G) F)
       (>= (HeapSize J) U)
       (not (<= U 0))
       ((_ is O_node) M))))
      )
      (_Glue20 U O I J K)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D HeapObject) (E node) (F Int) (G HeapObject) (H node) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue17_exp_exp R Q P O N M L)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M D))
                N))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|node::n| A) F)
       (not (= J R))
       (= (node 1 F) E)
       (= (node Q P) H)
       (= (getnode L) A)
       (= a!4 C)
       (= (O_node E) D)
       (= (O_node H) G)
       a!5
       ((_ is O_node) L))))
      )
      (_Glue20 M O J K C)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue20 G F E D C)
        (and (= (|node::h| B) A)
     (= (getnode C) B)
     (>= (HeapSize D) G)
     (not (<= G 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp G A E)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue20 N K J I H)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N C))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize B) N))
                (select (HeapContents B) N)
                defObj)))
  (and (= a!1 B)
       (= (|node::h| A) E)
       (= (node E J) D)
       (= (node M L) G)
       (= (getnode H) A)
       (= a!2 F)
       (= (O_node G) F)
       (= (O_node D) C)
       (>= (HeapSize B) N)
       (not (<= N 0))
       ((_ is O_node) H)))
      )
      (inv_main535_3_4 B K L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue20 M L K J I)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize J) M))
                (HeapCtor (HeapSize J) (store (HeapContents J) M A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and ((_ is O_node) G)
       (= a!1 H)
       (= (|node::n| F) E)
       (= (|node::h| D) C)
       (= (node C K) B)
       (= (getnode I) D)
       (= (getnode G) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (inv_main535_3_4 H L E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E node) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (inv_main535_3_4 G F J)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (node I H) E)
       (= a!1 D)
       (= (O_node E) D)
       (>= (HeapSize G) J)
       (not (<= J 0))
       (= 0 C)))
      )
      (_Glue9_exp_exp C B A G J D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main535_3_4 G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue9_exp_exp D B A G E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue9_exp_exp I H G F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C AllocResHeap) (D Heap) (E HeapObject) (F node) (G Int) (H HeapObject) (I node) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue9_exp_exp O N M L K J)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H)))
      (a!3 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K E))
                L)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|node::n| B) G)
       (= A (newAddr C))
       (= (node 1 G) F)
       (= (node N M) I)
       (= (getnode J) B)
       (= (O_node F) E)
       (= (O_node I) H)
       ((_ is O_node) J))))
      )
      (Inv_Heap_exp_exp A N M)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L node) (M HeapObject) (N Heap) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) ) 
    (=>
      (and
        (_Glue9_exp_exp Q P O N T M)
        (Inv_Heap_exp_exp T S R)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) F)))
      (a!3 (ite (and (not (<= T 0)) (>= (HeapSize N) T))
                (HeapCtor (HeapSize N) (store (HeapContents N) T C))
                N))
      (a!4 (ite (and (not (<= T 0)) (>= (HeapSize J) T))
                (select (HeapContents J) T)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) H)))
  (and a!2
       (= (AllocResHeap J I) H)
       (= a!3 B)
       (= (|node::n| A) E)
       (not (= I Q))
       (= (node 1 E) D)
       (= (node P O) G)
       (= (node S R) L)
       (= (getnode M) A)
       (= a!4 K)
       (= (O_node D) C)
       (= (O_node G) F)
       (= (O_node L) K)
       (>= (HeapSize J) T)
       (not (<= T 0))
       ((_ is O_node) M))))
      )
      (_Glue12 T I J K)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D HeapObject) (E node) (F Int) (G HeapObject) (H node) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue9_exp_exp Q P O N M L)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M D))
                N))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|node::n| A) F)
       (not (= J Q))
       (= (node 1 F) E)
       (= (node P O) H)
       (= (getnode L) A)
       (= a!4 C)
       (= (O_node E) D)
       (= (O_node H) G)
       a!5
       ((_ is O_node) L))))
      )
      (_Glue12 M J K C)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue12 F E D C)
        (and (= (|node::h| B) A)
     (= (getnode C) B)
     (>= (HeapSize D) F)
     (not (<= F 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp F A E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E node) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (inv_main535_3_4 G F J)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (node I H) E)
       (= a!1 D)
       (= (O_node E) D)
       (>= (HeapSize G) J)
       (not (<= J 0))
       (= 0 C)))
      )
      (_Glue0_exp_exp C B A F G J D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main535_3_4 G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue0_exp_exp D B A F G E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue0_exp_exp J I H G F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C AllocResHeap) (D Heap) (E HeapObject) (F node) (G Int) (H HeapObject) (I node) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue0_exp_exp P O N M L K J)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H)))
      (a!3 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K E))
                L)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|node::n| B) G)
       (= A (newAddr C))
       (= (node 1 G) F)
       (= (node O N) I)
       (= (getnode J) B)
       (= (O_node I) H)
       (= (O_node F) E)
       ((_ is O_node) J))))
      )
      (Inv_Heap_exp_exp A O N)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L node) (M HeapObject) (N Heap) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) ) 
    (=>
      (and
        (_Glue0_exp_exp R Q P O N U M)
        (Inv_Heap_exp_exp U T S)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) F)))
      (a!3 (ite (and (not (<= U 0)) (>= (HeapSize N) U))
                (HeapCtor (HeapSize N) (store (HeapContents N) U C))
                N))
      (a!4 (ite (and (not (<= U 0)) (>= (HeapSize J) U))
                (select (HeapContents J) U)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) H)))
  (and a!2
       (= (AllocResHeap J I) H)
       (= a!3 B)
       (= (|node::n| A) E)
       (not (= I R))
       (= (node 1 E) D)
       (= (node Q P) G)
       (= (node T S) L)
       (= (getnode M) A)
       (= a!4 K)
       (= (O_node D) C)
       (= (O_node L) K)
       (= (O_node G) F)
       (>= (HeapSize J) U)
       (not (<= U 0))
       ((_ is O_node) M))))
      )
      (_Glue3 U O I J K)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D HeapObject) (E node) (F Int) (G HeapObject) (H node) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue0_exp_exp R Q P O N M L)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M D))
                N))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|node::n| A) F)
       (not (= J R))
       (= (node 1 F) E)
       (= (node Q P) H)
       (= (getnode L) A)
       (= a!4 C)
       (= (O_node E) D)
       (= (O_node H) G)
       a!5
       ((_ is O_node) L))))
      )
      (_Glue3 M O J K C)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue3 G F E D C)
        (and (= (|node::h| B) A)
     (= (getnode C) B)
     (>= (HeapSize D) G)
     (not (<= G 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp G A E)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue3 N K J I H)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N C))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize B) N))
                (select (HeapContents B) N)
                defObj)))
  (and (= a!1 B)
       (= (|node::h| A) E)
       (= (node E J) D)
       (= (node M L) G)
       (= (getnode H) A)
       (= a!2 F)
       (= (O_node G) F)
       (= (O_node D) C)
       (>= (HeapSize B) N)
       (not (<= N 0))
       ((_ is O_node) H)))
      )
      (inv_main_3 B K L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue3 M L K J I)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize J) M))
                (HeapCtor (HeapSize J) (store (HeapContents J) M A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (select (HeapContents H) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize H) M)))))
  (and ((_ is O_node) G)
       (= a!1 H)
       (= (|node::n| F) E)
       (= (|node::h| D) C)
       (= (node C K) B)
       (= (getnode I) D)
       (= (getnode G) F)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) I)))
      )
      (inv_main_3 H L E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Heap) (F Int) (G Int) (H HeapObject) (I node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) H))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E)
       (= 0 B)
       (= (newAddr D) C)
       (not (= C B))
       (= A (newAddr D))
       (= (node G F) I)
       (= (O_node I) H)
       a!2)))
      )
      (Inv_Heap_exp_exp A G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) E)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) F)
       (= (newHeap E) D)
       (= 0 B)
       (= (newAddr E) C)
       (not (= C B))
       (= A C)
       (= (O_node H) G)
       a!2)))
      )
      (inv_main_3 D A C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main535_3_4 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_3 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue28 I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj))
      (a!3 (or (<= H 0) (not (>= (HeapSize F) H)))))
  (and ((_ is O_node) G)
       (= a!1 F)
       (= (|node::n| D) C)
       (= (node 1 C) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D HeapObject) (E node) (F Int) (G HeapObject) (H node) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue22_exp_exp Q P O N M L)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M D))
                N))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and ((_ is O_node) L)
       a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|node::n| A) F)
       (not (= J Q))
       (= (node 1 F) E)
       (= (node P O) H)
       (= (getnode L) A)
       (= a!4 C)
       (= (O_node E) D)
       (= (O_node H) G)
       a!5
       (not ((_ is O_node) C)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue12 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and (not ((_ is O_node) E))
       (= a!1 F)
       (= (|node::h| D) C)
       (= (node C I) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       ((_ is O_node) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_16 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
