(set-logic HORN)

(declare-datatypes ((|TSLL| 0)) (((|TSLL|  (|TSLL::next| Int) (|TSLL::colour| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_TSLL|  (|getTSLL| TSLL)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue149| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue3_exp_exp| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue50| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue60_exp_exp| ( Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue49| ( Heap HeapObject ) Bool)
(declare-fun |_Glue47| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue23| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue118| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue63_exp_exp| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue6_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue136| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue68| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue111_exp_exp| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue39| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue85| ( Heap HeapObject ) Bool)
(declare-fun |_Glue144_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |_Glue31_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue139_exp_exp| ( Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue38| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue120| ( Heap HeapObject ) Bool)
(declare-fun |inv_main_22| ( Heap Int ) Bool)
(declare-fun |_Glue141_exp_exp| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue155| ( Heap Int HeapObject ) Bool)
(declare-fun |inv_main_21| ( Heap Int ) Bool)
(declare-fun |_Glue30_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue156| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue9| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue109_exp_exp| ( Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue54| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue112_exp_exp| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue56| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue147| ( Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue65_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue153| ( Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue33_exp_exp| ( Heap Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue4_exp_exp| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue142_exp_exp| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue121| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue158| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue36| ( Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue43| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue1_exp_exp| ( Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |Inv_Heap_exp_exp| ( Int Int Int ) Bool)
(declare-fun |_Glue62_exp_exp| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main1010_2| ( Heap Int Int ) Bool)
(declare-fun |_Glue150| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue57| ( Heap HeapObject ) Bool)
(declare-fun |_Glue70| ( Heap HeapObject ) Bool)
(declare-fun |_Glue45| ( Heap HeapObject ) Bool)
(declare-fun |_Glue114_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue41| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue28_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)

(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (inv_main1010_2 I H L)
        (Inv_Heap_exp_exp L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) L)
       (not (<= L 0))
       a!3)))
      )
      (_Glue118 L B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue118 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue118 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) F)
     (not (<= F 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp F E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue118 M J I H)
        (Inv_Heap_exp_exp M L K)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (HeapCtor (HeapSize I) (store (HeapContents I) M C))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize B) M))
                (select (HeapContents B) M)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL L K) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL G) F)
       (= (O_TSLL D) C)
       (>= (HeapSize B) M)
       (not (<= M 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue120 B F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue118 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue120 F E)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue120 E D)
        (Inv_Heap_exp_exp H G F)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize E) H))
                (select (HeapContents E) H)
                defObj)))
  (and (= (|TSLL::next| A) H)
       (= (TSLL G F) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize E) H)
       (not (<= H 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue121 E H B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue120 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue121 E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue121 F E D)
        (and (= 0 A)
     (= (|TSLL::colour| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (inv_main1010_2 I H L)
        (Inv_Heap_exp_exp L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) L)
       (not (<= L 0))
       a!3)))
      )
      (_Glue153 L H B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue153 G H B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue153 G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) G)
     (not (<= G 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp G E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue153 N K J I H)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N C))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize B) N))
                (select (HeapContents B) N)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL M L) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (>= (HeapSize B) N)
       (not (<= N 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue155 B K F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue153 K J I H G)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize F) K)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue155 F J E)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue155 F E D)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= (|TSLL::next| A) I)
       (= (TSLL H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) I)
       (not (<= I 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue156 E F I B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue155 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue156 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue156 G F E D)
        (and (= 0 A)
     (= (|TSLL::colour| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue156 K J N I)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize J) N))
                (HeapCtor (HeapSize J) (store (HeapContents J) N C))
                J))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize B) N))
                (select (HeapContents B) N)
                defObj)))
  (and (= a!1 B)
       (= 0 F)
       (= (|TSLL::colour| A) E)
       (= (TSLL F E) D)
       (= (TSLL M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) N)
       (not (<= N 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue158 B K N G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue156 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize G) I)))))
  (and (= a!1 G)
       (= 0 C)
       (= (|TSLL::colour| E) D)
       (= (TSLL C D) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue158 G K I F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue158 G F E D)
        (and (= (|TSLL::next| C) B)
     (= A 1)
     (= (getTSLL D) C)
     (>= (HeapSize G) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue158 I H G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize I) G))
                (HeapCtor (HeapSize I) (store (HeapContents I) G B))
                I)))
  (and (= a!1 A)
       (= (|TSLL::next| E) D)
       (= (TSLL D 1) C)
       (= (getTSLL F) E)
       (= (O_TSLL C) B)
       ((_ is O_TSLL) F)))
      )
      (inv_main1010_2 A H G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Heap) (D Int) (E Int) (F Int) ) 
    (=>
      (and
        (inv_main_21 C F)
        (Inv_Heap_exp_exp F E D)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize C) F))
                (select (HeapContents C) F)
                defObj)))
  (and (= a!1 A)
       (= (O_TSLL B) A)
       (>= (HeapSize C) F)
       (not (<= F 0))
       (= (TSLL E D) B)))
      )
      (_Glue85 C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_21 C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize C) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue85 C A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue85 E D)
        (Inv_Heap_exp_exp H G F)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize E) H))
                (select (HeapContents E) H)
                defObj)))
  (and (= (|TSLL::colour| A) 0)
       (= (|TSLL::next| A) H)
       (= (TSLL G F) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize E) H)
       (not (<= H 0))
       ((_ is O_TSLL) D)))
      )
      (inv_main_22 E G)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Int) (E TSLL) (F HeapObject) (G Heap) ) 
    (=>
      (and
        (_Glue85 G F)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize G) D))
                (select (HeapContents G) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize G) D)))))
  (and ((_ is O_TSLL) F)
       (= (|TSLL::colour| E) 0)
       (= (|TSLL::next| E) D)
       (= (|TSLL::next| B) A)
       (= (getTSLL C) B)
       (= (getTSLL F) E)
       (= a!1 C)
       a!2
       ((_ is O_TSLL) C)))
      )
      (inv_main_22 G A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (inv_main1010_2 I H L)
        (Inv_Heap_exp_exp L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) L)
       (not (<= L 0))
       a!3)))
      )
      (_Glue47 L B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue47 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue47 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) F)
     (not (<= F 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp F E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue47 M J I H)
        (Inv_Heap_exp_exp M L K)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (HeapCtor (HeapSize I) (store (HeapContents I) M C))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize B) M))
                (select (HeapContents B) M)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL L K) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL G) F)
       (= (O_TSLL D) C)
       (>= (HeapSize B) M)
       (not (<= M 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue49 B F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue47 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue49 F E)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue49 E D)
        (Inv_Heap_exp_exp H G F)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize E) H))
                (select (HeapContents E) H)
                defObj)))
  (and (= (|TSLL::next| A) H)
       (= (TSLL G F) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize E) H)
       (not (<= H 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue50 E H B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue49 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue50 E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue50 F E D)
        (and (= 0 A)
     (= (|TSLL::colour| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C AllocResHeap) (D Int) (E Heap) (F HeapObject) (G TSLL) (H HeapObject) (I TSLL) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (inv_main1010_2 K J N)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize E) N))
                (select (HeapContents E) N)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) F))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize K))) C)))
  (and (= (AllocResHeap E D) C)
       (= (TSLL M L) I)
       (= a!1 H)
       (= (O_TSLL I) H)
       (= (O_TSLL G) F)
       (>= (HeapSize E) N)
       (not (<= N 0))
       a!3)))
      )
      (_Glue139_exp_exp N B A D E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main1010_2 K J I)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!2 (or (<= I 0) (not (>= (HeapSize F) I))))
      (a!3 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) G))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize K))) D)))
  (and (= (AllocResHeap F E) D) (= a!1 C) (= (O_TSLL H) G) a!2 a!4)))
      )
      (_Glue139_exp_exp I B A E F C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue139_exp_exp H G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) H)
     (not (<= H 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp H E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue139_exp_exp O L K J I H)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize I) O))
                (HeapCtor (HeapSize I) (store (HeapContents I) O C))
                I))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL N M) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue141_exp_exp B L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue139_exp_exp L K J I H G)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (HeapCtor (HeapSize H) (store (HeapContents H) L D))
                H))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize C) L)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (TSLL I F) E)
       (= (getTSLL G) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue141_exp_exp C K J B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue141_exp_exp G F E D)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize G) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue142_exp_exp F E G J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue141_exp_exp G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue142_exp_exp F E G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue142_exp_exp H G F E D)
        (and (= 0 A)
     (= (|TSLL::colour| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue142_exp_exp L K J O I)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= 0 F)
       (= (|TSLL::colour| A) E)
       (= (TSLL F E) D)
       (= (TSLL N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue144_exp_exp B F L K O G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue142_exp_exp L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize C) I))
                (select (HeapContents C) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize C) I)))))
  (and (= a!1 C)
       (= 0 G)
       (= (|TSLL::colour| A) F)
       (= (TSLL G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue144_exp_exp C G L K I B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue144_exp_exp I H G F E D)
        (and (= (|TSLL::next| C) B)
     (= A 0)
     (= (getTSLL D) C)
     (>= (HeapSize I) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Int) (L Int) (M Int) (N Int) (O Heap) ) 
    (=>
      (and
        (_Glue144_exp_exp O N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize O) K))
                (HeapCtor (HeapSize O) (store (HeapContents O) K E))
                O))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::next| B) G)
       (= A (newAddr C))
       a!3
       (= (TSLL G 0) F)
       (= (TSLL M L) I)
       (= (getTSLL J) B)
       (= (O_TSLL I) H)
       (= (O_TSLL F) E)
       ((_ is O_TSLL) J))))
      )
      (Inv_Heap_exp_exp A M L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L TSLL) (M HeapObject) (N Int) (O Int) (P Int) (Q Heap) (R Int) (S Int) (T Int) ) 
    (=>
      (and
        (_Glue144_exp_exp Q P O N T M)
        (Inv_Heap_exp_exp T S R)
        (let ((a!1 (ite (and (not (<= T 0)) (>= (HeapSize Q) T))
                (HeapCtor (HeapSize Q) (store (HeapContents Q) T C))
                Q))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) F)))
      (a!4 (ite (and (not (<= T 0)) (>= (HeapSize J) T))
                (select (HeapContents J) T)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) H)))
  (and (= a!1 B)
       (= (|TSLL::next| A) E)
       a!3
       (= (AllocResHeap J I) H)
       (= (TSLL E 0) D)
       (= (TSLL O N) G)
       (= (TSLL S R) L)
       (= (getTSLL M) A)
       (= a!4 K)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (= (O_TSLL L) K)
       (>= (HeapSize J) T)
       (not (<= T 0))
       ((_ is O_TSLL) M))))
      )
      (_Glue147 T P I J K)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Int) (O Int) (P Int) (Q Heap) ) 
    (=>
      (and
        (_Glue144_exp_exp Q P O N M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize Q) M))
                (HeapCtor (HeapSize Q) (store (HeapContents Q) M D))
                Q))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F 0) E)
       (= (TSLL O N) H)
       (= (getTSLL L) A)
       (= a!4 C)
       (= (O_TSLL H) G)
       (= (O_TSLL E) D)
       a!5
       ((_ is O_TSLL) L))))
      )
      (_Glue147 M P J K C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue147 G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) G)
     (not (<= G 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp G E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue147 N K J I H)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N C))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize B) N))
                (select (HeapContents B) N)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL M L) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (>= (HeapSize B) N)
       (not (<= N 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue149 B K F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue147 K J I H G)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize F) K)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue149 F J E)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue149 F E D)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= (|TSLL::next| A) I)
       (= (TSLL H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) I)
       (not (<= I 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue150 E F I B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue149 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue150 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Int) (E Heap) (F Int) ) 
    (=>
      (and
        (_Glue150 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize E) D)
     (not (<= D 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp D F A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D Int) (E Int) (F HeapObject) (G TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= A (newAddr B))
       a!2
       (= (TSLL E D) G)
       (= (O_TSLL G) F)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C))))
      )
      (Inv_Heap_exp_exp A E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (Inv_Heap_exp_exp K J I)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap F K) E)
       (= (TSLL J I) H)
       (= a!3 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize F) K)
       (not (<= K 0))
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue54 K A F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (select (HeapContents H) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize H) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap H G) E)
       (= a!3 F)
       (= (O_TSLL D) C)
       a!4
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue54 G A H F)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue54 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) F)
     (not (<= F 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp F E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue54 M J I H)
        (Inv_Heap_exp_exp M L K)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (HeapCtor (HeapSize I) (store (HeapContents I) M C))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize B) M))
                (select (HeapContents B) M)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL L K) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL G) F)
       (= (O_TSLL D) C)
       (>= (HeapSize B) M)
       (not (<= M 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue56 B M F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue54 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue56 F J E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue56 F E D)
        (and (= (|TSLL::next| C) B)
     (= A 1)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E Int) (F TSLL) (G HeapObject) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue56 I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H C))
                I)))
  (and (= a!1 B)
       (= (|TSLL::next| F) E)
       (= A H)
       (= (TSLL E 1) D)
       (= (getTSLL G) F)
       (= (O_TSLL D) C)
       ((_ is O_TSLL) G)))
      )
      (inv_main1010_2 B H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Heap) (D Int) (E Int) (F Int) ) 
    (=>
      (and
        (inv_main_21 C F)
        (Inv_Heap_exp_exp F E D)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize C) F))
                (select (HeapContents C) F)
                defObj)))
  (and (= a!1 A)
       (= (O_TSLL B) A)
       (>= (HeapSize C) F)
       (not (<= F 0))
       (= (TSLL E D) B)))
      )
      (_Glue57 C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_21 C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize C) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue57 C A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C AllocResHeap) (D Int) (E Heap) (F HeapObject) (G TSLL) (H HeapObject) (I TSLL) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (inv_main1010_2 K J N)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize E) N))
                (select (HeapContents E) N)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) F))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize K))) C)))
  (and (= (AllocResHeap E D) C)
       (= (TSLL M L) I)
       (= a!1 H)
       (= (O_TSLL I) H)
       (= (O_TSLL G) F)
       (>= (HeapSize E) N)
       (not (<= N 0))
       a!3)))
      )
      (_Glue28_exp_exp N J B A D E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main1010_2 K J I)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!2 (or (<= I 0) (not (>= (HeapSize F) I))))
      (a!3 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) G))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize K))) D)))
  (and (= (AllocResHeap F E) D) (= a!1 C) (= (O_TSLL H) G) a!2 a!4)))
      )
      (_Glue28_exp_exp I J B A E F C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue28_exp_exp I H G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) I)
     (not (<= I 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp I E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue28_exp_exp P M L K J I H)
        (Inv_Heap_exp_exp P O N)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize I) P))
                (HeapCtor (HeapSize I) (store (HeapContents I) P C))
                I))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL O N) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL G) F)
       (= (O_TSLL D) C)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue30_exp_exp B M L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue28_exp_exp M L K J I H G)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize H) M))
                (HeapCtor (HeapSize H) (store (HeapContents H) M D))
                H))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize C) M)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (TSLL I F) E)
       (= (getTSLL G) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue30_exp_exp C L K J B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue30_exp_exp H G F E D)
        (Inv_Heap_exp_exp K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj)))
  (and (= (|TSLL::next| A) K)
       (= (TSLL J I) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize H) K)
       (not (<= K 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue31_exp_exp F E G H K B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue30_exp_exp H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue31_exp_exp F E G H B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue31_exp_exp I H G F E D)
        (and (= 0 A)
     (= (|TSLL::colour| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue31_exp_exp M L K J P I)
        (Inv_Heap_exp_exp P O N)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize J) P))
                (HeapCtor (HeapSize J) (store (HeapContents J) P C))
                J))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= 0 F)
       (= (|TSLL::colour| A) E)
       (= (TSLL F E) D)
       (= (TSLL O N) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue33_exp_exp B F M L K P G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue31_exp_exp M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize C) I))
                (select (HeapContents C) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize C) I)))))
  (and (= a!1 C)
       (= 0 G)
       (= (|TSLL::colour| A) F)
       (= (TSLL G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue33_exp_exp C G M L K I B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue33_exp_exp J I H G F E D)
        (and (= (|TSLL::next| C) B)
     (= A 0)
     (= (getTSLL D) C)
     (>= (HeapSize J) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Int) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue33_exp_exp P O N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize P) K))
                (HeapCtor (HeapSize P) (store (HeapContents P) K E))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::next| B) G)
       (= A (newAddr C))
       a!3
       (= (TSLL G 0) F)
       (= (TSLL N M) I)
       (= (getTSLL J) B)
       (= (O_TSLL F) E)
       (= (O_TSLL I) H)
       ((_ is O_TSLL) J))))
      )
      (Inv_Heap_exp_exp A N M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L TSLL) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Heap) (S Int) (T Int) (U Int) ) 
    (=>
      (and
        (_Glue33_exp_exp R Q P O N U M)
        (Inv_Heap_exp_exp U T S)
        (let ((a!1 (ite (and (not (<= U 0)) (>= (HeapSize R) U))
                (HeapCtor (HeapSize R) (store (HeapContents R) U C))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) F)))
      (a!4 (ite (and (not (<= U 0)) (>= (HeapSize J) U))
                (select (HeapContents J) U)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) H)))
  (and (= a!1 B)
       (= (|TSLL::next| A) E)
       a!3
       (= (AllocResHeap J I) H)
       (= (TSLL E 0) D)
       (= (TSLL P O) G)
       (= (TSLL T S) L)
       (= (getTSLL M) A)
       (= a!4 K)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (= (O_TSLL L) K)
       (>= (HeapSize J) U)
       (not (<= U 0))
       ((_ is O_TSLL) M))))
      )
      (_Glue36 U N Q I J K)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (_Glue33_exp_exp R Q P O N M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize R) M))
                (HeapCtor (HeapSize R) (store (HeapContents R) M D))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F 0) E)
       (= (TSLL P O) H)
       (= (getTSLL L) A)
       (= a!4 C)
       (= (O_TSLL H) G)
       (= (O_TSLL E) D)
       a!5
       ((_ is O_TSLL) L))))
      )
      (_Glue36 M N Q J K C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue36 H G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) H)
     (not (<= H 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp H E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue36 O L K J I H)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize I) O))
                (HeapCtor (HeapSize I) (store (HeapContents I) O C))
                I))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL N M) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue38 B L K F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue36 L K J I H G)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (HeapCtor (HeapSize H) (store (HeapContents H) L A))
                H))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize F) L))
                (select (HeapContents F) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize F) L)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue38 F K J E)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue38 G F E D)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize G) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue39 E F G J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue38 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue39 E F G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Int) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue39 G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize E) D)
     (not (<= D 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp D G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue39 K J I N H)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N C))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize B) N))
                (select (HeapContents B) N)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL K E) D)
       (= (TSLL M L) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (>= (HeapSize B) N)
       (not (<= N 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue41 B J N F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue39 K J I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj))
      (a!3 (or (<= H 0) (not (>= (HeapSize F) H)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL K C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue41 F J H E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue41 G F E D)
        (and (= (|TSLL::next| C) B)
     (= A 1)
     (= (getTSLL D) C)
     (>= (HeapSize G) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue41 I H G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize I) G))
                (HeapCtor (HeapSize I) (store (HeapContents I) G B))
                I)))
  (and (= a!1 A)
       (= (|TSLL::next| E) D)
       (= (TSLL D 1) C)
       (= (getTSLL F) E)
       (= (O_TSLL C) B)
       ((_ is O_TSLL) F)))
      )
      (inv_main1010_2 A H G)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C AllocResHeap) (D Int) (E Heap) (F HeapObject) (G TSLL) (H HeapObject) (I TSLL) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (inv_main1010_2 K J N)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize E) N))
                (select (HeapContents E) N)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) F))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize K))) C)))
  (and (= (AllocResHeap E D) C)
       (= (TSLL M L) I)
       (= a!1 H)
       (= (O_TSLL I) H)
       (= (O_TSLL G) F)
       (>= (HeapSize E) N)
       (not (<= N 0))
       a!3)))
      )
      (_Glue60_exp_exp N B A D E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main1010_2 K J I)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!2 (or (<= I 0) (not (>= (HeapSize F) I))))
      (a!3 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) G))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize K))) D)))
  (and (= (AllocResHeap F E) D) (= a!1 C) (= (O_TSLL H) G) a!2 a!4)))
      )
      (_Glue60_exp_exp I B A E F C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue60_exp_exp H G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) H)
     (not (<= H 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp H E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue60_exp_exp O L K J I H)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize I) O))
                (HeapCtor (HeapSize I) (store (HeapContents I) O C))
                I))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL N M) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue62_exp_exp B L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue60_exp_exp L K J I H G)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (HeapCtor (HeapSize H) (store (HeapContents H) L D))
                H))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize C) L)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (TSLL I F) E)
       (= (getTSLL G) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue62_exp_exp C K J B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue62_exp_exp G F E D)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize G) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue63_exp_exp F E G J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue62_exp_exp G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue63_exp_exp F E G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue63_exp_exp H G F E D)
        (and (= 0 A)
     (= (|TSLL::colour| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue63_exp_exp L K J O I)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= 0 F)
       (= (|TSLL::colour| A) E)
       (= (TSLL F E) D)
       (= (TSLL N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue65_exp_exp B L K O G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue63_exp_exp L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize C) I))
                (select (HeapContents C) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize C) I)))))
  (and (= a!1 C)
       (= 0 G)
       (= (|TSLL::colour| A) F)
       (= (TSLL G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue65_exp_exp C L K I B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue65_exp_exp H G F E D)
        (and (= (|TSLL::next| C) B)
     (= A 0)
     (= (getTSLL D) C)
     (>= (HeapSize H) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Int) (L Int) (M Int) (N Heap) ) 
    (=>
      (and
        (_Glue65_exp_exp N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize N) K))
                (HeapCtor (HeapSize N) (store (HeapContents N) K E))
                N))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::next| B) G)
       (= A (newAddr C))
       a!3
       (= (TSLL G 0) F)
       (= (TSLL M L) I)
       (= (getTSLL J) B)
       (= (O_TSLL F) E)
       (= (O_TSLL I) H)
       ((_ is O_TSLL) J))))
      )
      (Inv_Heap_exp_exp A M L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L TSLL) (M HeapObject) (N Int) (O Int) (P Heap) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue65_exp_exp P O N S M)
        (Inv_Heap_exp_exp S R Q)
        (let ((a!1 (ite (and (not (<= S 0)) (>= (HeapSize P) S))
                (HeapCtor (HeapSize P) (store (HeapContents P) S C))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) F)))
      (a!4 (ite (and (not (<= S 0)) (>= (HeapSize J) S))
                (select (HeapContents J) S)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) H)))
  (and (= a!1 B)
       (= (|TSLL::next| A) E)
       a!3
       (= (AllocResHeap J I) H)
       (= (TSLL E 0) D)
       (= (TSLL O N) G)
       (= (TSLL R Q) L)
       (= (getTSLL M) A)
       (= a!4 K)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (= (O_TSLL L) K)
       (>= (HeapSize J) S)
       (not (<= S 0))
       ((_ is O_TSLL) M))))
      )
      (_Glue68 S I J K)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue65_exp_exp P O N M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize P) M))
                (HeapCtor (HeapSize P) (store (HeapContents P) M D))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F 0) E)
       (= (TSLL O N) H)
       (= (getTSLL L) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL H) G)
       a!5
       ((_ is O_TSLL) L))))
      )
      (_Glue68 M J K C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue68 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) F)
     (not (<= F 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp F E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue68 M J I H)
        (Inv_Heap_exp_exp M L K)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (HeapCtor (HeapSize I) (store (HeapContents I) M C))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize B) M))
                (select (HeapContents B) M)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL L K) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL G) F)
       (= (O_TSLL D) C)
       (>= (HeapSize B) M)
       (not (<= M 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue70 B F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue68 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue70 F E)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (inv_main1010_2 I H L)
        (Inv_Heap_exp_exp L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) L)
       (not (<= L 0))
       a!3)))
      )
      (_Glue43 L B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue43 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue43 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) F)
     (not (<= F 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp F E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue43 M J I H)
        (Inv_Heap_exp_exp M L K)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (HeapCtor (HeapSize I) (store (HeapContents I) M C))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize B) M))
                (select (HeapContents B) M)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL L K) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL G) F)
       (= (O_TSLL D) C)
       (>= (HeapSize B) M)
       (not (<= M 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue45 B F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue43 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue45 F E)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C TSLL) (D Heap) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (inv_main_22 D G)
        (Inv_Heap_exp_exp G F E)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize D) G))
                (select (HeapContents D) G)
                defObj)))
  (and (not (= A F))
       (not (= F A))
       (= (TSLL F E) C)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize D) G)
       (not (<= G 0))
       (= 0 A)))
      )
      (inv_main_21 D F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_22 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|TSLL::next| C) B)
       (not (= B A))
       (not (= A B))
       (= (getTSLL D) C)
       (= a!1 D)
       a!2
       ((_ is O_TSLL) D)))
      )
      (inv_main_21 F B)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C TSLL) (D Int) (E Heap) (F Int) (G Int) (v_7 Int) ) 
    (=>
      (and
        (inv_main1010_2 E G D)
        (Inv_Heap_exp_exp G F v_7)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= 1 v_7)
       (not (= A G))
       (= (TSLL F 1) C)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize E) G)
       (not (<= G 0))
       (= 0 A)))
      )
      (inv_main_21 E G)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main1010_2 F E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|TSLL::colour| B) 1)
       (not (= A E))
       (= (getTSLL C) B)
       (= a!1 C)
       a!2
       ((_ is O_TSLL) C)))
      )
      (inv_main_21 F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Heap) (D Int) (E Int) (F Int) ) 
    (=>
      (and
        (inv_main_21 C F)
        (Inv_Heap_exp_exp F E D)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize C) F))
                (select (HeapContents C) F)
                defObj)))
  (and (= (TSLL E D) B)
       (= a!1 A)
       (= (O_TSLL B) A)
       (>= (HeapSize C) F)
       (not (<= F 0))
       (not (= 0 D))))
      )
      (inv_main_22 C F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_21 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (not (= 0 C))
       (= (|TSLL::colour| A) C)
       (= (getTSLL B) A)
       (= a!1 B)
       a!2
       ((_ is O_TSLL) B)))
      )
      (inv_main_22 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D Int) (E Int) (F HeapObject) (G TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= A (newAddr B))
       a!2
       (= (TSLL E D) G)
       (= (O_TSLL G) F)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C))))
      )
      (Inv_Heap_exp_exp A E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (Inv_Heap_exp_exp K J I)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap F K) E)
       (= (TSLL J I) H)
       (= a!3 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize F) K)
       (not (<= K 0))
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue23 A K F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (select (HeapContents H) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize H) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap H G) E)
       (= a!3 F)
       (= (O_TSLL D) C)
       a!4
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue23 A G H F)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue23 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) E)
     (not (<= E 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp E F A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C AllocResHeap) (D Int) (E Heap) (F HeapObject) (G TSLL) (H HeapObject) (I TSLL) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (inv_main1010_2 K J N)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize E) N))
                (select (HeapContents E) N)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) F))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize K))) C)))
  (and (= (AllocResHeap E D) C)
       (= (TSLL M L) I)
       (= a!1 H)
       (= (O_TSLL I) H)
       (= (O_TSLL G) F)
       (>= (HeapSize E) N)
       (not (<= N 0))
       a!3)))
      )
      (_Glue1_exp_exp N B A D E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main1010_2 K J I)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!2 (or (<= I 0) (not (>= (HeapSize F) I))))
      (a!3 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) G))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize K))) D)))
  (and (= (AllocResHeap F E) D) (= a!1 C) (= (O_TSLL H) G) a!2 a!4)))
      )
      (_Glue1_exp_exp I B A E F C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue1_exp_exp H G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) H)
     (not (<= H 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp H E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue1_exp_exp O L K J I H)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize I) O))
                (HeapCtor (HeapSize I) (store (HeapContents I) O C))
                I))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL N M) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue3_exp_exp B L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue1_exp_exp L K J I H G)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (HeapCtor (HeapSize H) (store (HeapContents H) L D))
                H))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize C) L)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (TSLL I F) E)
       (= (getTSLL G) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue3_exp_exp C K J B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue3_exp_exp G F E D)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize G) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue4_exp_exp F E G J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue3_exp_exp G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue4_exp_exp F E G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue4_exp_exp H G F E D)
        (and (= 0 A)
     (= (|TSLL::colour| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue4_exp_exp L K J O I)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= 0 F)
       (= (|TSLL::colour| A) E)
       (= (TSLL F E) D)
       (= (TSLL N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue6_exp_exp B L K O G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue4_exp_exp L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize C) I))
                (select (HeapContents C) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize C) I)))))
  (and (= a!1 C)
       (= 0 G)
       (= (|TSLL::colour| A) F)
       (= (TSLL G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue6_exp_exp C L K I B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue6_exp_exp H G F E D)
        (and (= (|TSLL::next| C) B)
     (= A 0)
     (= (getTSLL D) C)
     (>= (HeapSize H) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Int) (L Int) (M Int) (N Heap) ) 
    (=>
      (and
        (_Glue6_exp_exp N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize N) K))
                (HeapCtor (HeapSize N) (store (HeapContents N) K E))
                N))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::next| B) G)
       (= A (newAddr C))
       a!3
       (= (TSLL G 0) F)
       (= (TSLL M L) I)
       (= (getTSLL J) B)
       (= (O_TSLL F) E)
       (= (O_TSLL I) H)
       ((_ is O_TSLL) J))))
      )
      (Inv_Heap_exp_exp A M L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H AllocResHeap) (I Int) (J Heap) (K HeapObject) (L TSLL) (M HeapObject) (N Int) (O Int) (P Heap) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue6_exp_exp P O N S M)
        (Inv_Heap_exp_exp S R Q)
        (let ((a!1 (ite (and (not (<= S 0)) (>= (HeapSize P) S))
                (HeapCtor (HeapSize P) (store (HeapContents P) S C))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) F)))
      (a!4 (ite (and (not (<= S 0)) (>= (HeapSize J) S))
                (select (HeapContents J) S)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) H)))
  (and (= a!1 B)
       (= (|TSLL::next| A) E)
       a!3
       (= (AllocResHeap J I) H)
       (= (TSLL E 0) D)
       (= (TSLL O N) G)
       (= (TSLL R Q) L)
       (= (getTSLL M) A)
       (= a!4 K)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (= (O_TSLL L) K)
       (>= (HeapSize J) S)
       (not (<= S 0))
       ((_ is O_TSLL) M))))
      )
      (_Glue9 S I J K)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue6_exp_exp P O N M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize P) M))
                (HeapCtor (HeapSize P) (store (HeapContents P) M D))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F 0) E)
       (= (TSLL O N) H)
       (= (getTSLL L) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL H) G)
       a!5
       ((_ is O_TSLL) L))))
      )
      (_Glue9 M J K C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue9 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) F)
     (not (<= F 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp F E A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C AllocResHeap) (D Int) (E Heap) (F HeapObject) (G TSLL) (H HeapObject) (I TSLL) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (inv_main1010_2 K J N)
        (Inv_Heap_exp_exp N M L)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize E) N))
                (select (HeapContents E) N)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) F))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize K))) C)))
  (and (= (AllocResHeap E D) C)
       (= (TSLL M L) I)
       (= a!1 H)
       (= (O_TSLL I) H)
       (= (O_TSLL G) F)
       (>= (HeapSize E) N)
       (not (<= N 0))
       a!3)))
      )
      (_Glue109_exp_exp N B A D E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (inv_main1010_2 K J I)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!2 (or (<= I 0) (not (>= (HeapSize F) I))))
      (a!3 (HeapCtor (+ 1 (HeapSize K))
                     (store (HeapContents K) (+ 1 (HeapSize K)) G))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize K))) D)))
  (and (= (AllocResHeap F E) D) (= a!1 C) (= (O_TSLL H) G) a!2 a!4)))
      )
      (_Glue109_exp_exp I B A E F C)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue109_exp_exp H G F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) H)
     (not (<= H 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp H E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F HeapObject) (G TSLL) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue109_exp_exp O L K J I H)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize I) O))
                (HeapCtor (HeapSize I) (store (HeapContents I) O C))
                I))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (TSLL J E) D)
       (= (TSLL N M) G)
       (= (getTSLL H) A)
       (= a!2 F)
       (= (O_TSLL D) C)
       (= (O_TSLL G) F)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) H)))
      )
      (_Glue111_exp_exp B L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue109_exp_exp L K J I H G)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (HeapCtor (HeapSize H) (store (HeapContents H) L D))
                H))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize C) L)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (TSLL I F) E)
       (= (getTSLL G) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) G)))
      )
      (_Glue111_exp_exp C K J B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue111_exp_exp G F E D)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize G) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue112_exp_exp F E G J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue111_exp_exp G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue112_exp_exp F E G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue112_exp_exp H G F E D)
        (and (= 0 A)
     (= (|TSLL::colour| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue112_exp_exp L K J O I)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= 0 F)
       (= (|TSLL::colour| A) E)
       (= (TSLL F E) D)
       (= (TSLL N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue114_exp_exp B L K O G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue112_exp_exp L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize C) I))
                (select (HeapContents C) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize C) I)))))
  (and (= a!1 C)
       (= 0 G)
       (= (|TSLL::colour| A) F)
       (= (TSLL G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue114_exp_exp C L K I B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue114_exp_exp H G F E D)
        (and (= (|TSLL::next| C) B)
     (= A 0)
     (= (getTSLL D) C)
     (>= (HeapSize H) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Int) (L Int) (M Int) (N Heap) ) 
    (=>
      (and
        (_Glue114_exp_exp N M L K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize N) K))
                (HeapCtor (HeapSize N) (store (HeapContents N) K E))
                N))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) H))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::next| B) G)
       (= A (newAddr C))
       a!3
       (= (TSLL G 0) F)
       (= (TSLL M L) I)
       (= (getTSLL J) B)
       (= (O_TSLL F) E)
       (= (O_TSLL I) H)
       ((_ is O_TSLL) J))))
      )
      (Inv_Heap_exp_exp A M L)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D Int) (E Int) (F HeapObject) (G TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= A (newAddr B))
       a!2
       (= (TSLL E D) G)
       (= (O_TSLL G) F)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C))))
      )
      (Inv_Heap_exp_exp A E D)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F TSLL) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) B)))
  (and a!2 (= (TSLL D C) F) (= (O_TSLL F) E) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (inv_main1010_2 I H L)
        (Inv_Heap_exp_exp L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) L)
       (not (<= L 0))
       a!3)))
      )
      (_Glue136 L B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue136 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Heap) (E Int) (F Int) ) 
    (=>
      (and
        (_Glue136 F E D C)
        (and (= (|TSLL::colour| B) A)
     (= (getTSLL C) B)
     (>= (HeapSize D) F)
     (not (<= F 0))
     ((_ is O_TSLL) C))
      )
      (Inv_Heap_exp_exp F E A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue121 J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize G) I)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= 0 C)
       (= (|TSLL::colour| E) D)
       (= (TSLL C D) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue50 J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize G) I)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= 0 C)
       (= (|TSLL::colour| E) D)
       (= (TSLL C D) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue150 J I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj))
      (a!3 (or (<= H 0) (not (>= (HeapSize F) H)))))
  (and ((_ is O_TSLL) G)
       (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL J C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue57 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::colour| C) 0)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue70 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_22 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_21 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue45 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue23 J I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize H) I))
                (HeapCtor (HeapSize H) (store (HeapContents H) I A))
                H))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize F) I)))))
  (and ((_ is O_TSLL) G)
       (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL J C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize F) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) A)))
  (and a!2
       (= (AllocResHeap F B) A)
       (= a!3 E)
       (= (O_TSLL D) C)
       a!4
       (not ((_ is O_TSLL) E)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue9 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and ((_ is O_TSLL) G)
       (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue114_exp_exp P O N M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize P) M))
                (HeapCtor (HeapSize P) (store (HeapContents P) M D))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= M 0)) (>= (HeapSize K) M))
                (select (HeapContents K) M)
                defObj))
      (a!5 (or (<= M 0) (not (>= (HeapSize K) M)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and ((_ is O_TSLL) L)
       (= a!1 B)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F 0) E)
       (= (TSLL O N) H)
       (= (getTSLL L) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL H) G)
       a!5
       (not ((_ is O_TSLL) C)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main1010_2 E D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= 0 A) (not (= A D)) (= a!1 B) a!2 (not ((_ is O_TSLL) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D AllocResHeap) (E HeapObject) (F Int) (G Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!3 (ite (and (not (<= F 0)) (>= (HeapSize G) F))
                (select (HeapContents G) F)
                defObj))
      (a!4 (or (<= F 0) (not (>= (HeapSize G) F)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize A))) D)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!2
       (= (AllocResHeap G F) D)
       (= a!3 E)
       (= (O_TSLL C) B)
       a!4
       (not ((_ is O_TSLL) E)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D TSLL) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue136 J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize F) J)))))
  (and ((_ is O_TSLL) G)
       (= a!1 F)
       (= (|TSLL::colour| D) C)
       (= (TSLL I C) B)
       (= (getTSLL G) D)
       (= a!2 E)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
