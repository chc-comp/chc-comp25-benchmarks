(set-logic HORN)

(declare-datatypes ((|TSLL| 0)) (((|TSLL|  (|TSLL::next| Int) (|TSLL::prev| Int) (|TSLL::colour| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_TSLL|  (|getTSLL| TSLL)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue221| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue238_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue124_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue52| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue223| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue185| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue274_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue14| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue161_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue271_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue93| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue17| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue236_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_25| ( Heap Int ) Bool)
(declare-fun |_Glue108_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue120_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue176_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue167_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue247| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue266| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue106_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue174_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue262| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue118_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue172| ( Heap HeapObject ) Bool)
(declare-fun |_Glue180_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue84| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue49| ( Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue102_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue32| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue51| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue57| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main_24| ( Heap Int ) Bool)
(declare-fun |_Glue162_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue165_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue7_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue98| ( Heap HeapObject ) Bool)
(declare-fun |_Glue177_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |_Glue226| ( Heap HeapObject ) Bool)
(declare-fun |_Glue114| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue116| ( Heap HeapObject ) Bool)
(declare-fun |_Glue111| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue4_exp_exp| ( Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue54| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue263| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue3_exp_exp| ( Heap Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue6_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |inv_main1010_2| ( Heap Int Int ) Bool)
(declare-fun |_Glue96| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue34| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue131| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue95| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue230_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue232_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue15| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue134| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue129| ( Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue277_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue246| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue164_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue126_exp_exp| ( Heap Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue18| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue121_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue103_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue253| ( Heap HeapObject ) Bool)
(declare-fun |_Glue269_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue233_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |Inv_Heap_exp_exp| ( Int Int Int Int ) Bool)
(declare-fun |_Glue182_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue46| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue86| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue235_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue251| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue188| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue113| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue256| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue9_exp_exp| ( Heap Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue88| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue159_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue105_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue187| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue275_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue227| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue12| ( Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue135| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue224| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue244| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue1_exp_exp| ( Int Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue132| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue100_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue170| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue55| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue272_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue20| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue179_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue123_exp_exp| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue265| ( Heap HeapObject ) Bool)
(declare-fun |_Glue258| ( Heap HeapObject ) Bool)
(declare-fun |_Glue260| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue280| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue289| ( Heap HeapObject ) Bool)

(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (inv_main1010_2 I H M)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL L K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) M)
       (not (<= M 0))
       a!3)))
      )
      (_Glue46 M B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue46 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue46 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Heap) (D Int) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (inv_main_24 C G)
        (Inv_Heap_exp_exp G F E D)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize C) G))
                (select (HeapContents C) G)
                defObj)))
  (and (= a!1 A)
       (= (O_TSLL B) A)
       (>= (HeapSize C) G)
       (not (<= G 0))
       (= (TSLL F E D) B)))
      )
      (_Glue258 C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_24 C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize C) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue258 C A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue258 E D)
        (Inv_Heap_exp_exp I H G F)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize E) I))
                (select (HeapContents E) I)
                defObj)))
  (and (= (|TSLL::colour| A) 0)
       (= (|TSLL::next| A) I)
       (= (TSLL H G F) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize E) I)
       (not (<= I 0))
       ((_ is O_TSLL) D)))
      )
      (inv_main_25 E H)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Int) (E TSLL) (F HeapObject) (G Heap) ) 
    (=>
      (and
        (_Glue258 G F)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize G) D))
                (select (HeapContents G) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize G) D)))))
  (and ((_ is O_TSLL) F)
       (= (|TSLL::colour| E) 0)
       (= (|TSLL::next| E) D)
       (= (|TSLL::next| B) A)
       (= (getTSLL C) B)
       (= (getTSLL F) E)
       (= a!1 C)
       a!2
       ((_ is O_TSLL) C)))
      )
      (inv_main_25 G A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D Int) (E Int) (F Int) (G HeapObject) (H TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= A (newAddr B))
       a!2
       (= (TSLL F E D) H)
       (= (O_TSLL H) G)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C))))
      )
      (Inv_Heap_exp_exp A F E D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Heap) (D Int) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (inv_main_24 C G)
        (Inv_Heap_exp_exp G F E D)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize C) G))
                (select (HeapContents C) G)
                defObj)))
  (and (= a!1 A)
       (= (O_TSLL B) A)
       (>= (HeapSize C) G)
       (not (<= G 0))
       (= (TSLL F E D) B)))
      )
      (_Glue289 C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_24 C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize C) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue289 C A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (inv_main1010_2 I H M)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL L K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) M)
       (not (<= M 0))
       a!3)))
      )
      (_Glue260 M B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue260 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue260 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue260 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue262 B O G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue260 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue262 G K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue262 F E D)
        (Inv_Heap_exp_exp J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue263 E F J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue262 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue263 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue263 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue263 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F O E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue265 B G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue263 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue265 G F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue265 E D)
        (Inv_Heap_exp_exp I H G F)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize E) I))
                (select (HeapContents E) I)
                defObj)))
  (and (= (|TSLL::next| A) I)
       (= (TSLL H G F) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize E) I)
       (not (<= I 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue266 E I B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue265 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue266 E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue266 G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (inv_main1010_2 I H M)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL L K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) M)
       (not (<= M 0))
       a!3)))
      )
      (_Glue93 M B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue93 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue93 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue93 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue95 B O G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue93 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue95 G K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue95 F E D)
        (Inv_Heap_exp_exp J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue96 E F J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue95 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue96 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue96 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue96 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F O E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue98 B G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue96 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue98 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I HeapObject) (J TSLL) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (inv_main1010_2 L K P)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize F) P))
                (select (HeapContents F) P)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize L))) D)))
  (and (= (AllocResHeap F E) D)
       (= (TSLL O N M) J)
       (= a!1 I)
       (= (O_TSLL J) I)
       (= (O_TSLL H) G)
       (>= (HeapSize F) P)
       (not (<= P 0))
       a!3)))
      )
      (_Glue100_exp_exp P C B A E F I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E AllocResHeap) (F Int) (G Heap) (H HeapObject) (I TSLL) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main1010_2 L K J)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!2 (or (<= J 0) (not (>= (HeapSize G) J))))
      (a!3 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) H))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize L))) E)))
  (and (= (AllocResHeap G F) E) (= a!1 D) (= (O_TSLL I) H) a!2 a!4)))
      )
      (_Glue100_exp_exp J C B A F G D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue100_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) J)
     (not (<= J 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp J F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue100_exp_exp R N M L K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize J) R))
                (HeapCtor (HeapSize J) (store (HeapContents J) R C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue102_exp_exp B R N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue100_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N D))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize C) N))
                (select (HeapContents C) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize C) N)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL J G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue102_exp_exp C N M L K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue102_exp_exp I H G F E D)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj)))
  (and (= (|TSLL::next| A) M)
       (= (TSLL L K J) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize I) M)
       (not (<= M 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue103_exp_exp G F E H I M B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue102_exp_exp I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue103_exp_exp G F E H I B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue103_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue103_exp_exp N M L R K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F R E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue105_exp_exp B N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue103_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G K F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue105_exp_exp C N M L B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue105_exp_exp H G F E D)
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (= (|TSLL::next| A) L)
       (= (TSLL K J I) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue106_exp_exp G F E H L B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue105_exp_exp H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue106_exp_exp G F E H B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue106_exp_exp J I H G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue106_exp_exp N M L K R J)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (HeapCtor (HeapSize K) (store (HeapContents K) R C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= 0 G)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL G F E) D)
       (= (TSLL Q P O) I)
       (= (getTSLL J) A)
       (= a!2 H)
       (= (O_TSLL I) H)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) J)))
      )
      (_Glue108_exp_exp B N M L R H)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue106_exp_exp N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize C) J))
                (select (HeapContents C) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize C) J)))))
  (and (= a!1 C)
       (= 0 H)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL H G F) E)
       (= (getTSLL I) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) I)))
      )
      (_Glue108_exp_exp C N M L J B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue108_exp_exp J I H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 0)
     (= (getTSLL E) D)
     (>= (HeapSize J) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue108_exp_exp P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize P) L))
                (HeapCtor (HeapSize P) (store (HeapContents P) L E))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       a!3
       (= (TSLL H G 0) F)
       (= (TSLL O N M) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap_exp_exp A O N M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M TSLL) (N HeapObject) (O Int) (P Int) (Q Int) (R Heap) (S Int) (T Int) (U Int) (V Int) ) 
    (=>
      (and
        (_Glue108_exp_exp R Q P O V N)
        (Inv_Heap_exp_exp V U T S)
        (let ((a!1 (ite (and (not (<= V 0)) (>= (HeapSize R) V))
                (HeapCtor (HeapSize R) (store (HeapContents R) V C))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= V 0)) (>= (HeapSize K) V))
                (select (HeapContents K) V)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F E 0) D)
       (= (TSLL Q P O) H)
       (= (TSLL U T S) M)
       (= (getTSLL N) A)
       (= a!4 L)
       (= (O_TSLL D) C)
       (= (O_TSLL M) L)
       (= (O_TSLL H) G)
       (>= (HeapSize K) V)
       (not (<= V 0))
       ((_ is O_TSLL) N))))
      )
      (_Glue111 V J K L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (_Glue108_exp_exp R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize R) N))
                (HeapCtor (HeapSize R) (store (HeapContents R) N D))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) J)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       a!3
       (= (AllocResHeap L K) J)
       (= (TSLL G F 0) E)
       (= (TSLL Q P O) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue111 N K L C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue111 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue111 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue113 B O G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue111 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue113 G K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue113 F E D)
        (Inv_Heap_exp_exp J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue114 E F J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue113 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue114 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue114 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue114 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F O E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue116 B G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue114 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue116 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C TSLL) (D Int) (E Heap) (F Int) (G Int) (H Int) (v_8 Int) ) 
    (=>
      (and
        (inv_main1010_2 E H D)
        (Inv_Heap_exp_exp H G F v_8)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize E) H))
                (select (HeapContents E) H)
                defObj)))
  (and (= 1 v_8)
       (not (= A H))
       (= (TSLL G F 1) C)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize E) H)
       (not (<= H 0))
       (= 0 A)))
      )
      (inv_main_24 E H)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main1010_2 F E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|TSLL::colour| B) 1)
       (not (= A E))
       (= (getTSLL C) B)
       (= a!1 C)
       a!2
       ((_ is O_TSLL) C)))
      )
      (inv_main_24 F E)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I HeapObject) (J TSLL) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (inv_main1010_2 L K P)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize F) P))
                (select (HeapContents F) P)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize L))) D)))
  (and (= (AllocResHeap F E) D)
       (= (TSLL O N M) J)
       (= a!1 I)
       (= (O_TSLL J) I)
       (= (O_TSLL H) G)
       (>= (HeapSize F) P)
       (not (<= P 0))
       a!3)))
      )
      (_Glue174_exp_exp P C B A E F I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E AllocResHeap) (F Int) (G Heap) (H HeapObject) (I TSLL) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main1010_2 L K J)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!2 (or (<= J 0) (not (>= (HeapSize G) J))))
      (a!3 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) H))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize L))) E)))
  (and (= (AllocResHeap G F) E) (= a!1 D) (= (O_TSLL I) H) a!2 a!4)))
      )
      (_Glue174_exp_exp J C B A F G D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue174_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) J)
     (not (<= J 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp J F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue174_exp_exp R N M L K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize J) R))
                (HeapCtor (HeapSize J) (store (HeapContents J) R C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue176_exp_exp B R N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue174_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N D))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize C) N))
                (select (HeapContents C) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize C) N)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL J G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue176_exp_exp C N M L K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue176_exp_exp I H G F E D)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj)))
  (and (= (|TSLL::next| A) M)
       (= (TSLL L K J) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize I) M)
       (not (<= M 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue177_exp_exp G F E H I M B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue176_exp_exp I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue177_exp_exp G F E H I B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue177_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue177_exp_exp N M L R K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F R E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue179_exp_exp B N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue177_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G K F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue179_exp_exp C N M L B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue179_exp_exp H G F E D)
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (= (|TSLL::next| A) L)
       (= (TSLL K J I) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue180_exp_exp G F E H L B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue179_exp_exp H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue180_exp_exp G F E H B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue180_exp_exp J I H G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue180_exp_exp N M L K R J)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (HeapCtor (HeapSize K) (store (HeapContents K) R C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= 0 G)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL G F E) D)
       (= (TSLL Q P O) I)
       (= (getTSLL J) A)
       (= a!2 H)
       (= (O_TSLL I) H)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) J)))
      )
      (_Glue182_exp_exp B N M L R H)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue180_exp_exp N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize C) J))
                (select (HeapContents C) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize C) J)))))
  (and (= a!1 C)
       (= 0 H)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL H G F) E)
       (= (getTSLL I) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) I)))
      )
      (_Glue182_exp_exp C N M L J B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue182_exp_exp J I H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 0)
     (= (getTSLL E) D)
     (>= (HeapSize J) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue182_exp_exp P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize P) L))
                (HeapCtor (HeapSize P) (store (HeapContents P) L E))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       a!3
       (= (TSLL H G 0) F)
       (= (TSLL O N M) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap_exp_exp A O N M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M TSLL) (N HeapObject) (O Int) (P Int) (Q Int) (R Heap) (S Int) (T Int) (U Int) (V Int) ) 
    (=>
      (and
        (_Glue182_exp_exp R Q P O V N)
        (Inv_Heap_exp_exp V U T S)
        (let ((a!1 (ite (and (not (<= V 0)) (>= (HeapSize R) V))
                (HeapCtor (HeapSize R) (store (HeapContents R) V C))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= V 0)) (>= (HeapSize K) V))
                (select (HeapContents K) V)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F E 0) D)
       (= (TSLL Q P O) H)
       (= (TSLL U T S) M)
       (= (getTSLL N) A)
       (= a!4 L)
       (= (O_TSLL D) C)
       (= (O_TSLL M) L)
       (= (O_TSLL H) G)
       (>= (HeapSize K) V)
       (not (<= V 0))
       ((_ is O_TSLL) N))))
      )
      (_Glue185 V J K L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (_Glue182_exp_exp R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize R) N))
                (HeapCtor (HeapSize R) (store (HeapContents R) N D))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) J)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       a!3
       (= (AllocResHeap L K) J)
       (= (TSLL G F 0) E)
       (= (TSLL Q P O) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue185 N K L C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue185 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue185 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue187 B O G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue185 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue187 G K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue187 F E D)
        (Inv_Heap_exp_exp J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue188 E F J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue187 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue188 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue188 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D Int) (E Int) (F Int) (G HeapObject) (H TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= A (newAddr B))
       a!2
       (= (TSLL F E D) H)
       (= (O_TSLL H) G)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C))))
      )
      (Inv_Heap_exp_exp A F E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize F) L))
                (select (HeapContents F) L)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap F L) E)
       (= (TSLL K J I) H)
       (= a!3 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize F) L)
       (not (<= L 0))
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue256 A L F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (select (HeapContents H) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize H) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap H G) E)
       (= a!3 F)
       (= (O_TSLL D) C)
       a!4
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue256 A G H F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue256 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) F)
     (not (<= F 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp F G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I HeapObject) (J TSLL) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (inv_main1010_2 L K P)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize F) P))
                (select (HeapContents F) P)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize L))) D)))
  (and (= (AllocResHeap F E) D)
       (= (TSLL O N M) J)
       (= a!1 I)
       (= (O_TSLL J) I)
       (= (O_TSLL H) G)
       (>= (HeapSize F) P)
       (not (<= P 0))
       a!3)))
      )
      (_Glue118_exp_exp P C B A E F I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E AllocResHeap) (F Int) (G Heap) (H HeapObject) (I TSLL) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main1010_2 L K J)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!2 (or (<= J 0) (not (>= (HeapSize G) J))))
      (a!3 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) H))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize L))) E)))
  (and (= (AllocResHeap G F) E) (= a!1 D) (= (O_TSLL I) H) a!2 a!4)))
      )
      (_Glue118_exp_exp J C B A F G D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue118_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) J)
     (not (<= J 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp J F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue118_exp_exp R N M L K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize J) R))
                (HeapCtor (HeapSize J) (store (HeapContents J) R C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue120_exp_exp B R N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue118_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N D))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize C) N))
                (select (HeapContents C) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize C) N)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL J G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue120_exp_exp C N M L K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue120_exp_exp I H G F E D)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj)))
  (and (= (|TSLL::next| A) M)
       (= (TSLL L K J) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize I) M)
       (not (<= M 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue121_exp_exp G F E H I M B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue120_exp_exp I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue121_exp_exp G F E H I B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue121_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue121_exp_exp N M L R K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F R E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue123_exp_exp B N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue121_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G K F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue123_exp_exp C N M L B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue123_exp_exp H G F E D)
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (= (|TSLL::next| A) L)
       (= (TSLL K J I) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue124_exp_exp G F E H L B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue123_exp_exp H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue124_exp_exp G F E H B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue124_exp_exp J I H G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue124_exp_exp N M L K R J)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (HeapCtor (HeapSize K) (store (HeapContents K) R C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= 0 G)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL G F E) D)
       (= (TSLL Q P O) I)
       (= (getTSLL J) A)
       (= a!2 H)
       (= (O_TSLL I) H)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) J)))
      )
      (_Glue126_exp_exp B G N M L R H)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue124_exp_exp N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize C) J))
                (select (HeapContents C) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize C) J)))))
  (and (= a!1 C)
       (= 0 H)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL H G F) E)
       (= (getTSLL I) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) I)))
      )
      (_Glue126_exp_exp C H N M L J B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue126_exp_exp K J I H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 0)
     (= (getTSLL E) D)
     (>= (HeapSize K) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Heap) ) 
    (=>
      (and
        (_Glue126_exp_exp Q P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize Q) L))
                (HeapCtor (HeapSize Q) (store (HeapContents Q) L E))
                Q))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       a!3
       (= (TSLL H G 0) F)
       (= (TSLL O N M) J)
       (= (getTSLL K) B)
       (= (O_TSLL J) I)
       (= (O_TSLL F) E)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap_exp_exp A O N M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M TSLL) (N HeapObject) (O Int) (P Int) (Q Int) (R Int) (S Heap) (T Int) (U Int) (V Int) (W Int) ) 
    (=>
      (and
        (_Glue126_exp_exp S R Q P O W N)
        (Inv_Heap_exp_exp W V U T)
        (let ((a!1 (ite (and (not (<= W 0)) (>= (HeapSize S) W))
                (HeapCtor (HeapSize S) (store (HeapContents S) W C))
                S))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= W 0)) (>= (HeapSize K) W))
                (select (HeapContents K) W)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F E 0) D)
       (= (TSLL Q P O) H)
       (= (TSLL V U T) M)
       (= (getTSLL N) A)
       (= a!4 L)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (= (O_TSLL M) L)
       (>= (HeapSize K) W)
       (not (<= W 0))
       ((_ is O_TSLL) N))))
      )
      (_Glue129 W R J K L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Heap) ) 
    (=>
      (and
        (_Glue126_exp_exp S R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize S) N))
                (HeapCtor (HeapSize S) (store (HeapContents S) N D))
                S))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) J)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       a!3
       (= (AllocResHeap L K) J)
       (= (TSLL G F 0) E)
       (= (TSLL Q P O) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL I) H)
       (= (O_TSLL E) D)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue129 N R K L C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue129 H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) H)
     (not (<= H 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp H F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue129 P L K J I)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize J) P))
                (HeapCtor (HeapSize J) (store (HeapContents J) P C))
                J))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL O N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue131 B P L G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue129 L K J I H)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize I) L))
                (HeapCtor (HeapSize I) (store (HeapContents I) L A))
                I))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize G) L)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue131 G L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue131 G F E D)
        (Inv_Heap_exp_exp K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj)))
  (and (= (|TSLL::next| A) K)
       (= (TSLL J I H) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize G) K)
       (not (<= K 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue132 E F G K B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue131 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue132 E F G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue132 H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue132 L P K J I)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F P E) D)
       (= (TSLL O N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue134 B L G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue132 L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue134 G L F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue134 F E D)
        (Inv_Heap_exp_exp J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue135 E F J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue134 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue135 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue135 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I HeapObject) (J TSLL) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (inv_main1010_2 L K P)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize F) P))
                (select (HeapContents F) P)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize L))) D)))
  (and (= (AllocResHeap F E) D)
       (= (TSLL O N M) J)
       (= a!1 I)
       (= (O_TSLL J) I)
       (= (O_TSLL H) G)
       (>= (HeapSize F) P)
       (not (<= P 0))
       a!3)))
      )
      (_Glue159_exp_exp P C B A E F I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E AllocResHeap) (F Int) (G Heap) (H HeapObject) (I TSLL) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main1010_2 L K J)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!2 (or (<= J 0) (not (>= (HeapSize G) J))))
      (a!3 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) H))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize L))) E)))
  (and (= (AllocResHeap G F) E) (= a!1 D) (= (O_TSLL I) H) a!2 a!4)))
      )
      (_Glue159_exp_exp J C B A F G D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue159_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) J)
     (not (<= J 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp J F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue159_exp_exp R N M L K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize J) R))
                (HeapCtor (HeapSize J) (store (HeapContents J) R C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue161_exp_exp B R N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue159_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N D))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize C) N))
                (select (HeapContents C) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize C) N)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL J G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue161_exp_exp C N M L K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue161_exp_exp I H G F E D)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj)))
  (and (= (|TSLL::next| A) M)
       (= (TSLL L K J) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize I) M)
       (not (<= M 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue162_exp_exp G F E H I M B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue161_exp_exp I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue162_exp_exp G F E H I B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue162_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue162_exp_exp N M L R K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F R E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue164_exp_exp B N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue162_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G K F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue164_exp_exp C N M L B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue164_exp_exp H G F E D)
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (= (|TSLL::next| A) L)
       (= (TSLL K J I) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue165_exp_exp G F E H L B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue164_exp_exp H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue165_exp_exp G F E H B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue165_exp_exp J I H G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue165_exp_exp N M L K R J)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (HeapCtor (HeapSize K) (store (HeapContents K) R C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= 0 G)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL G F E) D)
       (= (TSLL Q P O) I)
       (= (getTSLL J) A)
       (= a!2 H)
       (= (O_TSLL I) H)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) J)))
      )
      (_Glue167_exp_exp B N M L R H)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue165_exp_exp N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize C) J))
                (select (HeapContents C) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize C) J)))))
  (and (= a!1 C)
       (= 0 H)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL H G F) E)
       (= (getTSLL I) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) I)))
      )
      (_Glue167_exp_exp C N M L J B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue167_exp_exp J I H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 0)
     (= (getTSLL E) D)
     (>= (HeapSize J) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue167_exp_exp P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize P) L))
                (HeapCtor (HeapSize P) (store (HeapContents P) L E))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       a!3
       (= (TSLL H G 0) F)
       (= (TSLL O N M) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap_exp_exp A O N M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M TSLL) (N HeapObject) (O Int) (P Int) (Q Int) (R Heap) (S Int) (T Int) (U Int) (V Int) ) 
    (=>
      (and
        (_Glue167_exp_exp R Q P O V N)
        (Inv_Heap_exp_exp V U T S)
        (let ((a!1 (ite (and (not (<= V 0)) (>= (HeapSize R) V))
                (HeapCtor (HeapSize R) (store (HeapContents R) V C))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= V 0)) (>= (HeapSize K) V))
                (select (HeapContents K) V)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F E 0) D)
       (= (TSLL Q P O) H)
       (= (TSLL U T S) M)
       (= (getTSLL N) A)
       (= a!4 L)
       (= (O_TSLL D) C)
       (= (O_TSLL M) L)
       (= (O_TSLL H) G)
       (>= (HeapSize K) V)
       (not (<= V 0))
       ((_ is O_TSLL) N))))
      )
      (_Glue170 V J K L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (_Glue167_exp_exp R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize R) N))
                (HeapCtor (HeapSize R) (store (HeapContents R) N D))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) J)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       a!3
       (= (AllocResHeap L K) J)
       (= (TSLL G F 0) E)
       (= (TSLL Q P O) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue170 N K L C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue170 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue170 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue172 B G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue170 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue172 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (inv_main1010_2 I H M)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL L K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) M)
       (not (<= M 0))
       a!3)))
      )
      (_Glue251 M B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue251 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue251 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue251 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue253 B G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue251 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue253 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I HeapObject) (J TSLL) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (inv_main1010_2 L K P)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize F) P))
                (select (HeapContents F) P)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize L))) D)))
  (and (= (AllocResHeap F E) D)
       (= (TSLL O N M) J)
       (= a!1 I)
       (= (O_TSLL J) I)
       (= (O_TSLL H) G)
       (>= (HeapSize F) P)
       (not (<= P 0))
       a!3)))
      )
      (_Glue230_exp_exp P C B A E F I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E AllocResHeap) (F Int) (G Heap) (H HeapObject) (I TSLL) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main1010_2 L K J)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!2 (or (<= J 0) (not (>= (HeapSize G) J))))
      (a!3 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) H))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize L))) E)))
  (and (= (AllocResHeap G F) E) (= a!1 D) (= (O_TSLL I) H) a!2 a!4)))
      )
      (_Glue230_exp_exp J C B A F G D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue230_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) J)
     (not (<= J 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp J F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue230_exp_exp R N M L K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize J) R))
                (HeapCtor (HeapSize J) (store (HeapContents J) R C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue232_exp_exp B R N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue230_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N D))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize C) N))
                (select (HeapContents C) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize C) N)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL J G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue232_exp_exp C N M L K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue232_exp_exp I H G F E D)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj)))
  (and (= (|TSLL::next| A) M)
       (= (TSLL L K J) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize I) M)
       (not (<= M 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue233_exp_exp G F E H I M B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue232_exp_exp I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue233_exp_exp G F E H I B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue233_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue233_exp_exp N M L R K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F R E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue235_exp_exp B N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue233_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G K F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue235_exp_exp C N M L B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue235_exp_exp H G F E D)
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (= (|TSLL::next| A) L)
       (= (TSLL K J I) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue236_exp_exp G F E H L B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue235_exp_exp H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue236_exp_exp G F E H B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue236_exp_exp J I H G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue236_exp_exp N M L K R J)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (HeapCtor (HeapSize K) (store (HeapContents K) R C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= 0 G)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL G F E) D)
       (= (TSLL Q P O) I)
       (= (getTSLL J) A)
       (= a!2 H)
       (= (O_TSLL I) H)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) J)))
      )
      (_Glue238_exp_exp B N M L R H)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue236_exp_exp N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize C) J))
                (select (HeapContents C) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize C) J)))))
  (and (= a!1 C)
       (= 0 H)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL H G F) E)
       (= (getTSLL I) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) I)))
      )
      (_Glue238_exp_exp C N M L J B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue238_exp_exp J I H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 0)
     (= (getTSLL E) D)
     (>= (HeapSize J) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue238_exp_exp P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize P) L))
                (HeapCtor (HeapSize P) (store (HeapContents P) L E))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       a!3
       (= (TSLL H G 0) F)
       (= (TSLL O N M) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap_exp_exp A O N M)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (inv_main1010_2 I H M)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL L K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) M)
       (not (<= M 0))
       a!3)))
      )
      (_Glue49 M H B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue49 G H B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue49 H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) H)
     (not (<= H 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp H F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue49 P L K J I)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize J) P))
                (HeapCtor (HeapSize J) (store (HeapContents J) P C))
                J))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL O N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue51 B P L G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue49 L K J I H)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize I) L))
                (HeapCtor (HeapSize I) (store (HeapContents I) L A))
                I))
      (a!2 (ite (and (not (<= L 0)) (>= (HeapSize G) L))
                (select (HeapContents G) L)
                defObj))
      (a!3 (or (<= L 0) (not (>= (HeapSize G) L)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue51 G L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue51 G F E D)
        (Inv_Heap_exp_exp K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj)))
  (and (= (|TSLL::next| A) K)
       (= (TSLL J I H) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize G) K)
       (not (<= K 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue52 E F G K B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue51 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue52 E F G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue52 H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue52 L P K J I)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F P E) D)
       (= (TSLL O N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue54 B L G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue52 L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue54 G L F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue54 F E D)
        (Inv_Heap_exp_exp J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue55 E F J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue54 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue55 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) (H Int) ) 
    (=>
      (and
        (_Glue55 H G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue55 L K P J)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize K) P))
                (HeapCtor (HeapSize K) (store (HeapContents K) P C))
                K))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= 0 G)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL G F E) D)
       (= (TSLL O N M) I)
       (= (getTSLL J) A)
       (= a!2 H)
       (= (O_TSLL D) C)
       (= (O_TSLL I) H)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) J)))
      )
      (_Glue57 B L P H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E Int) (F TSLL) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue55 L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (select (HeapContents H) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize H) J)))))
  (and (= a!1 H)
       (= 0 C)
       (= (|TSLL::colour| F) D)
       (= (|TSLL::prev| F) E)
       (= (TSLL C E D) B)
       (= (getTSLL I) F)
       (= a!2 G)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) I)))
      )
      (_Glue57 H L J G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue57 H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 1)
     (= (getTSLL E) D)
     (>= (HeapSize H) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D Int) (E Int) (F TSLL) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue57 J I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize J) H))
                (HeapCtor (HeapSize J) (store (HeapContents J) H B))
                J)))
  (and (= a!1 A)
       (= (|TSLL::prev| F) D)
       (= (|TSLL::next| F) E)
       (= (TSLL E D 1) C)
       (= (getTSLL G) F)
       (= (O_TSLL C) B)
       ((_ is O_TSLL) G)))
      )
      (inv_main1010_2 A I H)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I HeapObject) (J TSLL) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (inv_main1010_2 L K P)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize F) P))
                (select (HeapContents F) P)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize L))) D)))
  (and (= (AllocResHeap F E) D)
       (= (TSLL O N M) J)
       (= a!1 I)
       (= (O_TSLL J) I)
       (= (O_TSLL H) G)
       (>= (HeapSize F) P)
       (not (<= P 0))
       a!3)))
      )
      (_Glue269_exp_exp P C B A E F I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E AllocResHeap) (F Int) (G Heap) (H HeapObject) (I TSLL) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main1010_2 L K J)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!2 (or (<= J 0) (not (>= (HeapSize G) J))))
      (a!3 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) H))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize L))) E)))
  (and (= (AllocResHeap G F) E) (= a!1 D) (= (O_TSLL I) H) a!2 a!4)))
      )
      (_Glue269_exp_exp J C B A F G D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue269_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) J)
     (not (<= J 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp J F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue269_exp_exp R N M L K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize J) R))
                (HeapCtor (HeapSize J) (store (HeapContents J) R C))
                J))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue271_exp_exp B R N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue269_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N D))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize C) N))
                (select (HeapContents C) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize C) N)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL J G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue271_exp_exp C N M L K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue271_exp_exp I H G F E D)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj)))
  (and (= (|TSLL::next| A) M)
       (= (TSLL L K J) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize I) M)
       (not (<= M 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue272_exp_exp G F E H I M B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue271_exp_exp I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue272_exp_exp G F E H I B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue272_exp_exp J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue272_exp_exp N M L R K J I)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F R E) D)
       (= (TSLL Q P O) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue274_exp_exp B N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue272_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G K F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue274_exp_exp C N M L B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue274_exp_exp H G F E D)
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (= (|TSLL::next| A) L)
       (= (TSLL K J I) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue275_exp_exp G F E H L B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue274_exp_exp H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue275_exp_exp G F E H B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue275_exp_exp J I H G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue275_exp_exp N M L K R J)
        (Inv_Heap_exp_exp R Q P O)
        (let ((a!1 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (HeapCtor (HeapSize K) (store (HeapContents K) R C))
                K))
      (a!2 (ite (and (not (<= R 0)) (>= (HeapSize B) R))
                (select (HeapContents B) R)
                defObj)))
  (and (= a!1 B)
       (= 0 G)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL G F E) D)
       (= (TSLL Q P O) I)
       (= (getTSLL J) A)
       (= a!2 H)
       (= (O_TSLL I) H)
       (= (O_TSLL D) C)
       (>= (HeapSize B) R)
       (not (<= R 0))
       ((_ is O_TSLL) J)))
      )
      (_Glue277_exp_exp B N M L R H)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue275_exp_exp N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize C) J))
                (select (HeapContents C) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize C) J)))))
  (and (= a!1 C)
       (= 0 H)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL H G F) E)
       (= (getTSLL I) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) I)))
      )
      (_Glue277_exp_exp C N M L J B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue277_exp_exp J I H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 0)
     (= (getTSLL E) D)
     (>= (HeapSize J) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue277_exp_exp P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize P) L))
                (HeapCtor (HeapSize P) (store (HeapContents P) L E))
                P))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       a!3
       (= (TSLL H G 0) F)
       (= (TSLL O N M) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap_exp_exp A O N M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M TSLL) (N HeapObject) (O Int) (P Int) (Q Int) (R Heap) (S Int) (T Int) (U Int) (V Int) ) 
    (=>
      (and
        (_Glue277_exp_exp R Q P O V N)
        (Inv_Heap_exp_exp V U T S)
        (let ((a!1 (ite (and (not (<= V 0)) (>= (HeapSize R) V))
                (HeapCtor (HeapSize R) (store (HeapContents R) V C))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= V 0)) (>= (HeapSize K) V))
                (select (HeapContents K) V)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F E 0) D)
       (= (TSLL Q P O) H)
       (= (TSLL U T S) M)
       (= (getTSLL N) A)
       (= a!4 L)
       (= (O_TSLL D) C)
       (= (O_TSLL M) L)
       (= (O_TSLL H) G)
       (>= (HeapSize K) V)
       (not (<= V 0))
       ((_ is O_TSLL) N))))
      )
      (_Glue280 V J K L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (_Glue277_exp_exp R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize R) N))
                (HeapCtor (HeapSize R) (store (HeapContents R) N D))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) J)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       a!3
       (= (AllocResHeap L K) J)
       (= (TSLL G F 0) E)
       (= (TSLL Q P O) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue280 N K L C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue280 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D Int) (E Int) (F Int) (G HeapObject) (H TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= A (newAddr B))
       a!2
       (= (TSLL F E D) H)
       (= (O_TSLL H) G)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C))))
      )
      (Inv_Heap_exp_exp A F E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize F) L))
                (select (HeapContents F) L)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap F L) E)
       (= (TSLL K J I) H)
       (= a!3 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize F) L)
       (not (<= L 0))
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue32 A L F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (select (HeapContents H) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize H) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap H G) E)
       (= a!3 F)
       (= (O_TSLL D) C)
       a!4
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue32 A G H F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue32 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) F)
     (not (<= F 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp F G B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue32 K O J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue34 B K O G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue32 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize I) J))
                (HeapCtor (HeapSize I) (store (HeapContents I) J A))
                I))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL K D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue34 G K J F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue34 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize G) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B F A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D Int) (E Int) (F Int) (G HeapObject) (H TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) G))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= A (newAddr B))
       a!2
       (= (TSLL F E D) H)
       (= (O_TSLL H) G)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C))))
      )
      (Inv_Heap_exp_exp A F E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize F) L))
                (select (HeapContents F) L)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap F L) E)
       (= (TSLL K J I) H)
       (= a!3 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize F) L)
       (not (<= L 0))
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue84 L A F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (select (HeapContents H) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize H) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) E)))
  (and (= 0 A)
       a!2
       (= (AllocResHeap H G) E)
       (= a!3 F)
       (= (O_TSLL D) C)
       a!4
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))))
      )
      (_Glue84 G A H F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue84 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue84 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue86 B O K G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue84 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue86 G K J F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue86 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp F B E A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue86 K O J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize K) O))
                (HeapCtor (HeapSize K) (store (HeapContents K) O C))
                K))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F J E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue88 B O G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue86 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D I C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue88 G J F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue88 G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 1)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G TSLL) (H HeapObject) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue88 J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J)))
  (and (= a!1 B)
       (= (|TSLL::prev| G) E)
       (= (|TSLL::next| G) F)
       (= A I)
       (= (TSLL F E 1) D)
       (= (getTSLL H) G)
       (= (O_TSLL D) C)
       ((_ is O_TSLL) H)))
      )
      (inv_main1010_2 B I A)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C TSLL) (D Heap) (E Int) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (inv_main_25 D H)
        (Inv_Heap_exp_exp H G F E)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize D) H))
                (select (HeapContents D) H)
                defObj)))
  (and (not (= A G))
       (not (= G A))
       (= (TSLL G F E) C)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize D) H)
       (not (<= H 0))
       (= 0 A)))
      )
      (inv_main_24 D G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_25 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|TSLL::next| C) B)
       (not (= B A))
       (not (= A B))
       (= (getTSLL D) C)
       (= a!1 D)
       a!2
       ((_ is O_TSLL) D)))
      )
      (inv_main_24 F B)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (inv_main1010_2 I H M)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL L K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) M)
       (not (<= M 0))
       a!3)))
      )
      (_Glue221 M B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue221 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue221 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue221 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue223 B O G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue221 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue223 G K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue223 F E D)
        (Inv_Heap_exp_exp J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue224 E F J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue223 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue224 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue224 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue224 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F O E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue226 B G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue224 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue226 G F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue226 E D)
        (Inv_Heap_exp_exp I H G F)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize E) I))
                (select (HeapContents E) I)
                defObj)))
  (and (= (|TSLL::next| A) I)
       (= (TSLL H G F) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize E) I)
       (not (<= I 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue227 E I B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue226 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue227 E B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue227 G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Heap) (D Int) (E Int) (F Int) (G Int) ) 
    (=>
      (and
        (inv_main_24 C G)
        (Inv_Heap_exp_exp G F E D)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize C) G))
                (select (HeapContents C) G)
                defObj)))
  (and (= (TSLL F E D) B)
       (= a!1 A)
       (= (O_TSLL B) A)
       (>= (HeapSize C) G)
       (not (<= G 0))
       (not (= 0 D))))
      )
      (inv_main_25 C G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_24 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (not (= 0 C))
       (= (|TSLL::colour| A) C)
       (= (getTSLL B) A)
       (= a!1 B)
       a!2
       ((_ is O_TSLL) B)))
      )
      (inv_main_25 E D)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C Heap) (D HeapObject) (E TSLL) (F HeapObject) (G TSLL) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (inv_main1010_2 I H M)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap C B) A)
       (= (TSLL L K J) G)
       (= a!1 F)
       (= (O_TSLL G) F)
       (= (O_TSLL E) D)
       (>= (HeapSize C) M)
       (not (<= M 0))
       a!3)))
      )
      (_Glue244 M B C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize F) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap F B) A) (= a!1 E) (= (O_TSLL D) C) a!2 a!4)))
      )
      (_Glue244 G B F E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue244 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) G)
     (not (<= G 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp G F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue244 O K J I)
        (Inv_Heap_exp_exp O N M L)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL N M L) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue246 B O G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue244 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue246 G K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue246 F E D)
        (Inv_Heap_exp_exp J I H G)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize F) J))
                (select (HeapContents F) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (= (TSLL I H G) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize F) J)
       (not (<= J 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue247 E F J B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue246 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue247 E F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue247 G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E Int) (F HeapObject) (G TSLL) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (inv_main1010_2 J I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize J))
                     (store (HeapContents J) (+ 1 (HeapSize J)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize J))) B)))
  (and a!2 (= (TSLL E D C) G) (= (O_TSLL G) F) (= A (newAddr B)))))
      )
      (Inv_Heap_exp_exp A E D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Int) (F Heap) (G HeapObject) (H TSLL) (I HeapObject) (J TSLL) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (inv_main1010_2 L K P)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize F) P))
                (select (HeapContents F) P)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) G))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize L))) D)))
  (and (= (AllocResHeap F E) D)
       (= (TSLL O N M) J)
       (= a!1 I)
       (= (O_TSLL J) I)
       (= (O_TSLL H) G)
       (>= (HeapSize F) P)
       (not (<= P 0))
       a!3)))
      )
      (_Glue1_exp_exp P K C B A E F I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E AllocResHeap) (F Int) (G Heap) (H HeapObject) (I TSLL) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (inv_main1010_2 L K J)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!2 (or (<= J 0) (not (>= (HeapSize G) J))))
      (a!3 (HeapCtor (+ 1 (HeapSize L))
                     (store (HeapContents L) (+ 1 (HeapSize L)) H))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize L))) E)))
  (and (= (AllocResHeap G F) E) (= a!1 D) (= (O_TSLL I) H) a!2 a!4)))
      )
      (_Glue1_exp_exp J K C B A F G D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue1_exp_exp K J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) K)
     (not (<= K 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp K F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue1_exp_exp S O N M L K J I)
        (Inv_Heap_exp_exp S R Q P)
        (let ((a!1 (ite (and (not (<= S 0)) (>= (HeapSize J) S))
                (HeapCtor (HeapSize J) (store (HeapContents J) S C))
                J))
      (a!2 (ite (and (not (<= S 0)) (>= (HeapSize B) S))
                (select (HeapContents B) S)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL R Q P) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) S)
       (not (<= S 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue3_exp_exp B S O N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue1_exp_exp O N M L K J I H)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize I) O))
                (HeapCtor (HeapSize I) (store (HeapContents I) O D))
                I))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize C) O))
                (select (HeapContents C) O)
                defObj))
      (a!3 (or (<= O 0) (not (>= (HeapSize C) O)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL J G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue3_exp_exp C O N M L K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue3_exp_exp J I H G F E D)
        (Inv_Heap_exp_exp N M L K)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize J) N))
                (select (HeapContents J) N)
                defObj)))
  (and (= (|TSLL::next| A) N)
       (= (TSLL M L K) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize J) N)
       (not (<= N 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue4_exp_exp G F E H I J N B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue3_exp_exp J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize J) B))
                (select (HeapContents J) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize J) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue4_exp_exp G F E H I J B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue4_exp_exp K J I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue4_exp_exp O N M L S K J I)
        (Inv_Heap_exp_exp S R Q P)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= S 0)) (>= (HeapSize B) S))
                (select (HeapContents B) S)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F S E) D)
       (= (TSLL R Q P) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) S)
       (not (<= S 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue6_exp_exp B O N M L G)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue4_exp_exp O N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize C) K))
                (select (HeapContents C) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize C) K)))))
  (and (= a!1 C)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G K F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue6_exp_exp C O N M L B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue6_exp_exp I H G F E D)
        (Inv_Heap_exp_exp M L K J)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (select (HeapContents I) M)
                defObj)))
  (and (= (|TSLL::next| A) M)
       (= (TSLL L K J) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize I) M)
       (not (<= M 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue7_exp_exp E H G F I M B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue6_exp_exp I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue7_exp_exp E H G F I B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue7_exp_exp K J I H G F E)
        (and (= 0 A)
     (= (|TSLL::colour| D) B)
     (= (|TSLL::prev| D) C)
     (= (getTSLL E) D)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F A C B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G Int) (H HeapObject) (I TSLL) (J HeapObject) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue7_exp_exp O N M L K S J)
        (Inv_Heap_exp_exp S R Q P)
        (let ((a!1 (ite (and (not (<= S 0)) (>= (HeapSize K) S))
                (HeapCtor (HeapSize K) (store (HeapContents K) S C))
                K))
      (a!2 (ite (and (not (<= S 0)) (>= (HeapSize B) S))
                (select (HeapContents B) S)
                defObj)))
  (and (= a!1 B)
       (= 0 G)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL G F E) D)
       (= (TSLL R Q P) I)
       (= (getTSLL J) A)
       (= a!2 H)
       (= (O_TSLL D) C)
       (= (O_TSLL I) H)
       (>= (HeapSize B) S)
       (not (<= S 0))
       ((_ is O_TSLL) J)))
      )
      (_Glue9_exp_exp B G O N M L S H)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H Int) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue7_exp_exp O N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize C) J))
                (select (HeapContents C) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize C) J)))))
  (and (= a!1 C)
       (= 0 H)
       (= (|TSLL::colour| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL H G F) E)
       (= (getTSLL I) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) I)))
      )
      (_Glue9_exp_exp C H O N M L J B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue9_exp_exp L K J I H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 0)
     (= (getTSLL E) D)
     (>= (HeapSize L) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (_Glue9_exp_exp R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize R) L))
                (HeapCtor (HeapSize R) (store (HeapContents R) L E))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize D))) C)))
  (and (= a!1 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       a!3
       (= (TSLL H G 0) F)
       (= (TSLL O N M) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap_exp_exp A O N M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M TSLL) (N HeapObject) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Heap) (U Int) (V Int) (W Int) (X Int) ) 
    (=>
      (and
        (_Glue9_exp_exp T S R Q P O X N)
        (Inv_Heap_exp_exp X W V U)
        (let ((a!1 (ite (and (not (<= X 0)) (>= (HeapSize T) X))
                (HeapCtor (HeapSize T) (store (HeapContents T) X C))
                T))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!4 (ite (and (not (<= X 0)) (>= (HeapSize K) X))
                (select (HeapContents K) X)
                defObj)))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) I)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       a!3
       (= (AllocResHeap K J) I)
       (= (TSLL F E 0) D)
       (= (TSLL Q P O) H)
       (= (TSLL W V U) M)
       (= (getTSLL N) A)
       (= a!4 L)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (= (O_TSLL M) L)
       (>= (HeapSize K) X)
       (not (<= X 0))
       ((_ is O_TSLL) N))))
      )
      (_Glue12 X R S J K L)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Heap) ) 
    (=>
      (and
        (_Glue9_exp_exp T S R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize T) N))
                (HeapCtor (HeapSize T) (store (HeapContents T) N D))
                T))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) J)))
  (and (= a!1 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       a!3
       (= (AllocResHeap L K) J)
       (= (TSLL G F 0) E)
       (= (TSLL Q P O) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue12 N R S K L C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue12 I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize E) I)
     (not (<= I 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp I F B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue12 Q M L K J I)
        (Inv_Heap_exp_exp Q P O N)
        (let ((a!1 (ite (and (not (<= Q 0)) (>= (HeapSize J) Q))
                (HeapCtor (HeapSize J) (store (HeapContents J) Q C))
                J))
      (a!2 (ite (and (not (<= Q 0)) (>= (HeapSize B) Q))
                (select (HeapContents B) Q)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL P O N) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) Q)
       (not (<= Q 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue14 B Q M L G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue12 M L K J I H)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (HeapCtor (HeapSize I) (store (HeapContents I) M A))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize G) M)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue14 G M L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue14 H G F E D)
        (Inv_Heap_exp_exp L K J I)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize H) L))
                (select (HeapContents H) L)
                defObj)))
  (and (= (|TSLL::next| A) L)
       (= (TSLL K J I) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize H) L)
       (not (<= L 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue15 E F G H L B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue14 H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue15 E F G H B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue15 I H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::next| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E B G A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue15 M L Q K J I)
        (Inv_Heap_exp_exp Q P O N)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J C))
                K))
      (a!2 (ite (and (not (<= Q 0)) (>= (HeapSize B) Q))
                (select (HeapContents B) Q)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F Q E) D)
       (= (TSLL P O N) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) Q)
       (not (<= Q 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue17 B M L G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue15 M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue17 G M L F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue17 G F E D)
        (Inv_Heap_exp_exp K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj)))
  (and (= (|TSLL::next| A) K)
       (= (TSLL J I H) C)
       (= (getTSLL D) A)
       (= a!1 B)
       (= (O_TSLL C) B)
       (>= (HeapSize G) K)
       (not (<= K 0))
       ((_ is O_TSLL) D)))
      )
      (_Glue18 E F G K B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue17 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue18 E F G B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue18 H G F E D)
        (and (= (|TSLL::colour| C) A)
     (= (|TSLL::prev| C) B)
     (= (getTSLL D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap_exp_exp E G B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I HeapObject) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue18 L K J P I)
        (Inv_Heap_exp_exp P O N M)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize J) P))
                (HeapCtor (HeapSize J) (store (HeapContents J) P C))
                J))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::colour| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL K F E) D)
       (= (TSLL O N M) H)
       (= (getTSLL I) A)
       (= a!2 G)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) I)))
      )
      (_Glue20 B L P G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue18 L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize G) I)))))
  (and (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL K D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue20 G L I F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D TSLL) (E HeapObject) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue20 H G F E)
        (and (= (|TSLL::prev| D) B)
     (= (|TSLL::next| D) C)
     (= A 1)
     (= (getTSLL E) D)
     (>= (HeapSize H) F)
     (not (<= F 0))
     ((_ is O_TSLL) E))
      )
      (Inv_Heap_exp_exp F C B A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D Int) (E Int) (F TSLL) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue20 J I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize J) H))
                (HeapCtor (HeapSize J) (store (HeapContents J) H B))
                J)))
  (and (= a!1 A)
       (= (|TSLL::prev| F) D)
       (= (|TSLL::next| F) E)
       (= (TSLL E D 1) C)
       (= (getTSLL G) F)
       (= (O_TSLL C) B)
       ((_ is O_TSLL) G)))
      )
      (inv_main1010_2 A I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue46 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main1010_2 E D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize E) D))
                (select (HeapContents E) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize E) D)))))
  (and (= 0 A) (not (= A D)) (= a!1 B) a!2 (not ((_ is O_TSLL) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D AllocResHeap) (E HeapObject) (F Int) (G Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!3 (ite (and (not (<= F 0)) (>= (HeapSize G) F))
                (select (HeapContents G) F)
                defObj))
      (a!4 (or (<= F 0) (not (>= (HeapSize G) F)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize A))) D)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       a!2
       (= (AllocResHeap G F) D)
       (= a!3 E)
       (= (O_TSLL C) B)
       a!4
       (not ((_ is O_TSLL) E)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue289 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::colour| C) 0)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B Int) (C HeapObject) (D TSLL) (E HeapObject) (F Heap) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1010_2 I H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) C)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize F) G))
                (select (HeapContents F) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize F) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) A)))
  (and a!2
       (= (AllocResHeap F B) A)
       (= a!3 E)
       (= (O_TSLL D) C)
       a!4
       (not ((_ is O_TSLL) E)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E Int) (F TSLL) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue266 K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (select (HeapContents H) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize H) J)))))
  (and ((_ is O_TSLL) I)
       (= a!1 H)
       (= 0 C)
       (= (|TSLL::colour| F) D)
       (= (|TSLL::prev| F) E)
       (= (TSLL C E D) B)
       (= (getTSLL I) F)
       (= a!2 G)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue98 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_25 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue116 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_24 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue188 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue256 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize I) J))
                (HeapCtor (HeapSize I) (store (HeapContents I) J A))
                I))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL K D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue135 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize G) I)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL K D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue172 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue253 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (_Glue238_exp_exp R Q P O N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize R) N))
                (HeapCtor (HeapSize R) (store (HeapContents R) N D))
                R))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) J)))
  (and ((_ is O_TSLL) M)
       (= a!1 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       a!3
       (= (AllocResHeap L K) J)
       (= (TSLL G F 0) E)
       (= (TSLL Q P O) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       (not ((_ is O_TSLL) C)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue280 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue34 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize K) I))
                (HeapCtor (HeapSize K) (store (HeapContents K) I A))
                K))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize G) I)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D J C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E Int) (F TSLL) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue227 K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (select (HeapContents H) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize H) J)))))
  (and ((_ is O_TSLL) I)
       (= a!1 H)
       (= 0 C)
       (= (|TSLL::colour| F) D)
       (= (|TSLL::prev| F) E)
       (= (TSLL C E D) B)
       (= (getTSLL I) F)
       (= a!2 G)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) G))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue247 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::colour| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
