(set-logic HORN)

(declare-datatypes ((|node| 0)) (((|node|  (|node::h| Int) (|node::n| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_node|  (|getnode| node)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue3| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main_7| ( Heap Int ) Bool)
(declare-fun |inv_main534_3| ( Heap Int ) Bool)
(declare-fun |Inv_Heap_exp_exp| ( Int Int Int ) Bool)
(declare-fun |_Glue1| ( Int Int Heap HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |_Glue5| ( Int Heap HeapObject ) Bool)

(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F node) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main534_3 H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize H))) B)))
  (and (= A (newAddr B)) (= (node D C) F) (= (O_node F) E) a!2)))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E node) (F HeapObject) (G node) (H Int) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (inv_main534_3 I H)
        (Inv_Heap_exp_exp L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) B)))
  (and (= (AllocResHeap C L) B)
       (= 0 A)
       (not (= L A))
       (= (node K J) G)
       (= a!1 F)
       (= (O_node G) F)
       (= (O_node E) D)
       (>= (HeapSize C) L)
       (not (<= L 0))
       a!3)))
      )
      (_Glue5 L C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main534_3 I H)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize E) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) B))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap E G) A)
       (= 0 F)
       (not (= G F))
       (= a!1 D)
       (= (O_node C) B)
       a!2
       a!4)))
      )
      (_Glue5 G E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Heap) (F Int) ) 
    (=>
      (and
        (_Glue5 F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize E) F)
     (not (<= F 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp F A B)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F node) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main534_3 H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize H))) B)))
  (and (= A (newAddr B)) (= (node D C) F) (= (O_node F) E) a!2)))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main534_3 C B)
        (and (not (= B A)) (= 0 A))
      )
      (inv_main_7 C B)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Int) (D Int) (E HeapObject) (F node) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main534_3 H G)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize H))
                     (store (HeapContents H) (+ 1 (HeapSize H)) E))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize H))) B)))
  (and (= A (newAddr B)) (= (node D C) F) (= (O_node F) E) a!2)))
      )
      (Inv_Heap_exp_exp A D C)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E node) (F HeapObject) (G node) (H Int) (I Heap) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (inv_main534_3 I H)
        (Inv_Heap_exp_exp L K J)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize C) L))
                (select (HeapContents C) L)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) D))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize I))) B)))
  (and (= (AllocResHeap C L) B)
       (= 0 A)
       (not (= L A))
       (= (node K J) G)
       (= a!1 F)
       (= (O_node G) F)
       (= (O_node E) D)
       (>= (HeapSize C) L)
       (not (<= L 0))
       a!3)))
      )
      (_Glue1 H L C F)
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main534_3 I H)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize E) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) B))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize I))) A)))
  (and (= (AllocResHeap E G) A)
       (= 0 F)
       (not (= G F))
       (= a!1 D)
       (= (O_node C) B)
       a!2
       a!4)))
      )
      (_Glue1 H G E D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Heap) (F Int) (G Int) ) 
    (=>
      (and
        (_Glue1 G F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize E) F)
     (not (<= F 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp F A B)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue1 J M I H)
        (Inv_Heap_exp_exp M L K)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (HeapCtor (HeapSize I) (store (HeapContents I) M C))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize B) M))
                (select (HeapContents B) M)
                defObj)))
  (and (= a!1 B)
       (= (|node::n| A) E)
       (= (node 1 E) D)
       (= (node L K) G)
       (= (getnode H) A)
       (= a!2 F)
       (= (O_node D) C)
       (= (O_node G) F)
       (>= (HeapSize B) M)
       (not (<= M 0))
       ((_ is O_node) H)))
      )
      (_Glue3 B J M F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue1 J I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize H) I))
                (HeapCtor (HeapSize H) (store (HeapContents H) I A))
                H))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize F) I)))))
  (and (= a!1 F)
       (= (|node::n| D) C)
       (= (node 1 C) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       ((_ is O_node) G)))
      )
      (_Glue3 F J I E)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue3 F E D C)
        (and (= (|node::h| B) A)
     (= (getnode C) B)
     (>= (HeapSize F) D)
     (not (<= D 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp D A E)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C node) (D Int) (E node) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue3 I H G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize I) G))
                (HeapCtor (HeapSize I) (store (HeapContents I) G B))
                I)))
  (and (= a!1 A)
       (= (|node::h| E) D)
       (= (node D H) C)
       (= (getnode F) E)
       (= (O_node C) B)
       ((_ is O_node) F)))
      )
      (inv_main534_3 A G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) ) 
    (=>
      (and
        (and (= 0 A) (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B))
      )
      (inv_main534_3 B A)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Heap) (E Int) (F Int) (v_6 Int) ) 
    (=>
      (and
        (inv_main_7 D F)
        (Inv_Heap_exp_exp F v_6 E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 1 v_6)
       (not (= E A))
       (= (node 1 E) C)
       (= a!1 B)
       (= (O_node C) B)
       (>= (HeapSize D) F)
       (not (<= F 0))
       (= 0 A)))
      )
      (inv_main_7 D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_7 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|node::n| C) B)
       (= (|node::h| C) 1)
       (not (= B A))
       (= (getnode D) C)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main_7 F B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_7 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Heap) (I Int) ) 
    (=>
      (and
        (_Glue5 I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize H) I))
                (HeapCtor (HeapSize H) (store (HeapContents H) I A))
                H))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize F) I)))))
  (and ((_ is O_node) G)
       (= a!1 F)
       (= (|node::n| D) C)
       (= (node 1 C) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       (not ((_ is O_node) E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A AllocResHeap) (B HeapObject) (C node) (D HeapObject) (E Heap) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main534_3 I H)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize I))
                     (store (HeapContents I) (+ 1 (HeapSize I)) B)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj))
      (a!4 (or (<= G 0) (not (>= (HeapSize E) G)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize I))) A)))
  (and a!2
       (= (AllocResHeap E G) A)
       (= 0 F)
       (not (= G F))
       (= a!3 D)
       (= (O_node C) B)
       a!4
       (not ((_ is O_node) D)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
