(set-logic HORN)

(declare-datatypes ((|TSLL| 0)) (((|TSLL|  (|TSLL::next| Int) (|TSLL::prev| Int) (|TSLL::data| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_TSLL|  (|getTSLL| TSLL)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue36_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue119| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue121| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue76_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue63| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue107_exp_exp| ( Heap Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue70_exp_exp| ( Int Int Int Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue81| ( Heap HeapObject ) Bool)
(declare-fun |_Glue105_exp_exp| ( Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue57| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main_32| ( Heap Int ) Bool)
(declare-fun |_Glue46| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue84_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue44| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue55| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue74_exp_exp| ( Heap Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue42| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue23| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue122| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue116_exp_exp| ( Int Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue126| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue90| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue24| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue59| ( Heap HeapObject ) Bool)
(declare-fun |inv_main_17| ( Heap Int Int ) Bool)
(declare-fun |_Glue26| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue125| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |_Glue98| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue60| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue0_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue32| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue108_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue21| ( Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue87| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue62| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue104_exp_exp| ( Heap Int Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue8_exp_exp| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue102_exp_exp| ( Int Int Int Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue3| ( Int Int Heap HeapObject ) Bool)
(declare-fun |_Glue72_exp_exp| ( Heap Int Int Int Int Int HeapObject ) Bool)
(declare-fun |_Glue5| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue89| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue124| ( Heap Int Int Int HeapObject ) Bool)
(declare-fun |_Glue11| ( Int Int Heap HeapObject ) Bool)
(declare-fun |inv_main1015_3| ( Heap Int Int Int ) Bool)
(declare-fun |_Glue100| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue65| ( Heap HeapObject ) Bool)
(declare-fun |_Glue6| ( Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_4| ( Heap Int Int ) Bool)
(declare-fun |_Glue39| ( Heap HeapObject ) Bool)
(declare-fun |_Glue129| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue92| ( Heap HeapObject ) Bool)
(declare-fun |_Glue130| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue13| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue27| ( Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue79| ( Int Int Heap HeapObject ) Bool)
(declare-fun |Inv_Heap| ( Int HeapObject ) Bool)
(declare-fun |_Glue127| ( Heap Int Int HeapObject ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main1015_3 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue60 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main1015_3 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue60 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue60 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL G D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue60 I K H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL H D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue62 F K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue60 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue62 G J F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue62 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|TSLL::next| A) F)
       (= (getTSLL B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue63 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue62 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue63 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) (I Int) ) 
    (=>
      (and
        (_Glue63 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D I C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue63 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue65 F J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue63 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue65 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (inv_main_4 E D G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (>= (HeapSize E) G) (not (<= G 0)) (= a!1 F)))
      )
      (_Glue36_exp_exp C B A E G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_4 G F E)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize G) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj)))
  (and a!1 (= a!2 D)))
      )
      (_Glue36_exp_exp C B A G E D)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue36_exp_exp K J I H G F)
        (and (= (|TSLL::prev| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E D 1) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue36_exp_exp P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L E))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       (= (TSLL H G 1) F)
       (= (TSLL P O N) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       (= A (newAddr B))
       (= (O_TSLL E) D)
       a!2)))
      )
      (Inv_Heap A D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) E)))
  (and (= (AllocResHeap F H) E)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       (= 0 A)
       (= a!1 G)
       (= (O_TSLL D) C)
       (>= (HeapSize F) H)
       (not (<= H 0))
       a!3)))
      )
      (_Glue55 A H F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (select (HeapContents H) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize H) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize B))) E)))
  (and (= (AllocResHeap H G) E)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       (= 0 A)
       (= a!1 F)
       (= (O_TSLL D) C)
       a!2
       a!4)))
      )
      (_Glue55 A G H F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue55 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL I D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize G) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (inv_main1015_3 G F I E)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= a!1 H) (>= (HeapSize G) I) (not (<= I 0)) (= 0 D)))
      )
      (_Glue102_exp_exp D C B A F G I E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main1015_3 I H G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize I) G))
                (select (HeapContents I) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize I) G)))))
  (and (= a!1 D) a!2 (= 0 E)))
      )
      (_Glue102_exp_exp E C B A H I G F D)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue102_exp_exp N M L K J I H G F)
        (and (= (|TSLL::data| A) D)
     (= (|TSLL::prev| A) E)
     (= (TSLL G E D) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O HeapObject) (P Int) ) 
    (=>
      (and
        (_Glue102_exp_exp N M L K J I P H G)
        (Inv_Heap P O)
        (let ((a!1 (ite (and (not (<= P 0)) (>= (HeapSize I) P))
                (HeapCtor (HeapSize I) (store (HeapContents I) P C))
                I))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::data| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL H F E) D)
       (= (getTSLL G) A)
       (= a!2 O)
       (= (O_TSLL D) C)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue104_exp_exp B N M L K J P O)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Int) (K Heap) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue102_exp_exp P O N M L K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J D))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize C) J))
                (select (HeapContents C) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize C) J)))))
  (and (= a!1 C)
       (= (|TSLL::data| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL I G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue104_exp_exp C P O N M L J B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue104_exp_exp I H G F E D C B)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (select (HeapContents I) K)
                defObj)))
  (and (= (|TSLL::next| A) K)
       (= (getTSLL B) A)
       (= a!1 J)
       (>= (HeapSize I) K)
       (not (<= K 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue105_exp_exp C D G F E H I K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue104_exp_exp K J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize K) B))
                (select (HeapContents K) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize K) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue105_exp_exp E F I H G J K B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue105_exp_exp N M L K J I H G F)
        (and (= (|TSLL::data| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E N D) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) (O HeapObject) (P Int) ) 
    (=>
      (and
        (_Glue105_exp_exp P N M L K J I H G)
        (Inv_Heap P O)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H C))
                I))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize B) P))
                (select (HeapContents B) P)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::data| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F P E) D)
       (= (getTSLL G) A)
       (= a!2 O)
       (= (O_TSLL D) C)
       (>= (HeapSize B) P)
       (not (<= P 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue107_exp_exp B N M L K J O)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue105_exp_exp P O N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize C) P))
                (select (HeapContents C) P)
                defObj))
      (a!3 (or (<= P 0) (not (>= (HeapSize C) P)))))
  (and (= a!1 C)
       (= (|TSLL::data| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G P F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue107_exp_exp C O N M L K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Int) (H Heap) (I HeapObject) (J Int) ) 
    (=>
      (and
        (_Glue107_exp_exp H G F E D C B)
        (Inv_Heap J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (select (HeapContents H) J)
                defObj)))
  (and (= (|TSLL::next| A) J)
       (not (= C J))
       (= (getTSLL B) A)
       (= a!1 I)
       (>= (HeapSize H) J)
       (not (<= J 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue108_exp_exp F E D G H J I)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue107_exp_exp J I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize J) B))
                (select (HeapContents J) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize J) B)))))
  (and (= (|TSLL::next| C) B)
       (not (= E B))
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       ((_ is O_TSLL) D)))
      )
      (_Glue108_exp_exp H G F I J B A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue108_exp_exp L K J I H G F)
        (and (= (|TSLL::prev| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E D 0) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue108_exp_exp Q P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L E))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       (= (TSLL H G 0) F)
       (= (TSLL Q P O) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Int) (C Heap) (D AllocResHeap) (E Heap) (F HeapObject) (G TSLL) (H Int) (I Int) (J HeapObject) (K TSLL) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue108_exp_exp R Q P O N M L)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) J)))
      (a!3 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M F))
                N)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= a!3 E)
       (= (newHeap D) C)
       (= (newAddr D) B)
       (= (|TSLL::prev| A) H)
       (= (|TSLL::next| A) I)
       (= (TSLL I H 0) G)
       (= (TSLL R Q P) K)
       (= (getTSLL L) A)
       (= (O_TSLL G) F)
       (= (O_TSLL K) J)
       ((_ is O_TSLL) L))))
      )
      (inv_main1015_3 C O M B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main_17 D C F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|TSLL::data| B) 0)
       (= (|TSLL::next| B) A)
       (= (getTSLL E) B)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_TSLL) E)))
      )
      (inv_main_17 D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C HeapObject) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_17 F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= (|TSLL::data| B) 0)
       (= (|TSLL::next| B) A)
       (= (getTSLL C) B)
       (= a!1 C)
       a!2
       ((_ is O_TSLL) C)))
      )
      (inv_main_17 F E A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (Inv_Heap D C)
        (inv_main_17 B A D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (>= (HeapSize B) D) (not (<= D 0)) (= a!1 C)))
      )
      (_Glue39 B C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_17 D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize D) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue39 D A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main1015_3 D C F B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= a!1 E) (>= (HeapSize D) F) (not (<= F 0)) (= 0 A)))
      )
      (_Glue21 A C D F B E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main1015_3 F E D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue21 B E F D C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue21 K J I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL G D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue21 K J I M H G)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize I) M))
                (HeapCtor (HeapSize I) (store (HeapContents I) M A))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize F) M))
                (select (HeapContents F) M)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL H D C) B)
       (= (getTSLL G) E)
       (= a!2 L)
       (= (O_TSLL B) A)
       (>= (HeapSize F) M)
       (not (<= M 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue23 F K J M L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue21 M L K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue23 G M L J F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Int) (E Int) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (_Glue23 F E D C B)
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj)))
  (and (= (|TSLL::next| A) H)
       (= (getTSLL B) A)
       (= a!1 G)
       (>= (HeapSize F) H)
       (not (<= H 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue24 C D E F H G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue23 H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue24 E F G H B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue24 K J I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D K C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L HeapObject) (M Int) ) 
    (=>
      (and
        (_Glue24 M K J I H G)
        (Inv_Heap M L)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize F) M))
                (select (HeapContents F) M)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D M C) B)
       (= (getTSLL G) E)
       (= a!2 L)
       (= (O_TSLL B) A)
       (>= (HeapSize F) M)
       (not (<= M 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue26 F K J L)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue24 M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize G) M))
                (select (HeapContents G) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize G) M)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D M C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue26 G L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (_Glue26 E D C B)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|TSLL::next| A) G)
       (not (= C G))
       (= (getTSLL B) A)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue27 D E G F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue26 G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize G) B))
                (select (HeapContents G) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize G) B)))))
  (and (= (|TSLL::next| C) B)
       (not (= E B))
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       ((_ is O_TSLL) D)))
      )
      (_Glue27 F G B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) (I Int) ) 
    (=>
      (and
        (_Glue27 I H G F)
        (and (= (|TSLL::prev| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D C 0) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D Int) (E Int) (F TSLL) (G HeapObject) (H Int) (I Heap) (J Int) ) 
    (=>
      (and
        (_Glue27 J I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H B))
                I)))
  (and (= a!1 A)
       (= (|TSLL::prev| F) D)
       (= (|TSLL::next| F) E)
       (= (TSLL E D 0) C)
       (= (getTSLL G) F)
       (= (O_TSLL C) B)
       ((_ is O_TSLL) G)))
      )
      (inv_main_4 A J H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main_17 C B E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue126 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_17 E D C)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 B)))
      )
      (_Glue126 A D E B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B TSLL) (C HeapObject) (D Heap) (E Int) (F HeapObject) (G Int) (v_7 Int) ) 
    (=>
      (and
        (_Glue126 E v_7 D C)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize D) G))
                (select (HeapContents D) G)
                defObj)))
  (and (= v_7 E)
       ((_ is O_TSLL) F)
       (= (|TSLL::data| B) 1)
       (= (|TSLL::data| A) 2)
       (= (|TSLL::next| B) G)
       (= (getTSLL C) B)
       (= (getTSLL F) A)
       (= a!1 F)
       (>= (HeapSize D) G)
       (not (<= G 0))
       ((_ is O_TSLL) C)))
      )
      (inv_main_32 D E)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D TSLL) (E HeapObject) (F Heap) (G Int) (v_7 Int) ) 
    (=>
      (and
        (_Glue126 G v_7 F E)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize F) C))
                (select (HeapContents F) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize F) C)))))
  (and (= v_7 G)
       ((_ is O_TSLL) E)
       (= (|TSLL::data| D) 1)
       (= (|TSLL::data| A) 2)
       (= (|TSLL::next| D) C)
       (= (getTSLL B) A)
       (= (getTSLL E) D)
       (= a!1 B)
       a!2
       ((_ is O_TSLL) B)))
      )
      (inv_main_32 F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main1015_3 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue127 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main1015_3 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue127 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue127 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL G D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue127 I K H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL H D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue129 F K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue127 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue129 G J F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue129 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|TSLL::next| A) F)
       (= (getTSLL B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue130 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue129 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue130 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) (I Int) ) 
    (=>
      (and
        (_Glue130 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D I C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       (= A (newAddr B))
       (= (O_TSLL E) D)
       a!2)))
      )
      (Inv_Heap A D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G TSLL) (H AllocResHeap) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (select (HeapContents I) K)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize E))) H)))
  (and (= (AllocResHeap I K) H)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E)
       (= 0 D)
       (= a!1 J)
       (= (O_TSLL G) F)
       (>= (HeapSize I) K)
       (not (<= K 0))
       a!3)))
      )
      (_Glue70_exp_exp K C B A D I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) ) 
    (=>
      (and
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (select (HeapContents K) J)
                defObj))
      (a!2 (or (<= J 0) (not (>= (HeapSize K) J))))
      (a!3 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) G))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize E))) I)))
  (and (= (AllocResHeap K J) I)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E)
       (= 0 D)
       (= a!1 F)
       (= (O_TSLL H) G)
       a!2
       a!4)))
      )
      (_Glue70_exp_exp J C B A D K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Heap) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue70_exp_exp L K J I H G F)
        (and (= (|TSLL::data| A) D)
     (= (|TSLL::prev| A) E)
     (= (TSLL H E D) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize G) L)
     (not (<= L 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap L B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) (L Int) (M HeapObject) (N Int) ) 
    (=>
      (and
        (_Glue70_exp_exp N L K J I H G)
        (Inv_Heap N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize H) N))
                (HeapCtor (HeapSize H) (store (HeapContents H) N C))
                H))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize B) N))
                (select (HeapContents B) N)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::data| A) E)
       (= (|TSLL::prev| A) F)
       (= (TSLL I F E) D)
       (= (getTSLL G) A)
       (= a!2 M)
       (= (O_TSLL D) C)
       (>= (HeapSize B) N)
       (not (<= N 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue72_exp_exp B N L K J I M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue70_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N D))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize C) N))
                (select (HeapContents C) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize C) N)))))
  (and (= a!1 C)
       (= (|TSLL::data| A) F)
       (= (|TSLL::prev| A) G)
       (= (TSLL J G F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue72_exp_exp C N M L K J B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Int) (I Int) (J Int) (K Int) (L Heap) ) 
    (=>
      (and
        (_Glue72_exp_exp L K J I H G F)
        (and (= (|TSLL::data| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E G D) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize L) K)
     (not (<= K 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap K B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H Int) (I Int) (J Int) (K Int) (L Heap) (M HeapObject) (N Int) ) 
    (=>
      (and
        (_Glue72_exp_exp L N K J I H G)
        (Inv_Heap N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (HeapCtor (HeapSize L) (store (HeapContents L) N C))
                L))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize B) N))
                (select (HeapContents B) N)
                defObj)))
  (and (= a!1 B)
       (= (|TSLL::data| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F H E) D)
       (= (getTSLL G) A)
       (= a!2 M)
       (= (O_TSLL D) C)
       (>= (HeapSize B) N)
       (not (<= N 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue74_exp_exp B N K J I M)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I Int) (J Int) (K Int) (L Int) (M Int) (N Heap) ) 
    (=>
      (and
        (_Glue72_exp_exp N M L K J I H)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M D))
                N))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize C) M))
                (select (HeapContents C) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize C) M)))))
  (and (= a!1 C)
       (= (|TSLL::data| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G I F) E)
       (= (getTSLL H) A)
       (= a!2 B)
       (= (O_TSLL E) D)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue74_exp_exp C M L K J B)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Int) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue74_exp_exp K J I H G F)
        (and (= (|TSLL::prev| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E D 0) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize K) J)
     (not (<= J 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap J B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Int) (N Int) (O Int) (P Heap) ) 
    (=>
      (and
        (_Glue74_exp_exp P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I)))
      (a!3 (ite (and (not (<= O 0)) (>= (HeapSize P) O))
                (HeapCtor (HeapSize P) (store (HeapContents P) O E))
                P)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       (= (TSLL H G 0) F)
       (= (TSLL N M L) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H TSLL) (I Int) (J Int) (K HeapObject) (L TSLL) (M HeapObject) (N Int) (O Int) (P Int) (Q Int) (R Heap) ) 
    (=>
      (and
        (_Glue74_exp_exp R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) K)))
      (a!3 (ite (and (not (<= Q 0)) (>= (HeapSize R) Q))
                (HeapCtor (HeapSize R) (store (HeapContents R) Q G))
                R)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) E)))
  (and a!2
       (= a!3 F)
       (= (newHeap E) D)
       (= (newAddr E) C)
       (= (|TSLL::prev| B) I)
       (= (|TSLL::next| B) J)
       (= A Q)
       (= (TSLL J I 0) H)
       (= (TSLL P O N) L)
       (= (getTSLL M) B)
       (= (O_TSLL H) G)
       (= (O_TSLL L) K)
       ((_ is O_TSLL) M))))
      )
      (inv_main1015_3 D A Q C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (inv_main_4 E D G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (>= (HeapSize E) G) (not (<= G 0)) (= a!1 F)))
      )
      (_Glue0_exp_exp C B A E G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_4 G F E)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize G) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj)))
  (and a!1 (= a!2 D)))
      )
      (_Glue0_exp_exp C B A G E D)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue0_exp_exp K J I H G F)
        (and (= (|TSLL::prev| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E D 1) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue0_exp_exp P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L E))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       (= (TSLL H G 1) F)
       (= (TSLL P O N) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Heap) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue0_exp_exp P O N M R L)
        (Inv_Heap R Q)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= R 0)) (>= (HeapSize M) R))
                (HeapCtor (HeapSize M) (store (HeapContents M) R C))
                M))
      (a!4 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (select (HeapContents K) R)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F E 1) D)
       (= (TSLL P O N) H)
       (= (getTSLL L) A)
       (= a!4 Q)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize K) R)
       (not (<= R 0))
       ((_ is O_TSLL) L))))
      )
      (_Glue3 R J K Q)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Heap) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue0_exp_exp R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!3 (ite (and (not (<= N 0)) (>= (HeapSize O) N))
                (HeapCtor (HeapSize O) (store (HeapContents O) N D))
                O))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) J)))
  (and a!2
       (= (AllocResHeap L K) J)
       (= a!3 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G F 1) E)
       (= (TSLL R Q P) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue3 N K L C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue3 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL H D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize G) I)
     (not (<= I 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue3 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue5 F K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue3 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue5 G K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue5 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|TSLL::next| A) F)
       (= (getTSLL B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue6 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue5 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue6 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) (I Int) ) 
    (=>
      (and
        (_Glue6 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D I C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (inv_main_4 E D G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (>= (HeapSize E) G) (not (<= G 0)) (= a!1 F)))
      )
      (_Glue76_exp_exp C B A E G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_4 G F E)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize G) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj)))
  (and a!1 (= a!2 D)))
      )
      (_Glue76_exp_exp C B A G E D)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue76_exp_exp K J I H G F)
        (and (= (|TSLL::prev| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E D 1) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue76_exp_exp P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L E))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       (= (TSLL H G 1) F)
       (= (TSLL P O N) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Heap) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue76_exp_exp P O N M R L)
        (Inv_Heap R Q)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= R 0)) (>= (HeapSize M) R))
                (HeapCtor (HeapSize M) (store (HeapContents M) R C))
                M))
      (a!4 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (select (HeapContents K) R)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F E 1) D)
       (= (TSLL P O N) H)
       (= (getTSLL L) A)
       (= a!4 Q)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize K) R)
       (not (<= R 0))
       ((_ is O_TSLL) L))))
      )
      (_Glue79 R J K Q)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Heap) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue76_exp_exp R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!3 (ite (and (not (<= N 0)) (>= (HeapSize O) N))
                (HeapCtor (HeapSize O) (store (HeapContents O) N D))
                O))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) J)))
  (and a!2
       (= (AllocResHeap L K) J)
       (= a!3 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G F 1) E)
       (= (TSLL R Q P) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue79 N K L C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue79 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL H D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize G) I)
     (not (<= I 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue79 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue81 F J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue79 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue81 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       (= A (newAddr B))
       (= (O_TSLL E) D)
       a!2)))
      )
      (Inv_Heap A D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) E)))
  (and (= (AllocResHeap F H) E)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       (= 0 A)
       (= a!1 G)
       (= (O_TSLL D) C)
       (>= (HeapSize F) H)
       (not (<= H 0))
       a!3)))
      )
      (_Glue98 A H F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (select (HeapContents H) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize H) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize B))) E)))
  (and (= (AllocResHeap H G) E)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       (= 0 A)
       (= a!1 F)
       (= (O_TSLL D) C)
       a!2
       a!4)))
      )
      (_Glue98 A G H F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue98 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL I D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize G) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue98 I K H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue100 F I K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue98 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize I) J))
                (HeapCtor (HeapSize I) (store (HeapContents I) J A))
                I))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL K D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue100 G K J F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue100 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D H C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize I) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main1015_3 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue13 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main1015_3 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue13 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue13 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL G D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (inv_main_4 E D G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (>= (HeapSize E) G) (not (<= G 0)) (= a!1 F)))
      )
      (_Glue84_exp_exp C B A E G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_4 G F E)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize G) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj)))
  (and a!1 (= a!2 D)))
      )
      (_Glue84_exp_exp C B A G E D)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue84_exp_exp K J I H G F)
        (and (= (|TSLL::prev| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E D 1) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue84_exp_exp P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L E))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       (= (TSLL H G 1) F)
       (= (TSLL P O N) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Heap) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue84_exp_exp P O N M R L)
        (Inv_Heap R Q)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= R 0)) (>= (HeapSize M) R))
                (HeapCtor (HeapSize M) (store (HeapContents M) R C))
                M))
      (a!4 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (select (HeapContents K) R)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F E 1) D)
       (= (TSLL P O N) H)
       (= (getTSLL L) A)
       (= a!4 Q)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize K) R)
       (not (<= R 0))
       ((_ is O_TSLL) L))))
      )
      (_Glue87 R J K Q)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Heap) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue84_exp_exp R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!3 (ite (and (not (<= N 0)) (>= (HeapSize O) N))
                (HeapCtor (HeapSize O) (store (HeapContents O) N D))
                O))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) J)))
  (and a!2
       (= (AllocResHeap L K) J)
       (= a!3 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G F 1) E)
       (= (TSLL R Q P) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue87 N K L C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue87 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL H D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize G) I)
     (not (<= I 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue87 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue89 F K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue87 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue89 G K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (_Glue89 D C B)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|TSLL::next| A) F)
       (= (getTSLL B) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue90 C D F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue89 F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue90 E F B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) (I Int) ) 
    (=>
      (and
        (_Glue90 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D I C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue90 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue92 F J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue90 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue92 G F)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       (= A (newAddr B))
       (= (O_TSLL E) D)
       a!2)))
      )
      (Inv_Heap A D)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj))
      (a!2 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize B))) E)))
  (and (= (AllocResHeap F H) E)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       (= 0 A)
       (= a!1 G)
       (= (O_TSLL D) C)
       (>= (HeapSize F) H)
       (not (<= H 0))
       a!3)))
      )
      (_Glue42 H A F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E AllocResHeap) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (select (HeapContents H) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize H) G))))
      (a!3 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) C))))
(let ((a!4 (= (AllocResHeap a!3 (+ 1 (HeapSize B))) E)))
  (and (= (AllocResHeap H G) E)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) B)
       (= 0 A)
       (= a!1 F)
       (= (O_TSLL D) C)
       a!2
       a!4)))
      )
      (_Glue42 G A H F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue42 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL H D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize G) I)
     (not (<= I 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue42 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue44 F K I J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue42 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue44 G K J F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue44 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D G C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue44 I K H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D H C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue46 F K J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue44 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D I C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue46 G J F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue46 H G F)
        (and (= (|TSLL::prev| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D C 0) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G TSLL) (H HeapObject) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue46 J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J)))
  (and (= a!1 B)
       (= (|TSLL::prev| G) E)
       (= (|TSLL::next| G) F)
       (= A I)
       (= (TSLL F E 0) D)
       (= (getTSLL H) G)
       (= (O_TSLL D) C)
       ((_ is O_TSLL) H)))
      )
      (inv_main_4 B I A)
    )
  )
)
(assert
  (forall ( (A Int) (B AllocResHeap) (C Heap) (D HeapObject) (E TSLL) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize C))
                     (store (HeapContents C) (+ 1 (HeapSize C)) D))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize C))) B)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) C)
       (= A (newAddr B))
       (= (O_TSLL E) D)
       a!2)))
      )
      (Inv_Heap A D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (Inv_Heap E D)
        (inv_main1015_3 C B E A)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (>= (HeapSize C) E) (not (<= E 0)) (= a!1 D)))
      )
      (_Glue57 C E A D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main1015_3 E D C B)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize E) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue57 E C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue57 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL G D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize I) H)
     (not (<= H 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue57 I K H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL H D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue59 F J)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue57 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue59 G F)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (Inv_Heap C B)
        (inv_main_32 A C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (>= (HeapSize A) C) (not (<= C 0)) (= a!1 B)))
      )
      (_Glue32 A C B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_32 C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize C) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue32 C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue32 F E D)
        (and (not (= 1 B))
     (= (|TSLL::data| C) B)
     (= (getTSLL D) C)
     (= defObj A)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_TSLL) D))
      )
      (Inv_Heap E A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue32 H G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (HeapCtor (HeapSize H) (store (HeapContents H) G B))
                H)))
  (and (= a!1 A)
       (not (= 1 C))
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (getTSLL F) E)
       (= defObj B)
       ((_ is O_TSLL) F)))
      )
      (inv_main_32 A D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (inv_main_4 G F I)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= a!1 H) (>= (HeapSize G) I) (not (<= I 0)) (= 0 E)))
      )
      (_Glue116_exp_exp D E C B A F G I H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E HeapObject) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (inv_main_4 I H G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize I) G))
                (select (HeapContents I) G)
                defObj))
      (a!2 (or (<= G 0) (not (>= (HeapSize I) G)))))
  (and (= a!1 E) a!2 (= 0 F)))
      )
      (_Glue116_exp_exp D F C B A H I G E)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue116_exp_exp N M L K J I H G F)
        (and (= (|TSLL::prev| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E D 1) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue116_exp_exp S R Q P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L E))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       (= (TSLL H G 1) F)
       (= (TSLL Q P O) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Heap) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T HeapObject) (U Int) ) 
    (=>
      (and
        (_Glue116_exp_exp S R Q P O N M U L)
        (Inv_Heap U T)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= U 0)) (>= (HeapSize M) U))
                (HeapCtor (HeapSize M) (store (HeapContents M) U C))
                M))
      (a!4 (ite (and (not (<= U 0)) (>= (HeapSize K) U))
                (select (HeapContents K) U)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F E 1) D)
       (= (TSLL Q P O) H)
       (= (getTSLL L) A)
       (= a!4 T)
       (= (O_TSLL H) G)
       (= (O_TSLL D) C)
       (>= (HeapSize K) U)
       (not (<= U 0))
       ((_ is O_TSLL) L))))
      )
      (_Glue119 U N R S J K T)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Heap) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) ) 
    (=>
      (and
        (_Glue116_exp_exp U T S R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!3 (ite (and (not (<= N 0)) (>= (HeapSize O) N))
                (HeapCtor (HeapSize O) (store (HeapContents O) N D))
                O))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) J)))
  (and a!2
       (= (AllocResHeap L K) J)
       (= a!3 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G F 1) E)
       (= (TSLL S R Q) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue119 N P T U K L C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue119 L K J I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL H D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize G) L)
     (not (<= L 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap L A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Heap) (I Int) (J Int) (K Int) (L Int) (M HeapObject) (N Int) ) 
    (=>
      (and
        (_Glue119 N L K J I H G)
        (Inv_Heap N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize H) N))
                (HeapCtor (HeapSize H) (store (HeapContents H) N A))
                H))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize F) N))
                (select (HeapContents F) N)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL G) E)
       (= a!2 M)
       (= (O_TSLL B) A)
       (>= (HeapSize F) N)
       (not (<= N 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue121 F N L K J M)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue119 N M L K J I H)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize I) N))
                (HeapCtor (HeapSize I) (store (HeapContents I) N A))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize G) N))
                (select (HeapContents G) N)
                defObj))
      (a!3 (or (<= N 0) (not (>= (HeapSize G) N)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue121 G N M L K F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Heap) (H HeapObject) (I Int) ) 
    (=>
      (and
        (_Glue121 G F E D C B)
        (Inv_Heap I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= (|TSLL::next| A) I)
       (= (getTSLL B) A)
       (= a!1 H)
       (>= (HeapSize G) I)
       (not (<= I 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue122 C D E F G I H)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Int) (I Heap) ) 
    (=>
      (and
        (_Glue121 I H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize I) B))
                (select (HeapContents I) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize I) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue122 E F G H I B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue122 L K J I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::next| E) D)
     (= (TSLL D I C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J Int) (K Int) (L Int) (M HeapObject) (N Int) ) 
    (=>
      (and
        (_Glue122 L K J N I H G)
        (Inv_Heap N M)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize F) N))
                (select (HeapContents F) N)
                defObj)))
  (and (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D N C) B)
       (= (getTSLL G) E)
       (= a!2 M)
       (= (O_TSLL B) A)
       (>= (HeapSize F) N)
       (not (<= N 0))
       ((_ is O_TSLL) G)))
      )
      (_Glue124 F L K J M)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue122 N M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       ((_ is O_TSLL) H)))
      )
      (_Glue124 G N M L F)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Int) (D Int) (E Int) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (_Glue124 F E D C B)
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj)))
  (and (= (|TSLL::next| A) H)
       (= (getTSLL B) A)
       (= a!1 G)
       (>= (HeapSize F) H)
       (not (<= H 0))
       ((_ is O_TSLL) B)))
      )
      (_Glue125 C D E F H G)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue124 H G F E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize H) B))
                (select (HeapContents H) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize H) B)))))
  (and (= (|TSLL::next| C) B) (= (getTSLL D) C) (= a!1 A) a!2 ((_ is O_TSLL) D)))
      )
      (_Glue125 E F G H B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (v_10 Int) ) 
    (=>
      (and
        (_Glue125 J I v_10 H G F)
        (and (= v_10 J)
     (= (|TSLL::prev| E) C)
     (= (|TSLL::next| E) D)
     (not (= I J))
     (= (TSLL D C 2) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G TSLL) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (v_12 Int) ) 
    (=>
      (and
        (_Glue125 L K v_12 J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J)))
  (and (= v_12 L)
       (= a!1 B)
       (= (|TSLL::prev| G) E)
       (= (|TSLL::next| G) F)
       (= A L)
       (not (= K L))
       (= (TSLL F E 2) D)
       (= (getTSLL H) G)
       (= (O_TSLL D) C)
       ((_ is O_TSLL) H)))
      )
      (inv_main_17 B A L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (inv_main_4 E D G)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (>= (HeapSize E) G) (not (<= G 0)) (= a!1 F)))
      )
      (_Glue8_exp_exp C B A E G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_4 G F E)
        (let ((a!1 (or (<= E 0) (not (>= (HeapSize G) E))))
      (a!2 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj)))
  (and a!1 (= a!2 D)))
      )
      (_Glue8_exp_exp C B A G E D)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C TSLL) (D Int) (E Int) (F HeapObject) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue8_exp_exp K J I H G F)
        (and (= (|TSLL::prev| A) D)
     (= (|TSLL::next| A) E)
     (= (TSLL E D 1) C)
     (= (getTSLL F) A)
     (= (O_TSLL C) B)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap G B)
    )
  )
)
(assert
  (forall ( (A Int) (B TSLL) (C AllocResHeap) (D Heap) (E HeapObject) (F TSLL) (G Int) (H Int) (I HeapObject) (J TSLL) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue8_exp_exp P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize D))
                     (store (HeapContents D) (+ 1 (HeapSize D)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L E))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize D))) C)))
  (and a!2
       (= a!3 D)
       (= (|TSLL::prev| B) G)
       (= (|TSLL::next| B) H)
       (= A (newAddr C))
       (= (TSLL H G 1) F)
       (= (TSLL P O N) J)
       (= (getTSLL K) B)
       (= (O_TSLL F) E)
       (= (O_TSLL J) I)
       ((_ is O_TSLL) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Heap) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue8_exp_exp P O N M R L)
        (Inv_Heap R Q)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= R 0)) (>= (HeapSize M) R))
                (HeapCtor (HeapSize M) (store (HeapContents M) R C))
                M))
      (a!4 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (select (HeapContents K) R)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F E 1) D)
       (= (TSLL P O N) H)
       (= (getTSLL L) A)
       (= a!4 Q)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize K) R)
       (not (<= R 0))
       ((_ is O_TSLL) L))))
      )
      (_Glue11 R J K Q)
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Heap) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue8_exp_exp R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!3 (ite (and (not (<= N 0)) (>= (HeapSize O) N))
                (HeapCtor (HeapSize O) (store (HeapContents O) N D))
                O))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) J)))
  (and a!2
       (= (AllocResHeap L K) J)
       (= a!3 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G F 1) E)
       (= (TSLL R Q P) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       ((_ is O_TSLL) M))))
      )
      (_Glue11 N K L C)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H Int) (I Int) ) 
    (=>
      (and
        (_Glue11 I H G F)
        (and (= (|TSLL::data| E) C)
     (= (|TSLL::prev| E) D)
     (= (TSLL H D C) B)
     (= (getTSLL F) E)
     (= (O_TSLL B) A)
     (>= (HeapSize G) I)
     (not (<= I 0))
     ((_ is O_TSLL) F))
      )
      (Inv_Heap I A)
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue65 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_TSLL) D))
       (= (|TSLL::next| A) E)
       (= (getTSLL B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_TSLL) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue65 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D TSLL) (E Int) (F Int) (G HeapObject) (H TSLL) (I AllocResHeap) (J Int) (K Heap) (L HeapObject) (M Heap) (N Int) (O Int) (P Int) (Q HeapObject) (R Int) ) 
    (=>
      (and
        (_Glue36_exp_exp P O N M R L)
        (Inv_Heap R Q)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) G)))
      (a!3 (ite (and (not (<= R 0)) (>= (HeapSize M) R))
                (HeapCtor (HeapSize M) (store (HeapContents M) R C))
                M))
      (a!4 (ite (and (not (<= R 0)) (>= (HeapSize K) R))
                (select (HeapContents K) R)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) I)))
  (and (not ((_ is O_TSLL) Q))
       a!2
       (= (AllocResHeap K J) I)
       (= a!3 B)
       (= (|TSLL::prev| A) E)
       (= (|TSLL::next| A) F)
       (= (TSLL F E 1) D)
       (= (TSLL P O N) H)
       (= (getTSLL L) A)
       (= a!4 Q)
       (= (O_TSLL D) C)
       (= (O_TSLL H) G)
       (>= (HeapSize K) R)
       (not (<= R 0))
       ((_ is O_TSLL) L))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A TSLL) (B Heap) (C HeapObject) (D HeapObject) (E TSLL) (F Int) (G Int) (H HeapObject) (I TSLL) (J AllocResHeap) (K Int) (L Heap) (M HeapObject) (N Int) (O Heap) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue36_exp_exp R Q P O N M)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize B))
                     (store (HeapContents B) (+ 1 (HeapSize B)) H)))
      (a!3 (ite (and (not (<= N 0)) (>= (HeapSize O) N))
                (HeapCtor (HeapSize O) (store (HeapContents O) N D))
                O))
      (a!4 (ite (and (not (<= N 0)) (>= (HeapSize L) N))
                (select (HeapContents L) N)
                defObj))
      (a!5 (or (<= N 0) (not (>= (HeapSize L) N)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize B))) J)))
  (and ((_ is O_TSLL) M)
       a!2
       (= (AllocResHeap L K) J)
       (= a!3 B)
       (= (|TSLL::prev| A) F)
       (= (|TSLL::next| A) G)
       (= (TSLL G F 1) E)
       (= (TSLL R Q P) I)
       (= (getTSLL M) A)
       (= a!4 C)
       (= (O_TSLL E) D)
       (= (O_TSLL I) H)
       a!5
       (not ((_ is O_TSLL) C)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main1015_3 C B E A)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (not ((_ is O_TSLL) D))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main1015_3 E D C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize E) C))
                (select (HeapContents E) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize E) C)))))
  (and (= a!1 A) a!2 (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main_32 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_TSLL) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_32 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue55 I K H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (not ((_ is O_TSLL) J))
       (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue55 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize I) J))
                (HeapCtor (HeapSize I) (store (HeapContents I) J A))
                I))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL K D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue39 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_TSLL) D))
       (= (|TSLL::data| A) 1)
       (= (|TSLL::next| A) E)
       (= (getTSLL B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_TSLL) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue39 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::data| C) 1)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_17 B A D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_TSLL) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_17 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue130 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (not ((_ is O_TSLL) J))
       (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue130 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue6 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize I) H))
                (HeapCtor (HeapSize I) (store (HeapContents I) H A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (not ((_ is O_TSLL) J))
       (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) ) 
    (=>
      (and
        (_Glue6 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D K C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue81 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_TSLL) D))
       (= (|TSLL::next| A) E)
       (= (getTSLL B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_TSLL) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue81 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue100 I H K G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (not ((_ is O_TSLL) J))
       (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D H C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue100 K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize K) I))
                (HeapCtor (HeapSize K) (store (HeapContents K) I A))
                K))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize G) I)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::next| E) D)
       (= (TSLL D J C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) ) 
    (=>
      (and
        (inv_main_4 B A D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= a!1 C) (>= (HeapSize B) D) (not (<= D 0)) (not ((_ is O_TSLL) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_4 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Int) (I Heap) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue13 I K H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (not ((_ is O_TSLL) J))
       (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL H D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Int) (J Int) (K Heap) ) 
    (=>
      (and
        (_Glue13 K J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize K) J))
                (HeapCtor (HeapSize K) (store (HeapContents K) J A))
                K))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize G) J)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue92 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_TSLL) D))
       (= (|TSLL::next| A) E)
       (= (getTSLL B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_TSLL) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue92 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D AllocResHeap) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (Inv_Heap G F)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!3 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize A))) D)))
  (and a!2
       (= (AllocResHeap E G) D)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       (= a!3 F)
       (= (O_TSLL C) B)
       (>= (HeapSize E) G)
       (not (<= G 0))
       (not ((_ is O_TSLL) F)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C TSLL) (D AllocResHeap) (E HeapObject) (F Int) (G Heap) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize A))
                     (store (HeapContents A) (+ 1 (HeapSize A)) B)))
      (a!3 (ite (and (not (<= F 0)) (>= (HeapSize G) F))
                (select (HeapContents G) F)
                defObj))
      (a!4 (or (<= F 0) (not (>= (HeapSize G) F)))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize A))) D)))
  (and a!2
       (= (AllocResHeap G F) D)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) A)
       (= a!3 E)
       (= (O_TSLL C) B)
       a!4
       (not ((_ is O_TSLL) E)))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A TSLL) (B HeapObject) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (_Glue59 C B)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not ((_ is O_TSLL) D))
       (= (|TSLL::next| A) E)
       (= (getTSLL B) A)
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       ((_ is O_TSLL) B)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C TSLL) (D HeapObject) (E Heap) ) 
    (=>
      (and
        (_Glue59 E D)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and ((_ is O_TSLL) D)
       (= (|TSLL::next| C) B)
       (= (getTSLL D) C)
       (= a!1 A)
       a!2
       (not ((_ is O_TSLL) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F Heap) (G HeapObject) (H Heap) (I Int) (J HeapObject) (K Int) ) 
    (=>
      (and
        (_Glue11 K I H G)
        (Inv_Heap K J)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (HeapCtor (HeapSize H) (store (HeapContents H) K A))
                H))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize F) K))
                (select (HeapContents F) K)
                defObj)))
  (and (not ((_ is O_TSLL) J))
       (= a!1 F)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL I D C) B)
       (= (getTSLL G) E)
       (= a!2 J)
       (= (O_TSLL B) A)
       (>= (HeapSize F) K)
       (not (<= K 0))
       ((_ is O_TSLL) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B TSLL) (C Int) (D Int) (E TSLL) (F HeapObject) (G Heap) (H HeapObject) (I Heap) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue11 K J I H)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize I) K))
                (HeapCtor (HeapSize I) (store (HeapContents I) K A))
                I))
      (a!2 (ite (and (not (<= K 0)) (>= (HeapSize G) K))
                (select (HeapContents G) K)
                defObj))
      (a!3 (or (<= K 0) (not (>= (HeapSize G) K)))))
  (and ((_ is O_TSLL) H)
       (= a!1 G)
       (= (|TSLL::data| E) C)
       (= (|TSLL::prev| E) D)
       (= (TSLL J D C) B)
       (= (getTSLL H) E)
       (= a!2 F)
       (= (O_TSLL B) A)
       a!3
       (not ((_ is O_TSLL) F))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
