(set-logic HORN)

(declare-datatypes ((|node| 0)) (((|node|  (|node::h| Int) (|node::n| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_node|  (|getnode| node)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue0| ( Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue2| ( Heap Int Int HeapObject ) Bool)
(declare-fun |Inv_Heap_exp_exp| ( Int Int Int ) Bool)
(declare-fun |_Glue1| ( Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue11| ( Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main_32| ( Heap Int Int ) Bool)
(declare-fun |_Glue4| ( Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue13| ( Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue9_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |inv_main_21| ( Heap Int Int Int Int ) Bool)
(declare-fun |inv_main540_3| ( Heap Int Int Int ) Bool)
(declare-fun |inv_main_38| ( Heap Int ) Bool)
(declare-fun |_Glue6_exp_exp| ( Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_9| ( Heap Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Heap) (F Int) (G Int) (v_7 Int) ) 
    (=>
      (and
        (inv_main_32 E D G)
        (Inv_Heap_exp_exp G v_7 F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= 1 v_7)
       (not (= F A))
       (= (node 1 F) C)
       (= a!1 B)
       (= (O_node C) B)
       (>= (HeapSize E) G)
       (not (<= G 0))
       (= 0 A)))
      )
      (inv_main_32 E D F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_32 G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= 0 A)
       (= (|node::n| C) B)
       (= (|node::h| C) 1)
       (not (= B A))
       (= (getnode D) C)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main_32 G F B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Heap) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (inv_main540_3 E D C H)
        (Inv_Heap_exp_exp H G F)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize E) H))
                (select (HeapContents E) H)
                defObj)))
  (and (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize E) H)
       (not (<= H 0))
       (= (node G F) B)))
      )
      (_Glue11 E C H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main540_3 E D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize E) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue11 E C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (_Glue11 G F E D)
        (and (= (|node::n| C) B)
     (= A 3)
     (= (getnode D) C)
     (>= (HeapSize G) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (inv_main540_3 F E D I)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= (node H G) C)
       (= a!1 B)
       (= (O_node C) B)
       (>= (HeapSize F) I)
       (not (<= I 0))
       (= 0 A)))
      )
      (_Glue4 A F D I B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main540_3 F E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize F) C))
                (select (HeapContents F) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize F) C)))))
  (and (= a!1 A) a!2 (= 0 B)))
      )
      (_Glue4 B F D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Int) (G Heap) (H Int) ) 
    (=>
      (and
        (_Glue4 H G F E D)
        (and (= (|node::n| C) B)
     (= A 3)
     (= (getnode D) C)
     (>= (HeapSize G) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D Heap) (E HeapObject) (F node) (G Int) (H HeapObject) (I node) (J HeapObject) (K Int) (L Heap) (M Int) (N Int) (O Int) (P Int) ) 
    (=>
      (and
        (_Glue4 M L P K J)
        (Inv_Heap_exp_exp P O N)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize L) K))
                (HeapCtor (HeapSize L) (store (HeapContents L) K E))
                L))
      (a!2 (ite (and (not (<= P 0)) (>= (HeapSize D) P))
                (select (HeapContents D) P)
                defObj)))
  (and (= a!1 D)
       (= (|node::n| C) G)
       (= B M)
       (= A 1)
       (not (= O 3))
       (= (node 3 G) F)
       (= (node O N) I)
       (= (getnode J) C)
       (= a!2 H)
       (= (O_node F) E)
       (= (O_node I) H)
       (>= (HeapSize D) P)
       (not (<= P 0))
       ((_ is O_node) J)))
      )
      (inv_main_21 D A B M P)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D node) (E Int) (F node) (G Int) (H node) (I HeapObject) (J Heap) (K HeapObject) (L Int) (M Int) (N Heap) (O Int) ) 
    (=>
      (and
        (_Glue4 O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize N) L))
                (HeapCtor (HeapSize N) (store (HeapContents N) L C))
                N))
      (a!2 (ite (and (not (<= M 0)) (>= (HeapSize J) M))
                (select (HeapContents J) M)
                defObj))
      (a!3 (or (<= M 0) (not (>= (HeapSize J) M)))))
  (and ((_ is O_node) K)
       (= a!1 J)
       (= (|node::n| F) E)
       (= (|node::h| H) G)
       (= B O)
       (= A 1)
       (not (= G 3))
       (= (node 3 E) D)
       (= (getnode I) H)
       (= (getnode K) F)
       (= a!2 I)
       (= (O_node D) C)
       a!3
       ((_ is O_node) I)))
      )
      (inv_main_21 J A B O M)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (inv_main_21 F E D C I)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize F) I)
       (not (<= I 0))
       (= (node H G) B)))
      )
      (_Glue1 C E D F I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_21 F E D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize F) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue1 C E D F B A)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Heap) (F Int) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue1 H G F E D C)
        (and (= (|node::h| B) A)
     (not (= A 3))
     (not (= G 0))
     (= (getnode C) B)
     (>= (HeapSize E) D)
     (not (<= D 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp D A F)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) ) 
    (=>
      (and
        (_Glue1 M L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I C))
                J)))
  (and (= a!1 B)
       (= (|node::n| G) F)
       (= (|node::h| G) E)
       (= A 0)
       (not (= E 3))
       (not (= L 0))
       (= (node E K) D)
       (= (getnode H) G)
       (= (O_node D) C)
       ((_ is O_node) H)))
      )
      (inv_main_21 B A I M F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Heap) (F Int) (G Int) (H HeapObject) (I node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) H))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E)
       (= 0 B)
       (= (newAddr D) C)
       (= A (newAddr D))
       (not (= C B))
       (= (node G F) I)
       (= (O_node I) H)
       a!2)))
      )
      (Inv_Heap_exp_exp A G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F AllocResHeap) (G Heap) (H HeapObject) (I node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize G))
                     (store (HeapContents G) (+ 1 (HeapSize G)) H))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize G))) F)))
  (and (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) G)
       (= (newHeap F) E)
       (= 0 C)
       (= (newAddr F) D)
       (= B D)
       (= A 1)
       (not (= D C))
       (= (O_node I) H)
       a!2)))
      )
      (inv_main540_3 E A B D)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Heap) (E Int) (F Int) (v_6 Int) ) 
    (=>
      (and
        (inv_main_32 D C F)
        (Inv_Heap_exp_exp F v_6 E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 1 v_6)
       (not (= C E))
       (= (node 1 E) B)
       (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize D) F)
       (not (<= F 0))
       (= 0 E)))
      )
      (inv_main_38 D C)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_32 F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= 0 A)
       (= (|node::n| B) A)
       (= (|node::h| B) 1)
       (not (= E A))
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_38 F E)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Heap) (E Int) (F Int) (v_6 Int) ) 
    (=>
      (and
        (inv_main_38 D F)
        (Inv_Heap_exp_exp F v_6 E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 2 v_6)
       (not (= E A))
       (= (node 2 E) C)
       (= a!1 B)
       (= (O_node C) B)
       (>= (HeapSize D) F)
       (not (<= F 0))
       (= 0 A)))
      )
      (inv_main_38 D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_38 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize F) E))
                (select (HeapContents F) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize F) E)))))
  (and (= 0 A)
       (= (|node::n| C) B)
       (= (|node::h| C) 2)
       (not (= B A))
       (= (getnode D) C)
       (= a!1 D)
       a!2
       ((_ is O_node) D)))
      )
      (inv_main_38 F B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (inv_main_9 F E D C I)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize F) I)
       (not (<= I 0))
       (= (node H G) B)))
      )
      (_Glue13 E D F C I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize F) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue13 E D F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Heap) (G Int) (H Int) ) 
    (=>
      (and
        (_Glue13 H G F E D C)
        (and (= (|node::h| B) A)
     (= (getnode C) B)
     (>= (HeapSize F) D)
     (not (<= D 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp D A E)
    )
  )
)
(assert
  (forall ( (A node) (B Heap) (C HeapObject) (D node) (E Int) (F HeapObject) (G node) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M Int) (N Int) (O Int) ) 
    (=>
      (and
        (_Glue13 L K J I O H)
        (Inv_Heap_exp_exp O N M)
        (let ((a!1 (ite (and (not (<= O 0)) (>= (HeapSize J) O))
                (HeapCtor (HeapSize J) (store (HeapContents J) O C))
                J))
      (a!2 (ite (and (not (<= O 0)) (>= (HeapSize B) O))
                (select (HeapContents B) O)
                defObj)))
  (and (= a!1 B)
       (= (|node::h| A) E)
       (= (node E I) D)
       (= (node N M) G)
       (= (getnode H) A)
       (= a!2 F)
       (= (O_node D) C)
       (= (O_node G) F)
       (>= (HeapSize B) O)
       (not (<= O 0))
       ((_ is O_node) H)))
      )
      (inv_main540_3 B L K M)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue13 N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize L) J))
                (HeapCtor (HeapSize L) (store (HeapContents L) J A))
                L))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (select (HeapContents H) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize H) J)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::n| F) E)
       (= (|node::h| D) C)
       (= (node C K) B)
       (= (getnode G) F)
       (= (getnode I) D)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) G)))
      )
      (inv_main540_3 H N M E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (I Int) ) 
    (=>
      (and
        (inv_main_9 F E D C I)
        (Inv_Heap_exp_exp I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj)))
  (and (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize F) I)
       (not (<= I 0))
       (= (node H G) B)))
      )
      (_Glue2 F C I A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize F) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue2 F C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue2 F E D C)
        (and (= (|node::h| B) A)
     (= (getnode C) B)
     (>= (HeapSize F) D)
     (not (<= D 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp D A E)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C node) (D Int) (E Int) (F Int) (G Heap) (H Int) (I Int) (v_9 Int) ) 
    (=>
      (and
        (inv_main_21 G F E D I)
        (Inv_Heap_exp_exp I v_9 H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize G) I))
                (select (HeapContents G) I)
                defObj)))
  (and (= 3 v_9)
       (not (= E A))
       (= (node 3 H) C)
       (= a!1 B)
       (= (O_node C) B)
       (>= (HeapSize G) I)
       (not (<= I 0))
       (= 0 A)))
      )
      (inv_main_32 G D E)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main_21 H G F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize H) D))
                (select (HeapContents H) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize H) D)))))
  (and (= 0 B)
       (= (|node::h| A) 3)
       (not (= F B))
       (= (getnode C) A)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_32 H E F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Int) (F Heap) (G Int) (H Int) (v_8 Int) ) 
    (=>
      (and
        (inv_main_21 F E D C H)
        (Inv_Heap_exp_exp H v_8 G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj)))
  (and (= 3 v_8)
       (not (= C D))
       (= (node 3 G) B)
       (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize F) H)
       (not (<= H 0))
       (= 0 D)))
      )
      (inv_main_38 F C)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_21 G F E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize G) C))
                (select (HeapContents G) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize G) C)))))
  (and (= 0 E)
       (= (|node::h| A) 3)
       (not (= D E))
       (= (getnode B) A)
       (= a!1 B)
       a!2
       ((_ is O_node) B)))
      )
      (inv_main_38 G D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E node) (F Int) (G Int) (H Heap) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (inv_main540_3 H G F K)
        (Inv_Heap_exp_exp K J I)
        (let ((a!1 (ite (and (not (<= K 0)) (>= (HeapSize H) K))
                (select (HeapContents H) K)
                defObj)))
  (and (= (node J I) E)
       (= a!1 D)
       (= (O_node E) D)
       (>= (HeapSize H) K)
       (not (<= K 0))
       (= 0 C)))
      )
      (_Glue6_exp_exp C B A F G H K D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main540_3 H G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize H) E))
                (select (HeapContents H) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize H) E)))))
  (and (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue6_exp_exp D B A F G H E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue6_exp_exp K J I H G F E D)
        (and (= (|node::n| C) B)
     (= A 1)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I HeapObject) (J node) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue6_exp_exp R Q P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L F))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= a!3 E)
       (= (newAddr D) C)
       (= (|node::n| B) H)
       (= A (newAddr D))
       (not (= C R))
       (not (= N 0))
       (= (node 1 H) G)
       (= (node Q P) J)
       (= (getnode K) B)
       (= (O_node G) F)
       (= (O_node J) I)
       ((_ is O_node) K))))
      )
      (Inv_Heap_exp_exp A Q P)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H node) (I Int) (J HeapObject) (K node) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue6_exp_exp S R Q P O N M L)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) J)))
      (a!3 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M G))
                N)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) E)))
  (and a!2
       (= a!3 F)
       (= (newHeap E) D)
       (= (newAddr E) C)
       (= (|node::n| B) I)
       (not (= C S))
       (= A 0)
       (not (= O 0))
       (= (node 1 I) H)
       (= (node R Q) K)
       (= (getnode L) B)
       (= (O_node H) G)
       (= (O_node K) J)
       ((_ is O_node) L))))
      )
      (inv_main_9 D A P C M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D HeapObject) (E node) (F Int) (G Heap) (H Int) (I Int) (J Int) (v_10 Int) ) 
    (=>
      (and
        (inv_main540_3 G v_10 F J)
        (Inv_Heap_exp_exp J I H)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize G) J))
                (select (HeapContents G) J)
                defObj)))
  (and (= 0 v_10)
       (= (node I H) E)
       (= a!1 D)
       (= (O_node E) D)
       (>= (HeapSize G) J)
       (not (<= J 0))
       (= 0 C)))
      )
      (_Glue9_exp_exp C B A F G J D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) (v_7 Int) ) 
    (=>
      (and
        (inv_main540_3 G v_7 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= 0 v_7) (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue9_exp_exp D B A F G E C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C node) (D HeapObject) (E Int) (F Heap) (G Int) (H Int) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue9_exp_exp J I H G F E D)
        (and (= (|node::n| C) B)
     (= A 2)
     (= (getnode D) C)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap_exp_exp E A B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I HeapObject) (J node) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue9_exp_exp Q P O N M L K)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) I)))
      (a!3 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L F))
                M)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= a!3 E)
       (= (newAddr D) C)
       (= (|node::n| B) H)
       (= A (newAddr D))
       (not (= C Q))
       (= (node 2 H) G)
       (= (node P O) J)
       (= (getnode K) B)
       (= (O_node G) F)
       (= (O_node J) I)
       ((_ is O_node) K))))
      )
      (Inv_Heap_exp_exp A P O)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H node) (I Int) (J HeapObject) (K node) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue9_exp_exp R Q P O N M L)
        (let ((a!1 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) J)))
      (a!3 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M G))
                N)))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize F))) E)))
  (and a!2
       (= a!3 F)
       (= (newHeap E) D)
       (= (newAddr E) C)
       (= (|node::n| B) I)
       (= A 1)
       (not (= C R))
       (= (node 2 I) H)
       (= (node Q P) K)
       (= (getnode L) B)
       (= (O_node H) G)
       (= (O_node K) J)
       ((_ is O_node) L))))
      )
      (inv_main_9 D A O C M)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D Int) (E Heap) (F Int) (G Int) (H Int) (v_8 Int) ) 
    (=>
      (and
        (inv_main_21 E v_8 D C H)
        (Inv_Heap_exp_exp H G F)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize E) H))
                (select (HeapContents E) H)
                defObj)))
  (and (= 0 v_8)
       (= a!1 A)
       (= (O_node B) A)
       (>= (HeapSize E) H)
       (not (<= H 0))
       (= (node G F) B)))
      )
      (_Glue0 D E C H A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) (v_5 Int) ) 
    (=>
      (and
        (inv_main_21 E v_5 D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize E) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj)))
  (and (= 0 v_5) a!1 (= a!2 A)))
      )
      (_Glue0 D E C B A)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Heap) (G Int) ) 
    (=>
      (and
        (_Glue0 G F E D C)
        (and (= (|node::h| B) A)
     (not (= A 3))
     (= (getnode C) B)
     (>= (HeapSize F) D)
     (not (<= D 0))
     ((_ is O_node) C))
      )
      (Inv_Heap_exp_exp D A E)
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D node) (E Int) (F Int) (G node) (H HeapObject) (I Int) (J Int) (K Heap) (L Int) ) 
    (=>
      (and
        (_Glue0 L K J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize K) I))
                (HeapCtor (HeapSize K) (store (HeapContents K) I C))
                K)))
  (and (= a!1 B)
       (= (|node::n| G) F)
       (= (|node::h| G) E)
       (= A 1)
       (not (= E 3))
       (= (node E J) D)
       (= (getnode H) G)
       (= (O_node D) C)
       ((_ is O_node) H)))
      )
      (inv_main_21 B A L I F)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_38 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue11 J I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize J) H))
                (HeapCtor (HeapSize J) (store (HeapContents J) H A))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize F) I)))))
  (and (not ((_ is O_node) E))
       (= a!1 F)
       (= (|node::n| D) C)
       (= (node 3 C) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       ((_ is O_node) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main540_3 E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) ) 
    (=>
      (and
        (inv_main_32 D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) (v_4 Int) ) 
    (=>
      (and
        (inv_main540_3 D v_4 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= 0 v_4) (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_21 F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue2 J I H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize J) H))
                (HeapCtor (HeapSize J) (store (HeapContents J) H A))
                J))
      (a!2 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj))
      (a!3 (or (<= H 0) (not (>= (HeapSize F) H)))))
  (and (not ((_ is O_node) E))
       (= a!1 F)
       (= (|node::h| D) C)
       (= (node C I) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       ((_ is O_node) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main540_3 E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (not (= D 0)) (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
