(set-logic HORN)

(declare-datatypes ((|node| 0)) (((|node|  (|node::h| Int) (|node::n| Int)))))
(declare-datatypes ((|AddrRange| 0)) (((|AddrRange|  (|AddrRangeStart| Int) (|AddrRangeSize| Int)))))
(declare-datatypes ((|HeapObject| 0)) (((|O_Int|  (|getInt| Int)) (|O_UInt|  (|getUInt| Int)) (|O_Addr|  (|getAddr| Int)) (|O_AddrRange|  (|getAddrRange| AddrRange)) (|O_node|  (|getnode| node)) (|defObj| ))))
(declare-datatypes ((|Heap| 0)) (((|HeapCtor|  (|HeapSize| Int) (|HeapContents| (Array Int HeapObject))))))
(declare-datatypes ((|AllocResHeap| 0)) (((|AllocResHeap|  (|newHeap| Heap) (|newAddr| Int)))))

(declare-fun |_Glue3| ( Heap Int Int HeapObject ) Bool)
(declare-fun |_Glue0| ( Int Int Heap Int HeapObject ) Bool)
(declare-fun |_Glue5| ( Heap Int HeapObject ) Bool)
(declare-fun |_Glue8_exp_exp| ( Int Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_19| ( Heap Int Int Int ) Bool)
(declare-fun |CHC_COMP_FALSE| ( ) Bool)
(declare-fun |inv_main_16| ( Heap Int Int Int ) Bool)
(declare-fun |inv_main536_3| ( Heap Int Int Int ) Bool)
(declare-fun |_Glue6_exp_exp| ( Int Int Int Int Heap Int HeapObject ) Bool)
(declare-fun |inv_main_26| ( Heap Int ) Bool)
(declare-fun |Inv_Heap| ( Int HeapObject ) Bool)
(declare-fun |_Glue1| ( Int Int Heap Int Int HeapObject ) Bool)
(declare-fun |inv_main_9| ( Heap Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) (v_7 Int) ) 
    (=>
      (and
        (inv_main536_3 E v_7 D G)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= 0 v_7) (= a!1 F) (>= (HeapSize E) G) (not (<= G 0)) (= 0 C)))
      )
      (_Glue6_exp_exp C B A D E G F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) (v_7 Int) ) 
    (=>
      (and
        (inv_main536_3 G v_7 F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize G) E))
                (select (HeapContents G) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize G) E)))))
  (and (= 0 v_7) (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue6_exp_exp D B A F G E C)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (_Glue6_exp_exp K J I H G F E)
        (and (= (|node::n| A) D)
     (= (node 2 D) C)
     (= (getnode E) A)
     (= (O_node C) B)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_node) E))
      )
      (Inv_Heap F B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I HeapObject) (J node) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) ) 
    (=>
      (and
        (_Glue6_exp_exp Q P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L F))
                M))
      (a!2 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize E))) D)))
  (and (= a!1 E)
       a!3
       (= (newAddr D) C)
       (= (|node::n| B) H)
       (= A (newAddr D))
       (not (= C Q))
       (= (node 2 H) G)
       (= (node P O) J)
       (= (getnode K) B)
       (= (O_node J) I)
       (= (O_node G) F)
       ((_ is O_node) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H node) (I Int) (J HeapObject) (K node) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue6_exp_exp R Q P O N M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M G))
                N))
      (a!2 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) J))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize F))) E)))
  (and (= a!1 F)
       (= (newHeap E) D)
       a!3
       (= (newAddr E) C)
       (= (|node::n| B) I)
       (not (= C R))
       (= A 1)
       (= (node 2 I) H)
       (= (node Q P) K)
       (= (getnode L) B)
       (= (O_node K) J)
       (= (O_node H) G)
       ((_ is O_node) L))))
      )
      (inv_main_9 D A O C M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Heap) (G HeapObject) (H Int) ) 
    (=>
      (and
        (inv_main536_3 F E D H)
        (Inv_Heap H G)
        (let ((a!1 (ite (and (not (<= H 0)) (>= (HeapSize F) H))
                (select (HeapContents F) H)
                defObj)))
  (and (= a!1 G) (>= (HeapSize F) H) (not (<= H 0)) (= 0 C)))
      )
      (_Glue8_exp_exp C B A D E F H G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C HeapObject) (D Int) (E Int) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (inv_main536_3 H G F E)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize H) E))
                (select (HeapContents H) E)
                defObj))
      (a!2 (or (<= E 0) (not (>= (HeapSize H) E)))))
  (and (= a!1 C) a!2 (= 0 D)))
      )
      (_Glue8_exp_exp D B A F G H E C)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C node) (D Int) (E HeapObject) (F Int) (G Heap) (H Int) (I Int) (J Int) (K Int) (L Int) ) 
    (=>
      (and
        (_Glue8_exp_exp L K J I H G F E)
        (and (= (|node::n| A) D)
     (= (node 1 D) C)
     (= (getnode E) A)
     (= (O_node C) B)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_node) E))
      )
      (Inv_Heap F B)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) (H Int) (I HeapObject) (J node) (K HeapObject) (L Int) (M Heap) (N Int) (O Int) (P Int) (Q Int) (R Int) ) 
    (=>
      (and
        (_Glue8_exp_exp R Q P O N M L K)
        (let ((a!1 (ite (and (not (<= L 0)) (>= (HeapSize M) L))
                (HeapCtor (HeapSize M) (store (HeapContents M) L F))
                M))
      (a!2 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) I))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize E))) D)))
  (and (= a!1 E)
       a!3
       (= (newAddr D) C)
       (= (|node::n| B) H)
       (not (= C R))
       (= A (newAddr D))
       (not (= N 0))
       (= (node 1 H) G)
       (= (node Q P) J)
       (= (getnode K) B)
       (= (O_node G) F)
       (= (O_node J) I)
       ((_ is O_node) K))))
      )
      (Inv_Heap A I)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E AllocResHeap) (F Heap) (G HeapObject) (H node) (I Int) (J HeapObject) (K node) (L HeapObject) (M Int) (N Heap) (O Int) (P Int) (Q Int) (R Int) (S Int) ) 
    (=>
      (and
        (_Glue8_exp_exp S R Q P O N M L)
        (let ((a!1 (ite (and (not (<= M 0)) (>= (HeapSize N) M))
                (HeapCtor (HeapSize N) (store (HeapContents N) M G))
                N))
      (a!2 (HeapCtor (+ 1 (HeapSize F))
                     (store (HeapContents F) (+ 1 (HeapSize F)) J))))
(let ((a!3 (= (AllocResHeap a!2 (+ 1 (HeapSize F))) E)))
  (and (= a!1 F)
       (= (newHeap E) D)
       a!3
       (= (newAddr E) C)
       (= (|node::n| B) I)
       (not (= C S))
       (= A 0)
       (not (= O 0))
       (= (node 1 I) H)
       (= (node R Q) K)
       (= (getnode L) B)
       (= (O_node H) G)
       (= (O_node K) J)
       ((_ is O_node) L))))
      )
      (inv_main_9 D A P C M)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (inv_main_19 E D C G)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::n| B) A)
       (= (getnode F) B)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) F)))
      )
      (inv_main_16 E D C A)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_19 G F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize G) D))
                (select (HeapContents G) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize G) D)))))
  (and (= (|node::n| B) A) (= (getnode C) B) (= a!1 C) a!2 ((_ is O_node) C)))
      )
      (inv_main_16 G F E A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (Inv_Heap C B)
        (inv_main_26 A C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (>= (HeapSize A) C) (not (<= C 0)) (= a!1 B)))
      )
      (_Glue5 A C B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_26 C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize C) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue5 C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C node) (D HeapObject) (E Int) (F Heap) ) 
    (=>
      (and
        (_Glue5 F E D)
        (and (= (|node::h| C) B)
     (not (= B 3))
     (= (getnode D) C)
     (= defObj A)
     (>= (HeapSize F) E)
     (not (<= E 0))
     ((_ is O_node) D))
      )
      (Inv_Heap E A)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) (D Int) (E node) (F HeapObject) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue5 H G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize H) G))
                (HeapCtor (HeapSize H) (store (HeapContents H) G B))
                H)))
  (and (= a!1 A)
       (= (|node::n| E) D)
       (= (|node::h| E) C)
       (not (= C 3))
       (= (getnode F) E)
       (= defObj B)
       ((_ is O_node) F)))
      )
      (inv_main_26 A D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (Inv_Heap F E)
        (inv_main_9 D C B A F)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (>= (HeapSize D) F) (not (<= F 0)) (= a!1 E)))
      )
      (_Glue3 D F A E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize F) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue3 F B C A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Int) (G Int) (H Heap) ) 
    (=>
      (and
        (_Glue3 H G F E)
        (and (= (|node::h| D) C)
     (= (node C F) B)
     (= (getnode E) D)
     (= (O_node B) A)
     (>= (HeapSize H) G)
     (not (<= G 0))
     ((_ is O_node) E))
      )
      (Inv_Heap G A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (Inv_Heap F E)
        (inv_main_9 D C B A F)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (>= (HeapSize D) F) (not (<= F 0)) (= a!1 E)))
      )
      (_Glue1 C B D A F E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (or (<= B 0) (not (>= (HeapSize F) B))))
      (a!2 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj)))
  (and a!1 (= a!2 A)))
      )
      (_Glue1 E D F C B A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Int) (G Int) (H Heap) (I Int) (J Int) ) 
    (=>
      (and
        (_Glue1 J I H G F E)
        (and (= (|node::h| D) C)
     (= (node C G) B)
     (= (getnode E) D)
     (= (O_node B) A)
     (>= (HeapSize H) F)
     (not (<= F 0))
     ((_ is O_node) E))
      )
      (Inv_Heap F A)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E Int) (F node) (G Heap) (H HeapObject) (I Int) (J Heap) (K Int) (L Int) (M HeapObject) (N Int) ) 
    (=>
      (and
        (_Glue1 L K J I N H)
        (Inv_Heap N M)
        (let ((a!1 (ite (and (not (<= N 0)) (>= (HeapSize J) N))
                (HeapCtor (HeapSize J) (store (HeapContents J) N A))
                J))
      (a!2 (ite (and (not (<= N 0)) (>= (HeapSize G) N))
                (select (HeapContents G) N)
                defObj)))
  (and ((_ is O_node) M)
       (= a!1 G)
       (= (|node::n| F) E)
       (= (|node::h| D) C)
       (= (node C I) B)
       (= (getnode H) D)
       (= (getnode M) F)
       (= a!2 M)
       (= (O_node B) A)
       (>= (HeapSize G) N)
       (not (<= N 0))
       ((_ is O_node) H)))
      )
      (inv_main536_3 G L K E)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E Int) (F node) (G HeapObject) (H Heap) (I HeapObject) (J Int) (K Int) (L Heap) (M Int) (N Int) ) 
    (=>
      (and
        (_Glue1 N M L K J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize L) J))
                (HeapCtor (HeapSize L) (store (HeapContents L) J A))
                L))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (select (HeapContents H) J)
                defObj))
      (a!3 (or (<= J 0) (not (>= (HeapSize H) J)))))
  (and ((_ is O_node) I)
       (= a!1 H)
       (= (|node::n| F) E)
       (= (|node::h| D) C)
       (= (node C K) B)
       (= (getnode G) F)
       (= (getnode I) D)
       (= a!2 G)
       (= (O_node B) A)
       a!3
       ((_ is O_node) G)))
      )
      (inv_main536_3 H N M E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D AllocResHeap) (E Heap) (F HeapObject) (G node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize E))
                     (store (HeapContents E) (+ 1 (HeapSize E)) F))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize E))) D)))
  (and a!2
       (= 0 B)
       (= (newAddr D) C)
       (= A (newAddr D))
       (not (= C B))
       (= (O_node G) F)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) E))))
      )
      (Inv_Heap A F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Heap) (F AllocResHeap) (G Heap) (H HeapObject) (I node) ) 
    (=>
      (and
        (let ((a!1 (HeapCtor (+ 1 (HeapSize G))
                     (store (HeapContents G) (+ 1 (HeapSize G)) H))))
(let ((a!2 (= (AllocResHeap a!1 (+ 1 (HeapSize G))) F)))
  (and (= (newHeap F) E)
       a!2
       (= 0 C)
       (= (newAddr F) D)
       (= A 1)
       (= B D)
       (not (= D C))
       (= (O_node I) H)
       (= (HeapCtor 0 ((as const (Array Int HeapObject)) defObj)) G))))
      )
      (inv_main536_3 E A B D)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Int) (E Heap) (F HeapObject) (G Int) ) 
    (=>
      (and
        (inv_main_16 E D C G)
        (Inv_Heap G F)
        (let ((a!1 (ite (and (not (<= G 0)) (>= (HeapSize E) G))
                (select (HeapContents E) G)
                defObj)))
  (and (= (|node::h| B) 1)
       (not (= D 0))
       (= A 0)
       (= (getnode F) B)
       (= a!1 F)
       (>= (HeapSize E) G)
       (not (<= G 0))
       ((_ is O_node) F)))
      )
      (inv_main_19 E A C G)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Int) (G Heap) ) 
    (=>
      (and
        (inv_main_16 G F E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize G) D))
                (select (HeapContents G) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize G) D)))))
  (and (= (|node::h| B) 1)
       (= A 0)
       (not (= F 0))
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_19 G A E D)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C Int) (D Heap) (E HeapObject) (F Int) (v_6 Int) ) 
    (=>
      (and
        (inv_main_16 D v_6 C F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= 0 v_6)
       (= (|node::h| B) 2)
       (= A 1)
       (= (getnode E) B)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) E)))
      )
      (inv_main_19 D A C F)
    )
  )
)
(assert
  (forall ( (A Int) (B node) (C HeapObject) (D Int) (E Int) (F Heap) (v_6 Int) ) 
    (=>
      (and
        (inv_main_16 F v_6 E D)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize F) D))
                (select (HeapContents F) D)
                defObj))
      (a!2 (or (<= D 0) (not (>= (HeapSize F) D)))))
  (and (= 0 v_6)
       (= (|node::h| B) 2)
       (= A 1)
       (= (getnode C) B)
       (= a!1 C)
       a!2
       ((_ is O_node) C)))
      )
      (inv_main_19 F A E D)
    )
  )
)
(assert
  (forall ( (A node) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main_16 D C B F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= (|node::h| A) 3)
       (= (getnode E) A)
       (= a!1 E)
       (>= (HeapSize D) F)
       (not (<= F 0))
       ((_ is O_node) E)))
      )
      (inv_main_26 D B)
    )
  )
)
(assert
  (forall ( (A node) (B HeapObject) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_16 F E D C)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize F) C))
                (select (HeapContents F) C)
                defObj))
      (a!2 (or (<= C 0) (not (>= (HeapSize F) C)))))
  (and (= (|node::h| A) 3) (= (getnode B) A) (= a!1 B) a!2 ((_ is O_node) B)))
      )
      (inv_main_26 F D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (Inv_Heap F E)
        (inv_main536_3 D C B F)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (>= (HeapSize D) F) (not (<= F 0)) (= a!1 E)))
      )
      (_Glue0 A B D F E)
    )
  )
)
(assert
  (forall ( (A Int) (B HeapObject) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main536_3 F E D C)
        (let ((a!1 (or (<= C 0) (not (>= (HeapSize F) C))))
      (a!2 (ite (and (not (<= C 0)) (>= (HeapSize F) C))
                (select (HeapContents F) C)
                defObj)))
  (and a!1 (= a!2 B)))
      )
      (_Glue0 A D F C B)
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Int) (G Heap) (H Int) (v_8 Int) ) 
    (=>
      (and
        (_Glue0 H v_8 G F E)
        (and (= v_8 H)
     (= (|node::n| D) C)
     (= (node 3 C) B)
     (= (getnode E) D)
     (= (O_node B) A)
     (>= (HeapSize G) F)
     (not (<= F 0))
     ((_ is O_node) E))
      )
      (Inv_Heap F A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E node) (F Int) (G node) (H HeapObject) (I Int) (J Heap) (K Int) (v_11 Int) ) 
    (=>
      (and
        (_Glue0 K v_11 J I H)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I D))
                J)))
  (and (= v_11 K)
       (= a!1 C)
       (= (|node::n| G) F)
       (= A 1)
       (= B K)
       (= (node 3 F) E)
       (= (getnode H) G)
       (= (O_node E) D)
       ((_ is O_node) H)))
      )
      (inv_main_16 C A B K)
    )
  )
)
(assert
  (forall ( (A Heap) (B HeapObject) (C Int) ) 
    (=>
      (and
        (inv_main_26 A C)
        (Inv_Heap C B)
        (let ((a!1 (ite (and (not (<= C 0)) (>= (HeapSize A) C))
                (select (HeapContents A) C)
                defObj)))
  (and (= a!1 B) (>= (HeapSize A) C) (not (<= C 0)) (not ((_ is O_node) B))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Heap) ) 
    (=>
      (and
        (inv_main_26 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize C) B))
                (select (HeapContents C) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize C) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_16 C B A E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (not ((_ is O_node) D))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_16 E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E Heap) (F HeapObject) (G Int) (H Heap) (I HeapObject) (J Int) ) 
    (=>
      (and
        (_Glue3 H J G F)
        (Inv_Heap J I)
        (let ((a!1 (ite (and (not (<= J 0)) (>= (HeapSize H) J))
                (HeapCtor (HeapSize H) (store (HeapContents H) J A))
                H))
      (a!2 (ite (and (not (<= J 0)) (>= (HeapSize E) J))
                (select (HeapContents E) J)
                defObj)))
  (and (not ((_ is O_node) I))
       (= a!1 E)
       (= (|node::h| D) C)
       (= (node C G) B)
       (= (getnode F) D)
       (= a!2 I)
       (= (O_node B) A)
       (>= (HeapSize E) J)
       (not (<= J 0))
       ((_ is O_node) F)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B node) (C Int) (D node) (E HeapObject) (F Heap) (G HeapObject) (H Int) (I Int) (J Heap) ) 
    (=>
      (and
        (_Glue3 J I H G)
        (let ((a!1 (ite (and (not (<= I 0)) (>= (HeapSize J) I))
                (HeapCtor (HeapSize J) (store (HeapContents J) I A))
                J))
      (a!2 (ite (and (not (<= I 0)) (>= (HeapSize F) I))
                (select (HeapContents F) I)
                defObj))
      (a!3 (or (<= I 0) (not (>= (HeapSize F) I)))))
  (and (not ((_ is O_node) E))
       (= a!1 F)
       (= (|node::h| D) C)
       (= (node C H) B)
       (= (getnode G) D)
       (= a!2 E)
       (= (O_node B) A)
       a!3
       ((_ is O_node) G)))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Heap) (C HeapObject) (D Int) (v_4 Int) ) 
    (=>
      (and
        (inv_main536_3 B v_4 A D)
        (Inv_Heap D C)
        (let ((a!1 (ite (and (not (<= D 0)) (>= (HeapSize B) D))
                (select (HeapContents B) D)
                defObj)))
  (and (= 0 v_4)
       (= a!1 C)
       (>= (HeapSize B) D)
       (not (<= D 0))
       (not ((_ is O_node) C))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Heap) (v_4 Int) ) 
    (=>
      (and
        (inv_main536_3 D v_4 C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize D) B))
                (select (HeapContents D) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize D) B)))))
  (and (= 0 v_4) (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main_19 C B A E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (not ((_ is O_node) D))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main_19 E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main536_3 C B A E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (= a!1 D) (>= (HeapSize C) E) (not (<= E 0)) (not ((_ is O_node) D))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main536_3 E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Heap) (D HeapObject) (E Int) ) 
    (=>
      (and
        (inv_main536_3 C B A E)
        (Inv_Heap E D)
        (let ((a!1 (ite (and (not (<= E 0)) (>= (HeapSize C) E))
                (select (HeapContents C) E)
                defObj)))
  (and (not (= B 0))
       (= a!1 D)
       (>= (HeapSize C) E)
       (not (<= E 0))
       (not ((_ is O_node) D))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Heap) ) 
    (=>
      (and
        (inv_main536_3 E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize E) B))
                (select (HeapContents E) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize E) B)))))
  (and (not (= D 0)) (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Heap) (E HeapObject) (F Int) ) 
    (=>
      (and
        (inv_main_9 D C B A F)
        (Inv_Heap F E)
        (let ((a!1 (ite (and (not (<= F 0)) (>= (HeapSize D) F))
                (select (HeapContents D) F)
                defObj)))
  (and (= a!1 E) (>= (HeapSize D) F) (not (<= F 0)) (not ((_ is O_node) E))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (A HeapObject) (B Int) (C Int) (D Int) (E Int) (F Heap) ) 
    (=>
      (and
        (inv_main_9 F E D C B)
        (let ((a!1 (ite (and (not (<= B 0)) (>= (HeapSize F) B))
                (select (HeapContents F) B)
                defObj))
      (a!2 (or (<= B 0) (not (>= (HeapSize F) B)))))
  (and (= a!1 A) a!2 (not ((_ is O_node) A))))
      )
      CHC_COMP_FALSE
    )
  )
)
(assert
  (forall ( (CHC_COMP_UNUSED Bool) ) 
    (=>
      (and
        CHC_COMP_FALSE
      )
      false
    )
  )
)

(check-sat)
(exit)
