(set-logic HORN)

(declare-datatypes ((pair_130 0) (Bool_401 0)) (((pair_131  (projpair_260 Int) (projpair_261 Bool_401)))
                                                ((false_401 ) (true_401 ))))
(declare-datatypes ((Maybe_11 0)) (((Nothing_11 ) (Just_11  (projJust_22 Int)))))
(declare-datatypes ((pair_132 0)) (((pair_133  (projpair_262 Int) (projpair_263 Int)))))
(declare-datatypes ((Map_0 0) (Reach_0 0)) (((Rest_0  (projRest_0 Int)) (Slot_0  (projSlot_0 Int) (projSlot_1 Map_0)))
                                            ((Init_4  (projInit_0 Map_0)) (CheckIn_0  (projCheckIn_0 Int) (projCheckIn_1 Int) (projCheckIn_2 Int) (projCheckIn_3 Reach_0)) (EnterRoom_0  (projEnterRoom_0 Int) (projEnterRoom_1 Int) (projEnterRoom_2 pair_132) (projEnterRoom_3 Reach_0)) (ExitRoom_0  (projExitRoom_0 Int) (projExitRoom_1 Int) (projExitRoom_2 Reach_0)))))
(declare-datatypes ((Map_1 0)) (((Rest_1  (projRest_1 Maybe_11)) (Slot_1  (projSlot_2 Maybe_11) (projSlot_3 Map_1)))))
(declare-datatypes ((Map_2 0) (State_0 0) (Map_4 0) (Map_3 0)) (((Rest_2  (projRest_2 Bool_401)) (Slot_2  (projSlot_4 Bool_401) (projSlot_5 Map_2)))
                                                                ((State_1  (projState_0 Map_1) (projState_1 Map_0) (projState_2 Map_2) (projState_3 Map_4) (projState_4 Map_0) (projState_5 Map_3) (projState_6 Map_2)))
                                                                ((Rest_4  (projRest_4 Map_3)) (Slot_4  (projSlot_8 Map_3) (projSlot_9 Map_4)))
                                                                ((Rest_3  (projRest_3 Map_2)) (Slot_3  (projSlot_6 Map_2) (projSlot_7 Map_3)))))
(declare-datatypes ((pair_134 0)) (((pair_135  (projpair_264 Int) (projpair_265 Maybe_11)))))
(declare-datatypes ((pair_136 0)) (((pair_137  (projpair_266 Int) (projpair_267 Map_2)))))
(declare-datatypes ((pair_138 0)) (((pair_139  (projpair_268 Int) (projpair_269 Map_3)))))
(declare-datatypes ((Maybe_12 0)) (((Nothing_12 ) (Just_12  (projJust_23 State_0)))))

(declare-fun |empty_9| ( Map_2 ) Bool)
(declare-fun |x_76261| ( Map_3 Map_4 Int ) Bool)
(declare-fun |and_404| ( Bool_401 Bool_401 Bool_401 ) Bool)
(declare-fun |add_428| ( Map_3 pair_132 Map_3 ) Bool)
(declare-fun |x_76223| ( Map_2 Map_2 pair_130 ) Bool)
(declare-fun |roomk_0| ( Map_0 State_0 ) Bool)
(declare-fun |gt_404| ( Int Int ) Bool)
(declare-fun |issued_0| ( Map_2 State_0 ) Bool)
(declare-fun |x_76251| ( Bool_401 Map_2 Int ) Bool)
(declare-fun |inj_0| ( Bool_401 Int Map_0 ) Bool)
(declare-fun |diseqMaybe_11| ( Maybe_11 Maybe_11 ) Bool)
(declare-fun |x_76236| ( Map_3 Map_3 pair_136 ) Bool)
(declare-fun |psafe_0| ( Bool_401 Int Int Int Reach_0 ) Bool)
(declare-fun |injupto_0| ( Bool_401 Int Int Map_0 ) Bool)
(declare-fun |rem_0| ( Map_2 Int Map_2 ) Bool)
(declare-fun |x_76220| ( Bool_401 Map_2 Map_2 ) Bool)
(declare-fun |x_76241| ( Map_4 Map_4 pair_138 ) Bool)
(declare-fun |x_76264| ( Maybe_11 Map_1 Int ) Bool)
(declare-fun |reach_1| ( Maybe_12 Int Reach_0 ) Bool)
(declare-fun |x_76231| ( Map_0 Map_0 pair_132 ) Bool)
(declare-fun |minus_422| ( Int Int Int ) Bool)
(declare-fun |le_401| ( Int Int ) Bool)
(declare-fun |range_0| ( Map_2 Map_0 ) Bool)
(declare-fun |or_414| ( Bool_401 Bool_401 Bool_401 ) Bool)
(declare-fun |safe_0| ( Map_2 State_0 ) Bool)
(declare-fun |diseqBool_190| ( Bool_401 Bool_401 ) Bool)
(declare-fun |add_427| ( Map_2 Int Map_2 ) Bool)
(declare-fun |x_76254| ( Int Map_0 Int ) Bool)
(declare-fun |empty_8| ( Map_3 ) Bool)
(declare-fun |owns_0| ( Map_1 State_0 ) Bool)
(declare-fun |cards_0| ( Map_4 State_0 ) Bool)
(declare-fun |x_76257| ( Map_2 Map_3 Int ) Bool)
(declare-fun |isin_0| ( Map_3 State_0 ) Bool)
(declare-fun |x_76246| ( Map_1 Map_1 pair_134 ) Bool)

(assert
  (forall ( (A Int) (v_1 Int) (v_2 Int) ) 
    (=>
      (and
        (and true (= 0 v_1) (= 0 v_2))
      )
      (minus_422 v_1 v_2 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) ) 
    (=>
      (and
        (minus_422 E C D)
        (and (= B (+ 1 E)) (= A (+ 1 C)))
      )
      (minus_422 B A D)
    )
  )
)
(assert
  (forall ( (A Int) (v_1 Int) ) 
    (=>
      (and
        (and true (= 0 v_1))
      )
      (le_401 v_1 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) ) 
    (=>
      (and
        (le_401 C D)
        (and (= B (+ 1 C)) (= A (+ 1 D)))
      )
      (le_401 B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (v_2 Int) ) 
    (=>
      (and
        (and (= A (+ 1 B)) (= 0 v_2))
      )
      (gt_404 A v_2)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) ) 
    (=>
      (and
        (gt_404 C D)
        (and (= B (+ 1 C)) (= A (+ 1 D)))
      )
      (gt_404 B A)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 false_401) (= v_1 true_401))
      )
      (diseqBool_190 v_0 v_1)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 true_401) (= v_1 false_401))
      )
      (diseqBool_190 v_0 v_1)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) (v_2 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 false_401) (= v_1 false_401) (= v_2 false_401))
      )
      (and_404 v_0 v_1 v_2)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) (v_2 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 false_401) (= v_1 true_401) (= v_2 false_401))
      )
      (and_404 v_0 v_1 v_2)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) (v_2 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 false_401) (= v_1 false_401) (= v_2 true_401))
      )
      (and_404 v_0 v_1 v_2)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) (v_2 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 true_401) (= v_1 true_401) (= v_2 true_401))
      )
      (and_404 v_0 v_1 v_2)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) (v_2 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 false_401) (= v_1 false_401) (= v_2 false_401))
      )
      (or_414 v_0 v_1 v_2)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) (v_2 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 true_401) (= v_1 true_401) (= v_2 false_401))
      )
      (or_414 v_0 v_1 v_2)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) (v_2 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 true_401) (= v_1 false_401) (= v_2 true_401))
      )
      (or_414 v_0 v_1 v_2)
    )
  )
)
(assert
  (forall ( (v_0 Bool_401) (v_1 Bool_401) (v_2 Bool_401) ) 
    (=>
      (and
        (and true (= v_0 true_401) (= v_1 true_401) (= v_2 true_401))
      )
      (or_414 v_0 v_1 v_2)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Int) (v_2 Maybe_11) ) 
    (=>
      (and
        (and (= A (Just_11 B)) (= v_2 Nothing_11))
      )
      (diseqMaybe_11 v_2 A)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Int) (v_2 Maybe_11) ) 
    (=>
      (and
        (and (= A (Just_11 B)) (= v_2 Nothing_11))
      )
      (diseqMaybe_11 A v_2)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Maybe_11) (C Int) (D Int) ) 
    (=>
      (and
        (and (= B (Just_11 C)) (not (= C D)) (= A (Just_11 D)))
      )
      (diseqMaybe_11 B A)
    )
  )
)
(assert
  (forall ( (A State_0) (B Map_1) (C Map_0) (D Map_2) (E Map_4) (F Map_0) (G Map_3) (H Map_2) ) 
    (=>
      (and
        (= A (State_1 B C D E F G H))
      )
      (safe_0 H A)
    )
  )
)
(assert
  (forall ( (A State_0) (B Map_1) (C Map_0) (D Map_2) (E Map_4) (F Map_0) (G Map_3) (H Map_2) ) 
    (=>
      (and
        (= A (State_1 B C D E F G H))
      )
      (roomk_0 F A)
    )
  )
)
(assert
  (forall ( (A State_0) (B Map_1) (C Map_0) (D Map_2) (E Map_4) (F Map_0) (G Map_3) (H Map_2) ) 
    (=>
      (and
        (= A (State_1 B C D E F G H))
      )
      (owns_0 B A)
    )
  )
)
(assert
  (forall ( (A State_0) (B Map_1) (C Map_0) (D Map_2) (E Map_4) (F Map_0) (G Map_3) (H Map_2) ) 
    (=>
      (and
        (= A (State_1 B C D E F G H))
      )
      (issued_0 D A)
    )
  )
)
(assert
  (forall ( (A State_0) (B Map_1) (C Map_0) (D Map_2) (E Map_4) (F Map_0) (G Map_3) (H Map_2) ) 
    (=>
      (and
        (= A (State_1 B C D E F G H))
      )
      (isin_0 G A)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_0) (v_2 Bool_401) (v_3 Int) ) 
    (=>
      (and
        (and true (= v_2 true_401) (= 0 v_3))
      )
      (injupto_0 v_2 v_3 A B)
    )
  )
)
(assert
  (forall ( (A Map_0) (B Map_0) (C Int) (D Int) (v_4 Bool_401) ) 
    (=>
      (and
        (and (not (= C 0)) (= A (Slot_0 D B)) (= v_4 false_401))
      )
      (injupto_0 v_4 C D A)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_0) (C Int) (D Bool_401) (E Int) (F Map_0) (G Int) (H Int) ) 
    (=>
      (and
        (minus_422 C G A)
        (injupto_0 D C H F)
        (and (= A 1) (not (= G 0)) (not (= H E)) (= B (Slot_0 E F)))
      )
      (injupto_0 D G H B)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_0) (v_2 Bool_401) (v_3 Int) ) 
    (=>
      (and
        (and true (= v_2 true_401) (= 0 v_3))
      )
      (injupto_0 v_2 v_3 A B)
    )
  )
)
(assert
  (forall ( (A Map_0) (B Int) (C Int) (v_3 Bool_401) ) 
    (=>
      (and
        (and (not (= B 0)) (= A (Rest_0 C)) (= v_3 false_401))
      )
      (injupto_0 v_3 B C A)
    )
  )
)
(assert
  (forall ( (A Map_0) (B Int) (C Int) (D Int) (v_4 Bool_401) ) 
    (=>
      (and
        (and (not (= C 0)) (not (= D B)) (= A (Rest_0 B)) (= v_4 true_401))
      )
      (injupto_0 v_4 C D A)
    )
  )
)
(assert
  (forall ( (A Map_0) (v_1 Bool_401) (v_2 Int) ) 
    (=>
      (and
        (and true (= v_1 true_401) (= 0 v_2))
      )
      (inj_0 v_1 v_2 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_0) (C Int) (D Bool_401) (E Bool_401) (F Bool_401) (G Int) (H Map_0) (I Int) ) 
    (=>
      (and
        (minus_422 C I A)
        (inj_0 E C H)
        (injupto_0 F I G H)
        (and_404 D E F)
        (and (= A 1) (not (= I 0)) (= B (Slot_0 G H)))
      )
      (inj_0 D I B)
    )
  )
)
(assert
  (forall ( (A Map_0) (v_1 Bool_401) (v_2 Int) ) 
    (=>
      (and
        (and true (= v_1 true_401) (= 0 v_2))
      )
      (inj_0 v_1 v_2 A)
    )
  )
)
(assert
  (forall ( (A Map_0) (B Int) (C Int) (v_3 Bool_401) ) 
    (=>
      (and
        (and (not (= C 0)) (= A (Rest_0 B)) (= v_3 false_401))
      )
      (inj_0 v_3 C A)
    )
  )
)
(assert
  (forall ( (v_0 Map_3) ) 
    (=>
      (and
        (and true (= v_0 (Rest_3 (Rest_2 false_401))))
      )
      (empty_8 v_0)
    )
  )
)
(assert
  (forall ( (v_0 Map_2) ) 
    (=>
      (and
        (and true (= v_0 (Rest_2 false_401)))
      )
      (empty_9 v_0)
    )
  )
)
(assert
  (forall ( (A State_0) (B Map_1) (C Map_0) (D Map_2) (E Map_4) (F Map_0) (G Map_3) (H Map_2) ) 
    (=>
      (and
        (= A (State_1 B C D E F G H))
      )
      (cards_0 E A)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Map_2) (C Bool_401) (D Map_2) (E Bool_401) (F Map_2) ) 
    (=>
      (and
        (x_76220 C F D)
        (and (= B (Slot_2 E F)) (= A (Slot_2 E D)))
      )
      (x_76220 C B A)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Map_2) (C Bool_401) (D Map_2) (E Bool_401) (F Map_2) (v_6 Bool_401) ) 
    (=>
      (and
        (diseqBool_190 E C)
        (and (= B (Slot_2 E F)) (= A (Slot_2 C D)) (= v_6 false_401))
      )
      (x_76220 v_6 B A)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Map_2) (C Map_2) (D Bool_401) (E Bool_401) (F Map_2) ) 
    (=>
      (and
        (x_76220 D F A)
        (and (= B (Rest_2 E)) (= C (Slot_2 E F)) (= A (Rest_2 E)))
      )
      (x_76220 D C B)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Map_2) (C Bool_401) (D Bool_401) (E Map_2) (v_5 Bool_401) ) 
    (=>
      (and
        (diseqBool_190 D C)
        (and (= B (Slot_2 D E)) (= A (Rest_2 C)) (= v_5 false_401))
      )
      (x_76220 v_5 B A)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Map_2) (C Map_2) (D Bool_401) (E Bool_401) (F Map_2) ) 
    (=>
      (and
        (x_76220 D A F)
        (and (= B (Slot_2 E F)) (= C (Rest_2 E)) (= A (Rest_2 E)))
      )
      (x_76220 D C B)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Map_2) (C Bool_401) (D Map_2) (E Bool_401) (v_5 Bool_401) ) 
    (=>
      (and
        (diseqBool_190 E C)
        (and (= B (Rest_2 E)) (= A (Slot_2 C D)) (= v_5 false_401))
      )
      (x_76220 v_5 B A)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Map_2) (C Bool_401) (v_3 Bool_401) ) 
    (=>
      (and
        (and (= B (Rest_2 C)) (= A (Rest_2 C)) (= v_3 true_401))
      )
      (x_76220 v_3 B A)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Map_2) (C Bool_401) (D Bool_401) (v_4 Bool_401) ) 
    (=>
      (and
        (diseqBool_190 D C)
        (and (= B (Rest_2 D)) (= A (Rest_2 C)) (= v_4 false_401))
      )
      (x_76220 v_4 B A)
    )
  )
)
(assert
  (forall ( (A pair_130) (B Map_2) (C Map_2) (D Bool_401) (E Bool_401) (F Map_2) ) 
    (=>
      (and
        (and (= C (Slot_2 D F)) (= A (pair_131 0 D)) (= B (Slot_2 E F)))
      )
      (x_76223 C B A)
    )
  )
)
(assert
  (forall ( (A pair_130) (B Int) (C pair_130) (D Map_2) (E Map_2) (F Int) (G Map_2) (H Int) (I Bool_401) (J Bool_401) (K Map_2) ) 
    (=>
      (and
        (minus_422 F H B)
        (x_76223 G K A)
        (and (= D (Slot_2 J K))
     (= A (pair_131 F I))
     (= C (pair_131 H I))
     (= B 1)
     (not (= H 0))
     (= E (Slot_2 J G)))
      )
      (x_76223 E D C)
    )
  )
)
(assert
  (forall ( (A pair_130) (B Map_2) (C Map_2) (D Bool_401) (E Bool_401) ) 
    (=>
      (and
        (and (= C (Slot_2 D (Rest_2 E))) (= A (pair_131 0 D)) (= B (Rest_2 E)))
      )
      (x_76223 C B A)
    )
  )
)
(assert
  (forall ( (A pair_130) (B Map_2) (C Int) (D pair_130) (E Map_2) (F Map_2) (G Int) (H Map_2) (I Int) (J Bool_401) (K Bool_401) ) 
    (=>
      (and
        (minus_422 G I C)
        (x_76223 H B A)
        (and (= E (Rest_2 K))
     (= F (Slot_2 K H))
     (= D (pair_131 I J))
     (= A (pair_131 G J))
     (= C 1)
     (not (= I 0))
     (= B (Rest_2 K)))
      )
      (x_76223 F E D)
    )
  )
)
(assert
  (forall ( (A pair_130) (B Map_2) (C Int) (D Map_2) ) 
    (=>
      (and
        (x_76223 B D A)
        (= A (pair_131 C true_401))
      )
      (add_427 B C D)
    )
  )
)
(assert
  (forall ( (A Map_0) (B Map_2) (C Map_2) (D Int) (E Map_0) ) 
    (=>
      (and
        (add_427 B D C)
        (range_0 C E)
        (= A (Slot_0 D E))
      )
      (range_0 B A)
    )
  )
)
(assert
  (forall ( (A Map_0) (B Map_2) (C Map_2) (D Int) ) 
    (=>
      (and
        (add_427 B D C)
        (empty_9 C)
        (= A (Rest_0 D))
      )
      (range_0 B A)
    )
  )
)
(assert
  (forall ( (A pair_130) (B Map_2) (C Int) (D Map_2) ) 
    (=>
      (and
        (x_76223 B D A)
        (= A (pair_131 C false_401))
      )
      (rem_0 B C D)
    )
  )
)
(assert
  (forall ( (A pair_132) (B Map_0) (C Map_0) (D Int) (E Int) (F Map_0) ) 
    (=>
      (and
        (and (= B (Slot_0 E F)) (= A (pair_133 0 D)) (= C (Slot_0 D F)))
      )
      (x_76231 C B A)
    )
  )
)
(assert
  (forall ( (A pair_132) (B Int) (C pair_132) (D Map_0) (E Map_0) (F Int) (G Map_0) (H Int) (I Int) (J Int) (K Map_0) ) 
    (=>
      (and
        (minus_422 F H B)
        (x_76231 G K A)
        (and (= E (Slot_0 J G))
     (= A (pair_133 F I))
     (= C (pair_133 H I))
     (= B 1)
     (not (= H 0))
     (= D (Slot_0 J K)))
      )
      (x_76231 E D C)
    )
  )
)
(assert
  (forall ( (A pair_132) (B Map_0) (C Map_0) (D Int) (E Int) ) 
    (=>
      (and
        (and (= C (Slot_0 D (Rest_0 E))) (= A (pair_133 0 D)) (= B (Rest_0 E)))
      )
      (x_76231 C B A)
    )
  )
)
(assert
  (forall ( (A pair_132) (B Map_0) (C Int) (D pair_132) (E Map_0) (F Map_0) (G Int) (H Map_0) (I Int) (J Int) (K Int) ) 
    (=>
      (and
        (minus_422 G I C)
        (x_76231 H B A)
        (and (= B (Rest_0 K))
     (= F (Slot_0 K H))
     (= D (pair_133 I J))
     (= A (pair_133 G J))
     (= C 1)
     (not (= I 0))
     (= E (Rest_0 K)))
      )
      (x_76231 F E D)
    )
  )
)
(assert
  (forall ( (A pair_136) (B Map_3) (C Map_3) (D Map_2) (E Map_2) (F Map_3) ) 
    (=>
      (and
        (and (= C (Slot_3 D F)) (= A (pair_137 0 D)) (= B (Slot_3 E F)))
      )
      (x_76236 C B A)
    )
  )
)
(assert
  (forall ( (A pair_136) (B Int) (C pair_136) (D Map_3) (E Map_3) (F Int) (G Map_3) (H Int) (I Map_2) (J Map_2) (K Map_3) ) 
    (=>
      (and
        (minus_422 F H B)
        (x_76236 G K A)
        (and (= E (Slot_3 J G))
     (= A (pair_137 F I))
     (= C (pair_137 H I))
     (= B 1)
     (not (= H 0))
     (= D (Slot_3 J K)))
      )
      (x_76236 E D C)
    )
  )
)
(assert
  (forall ( (A pair_136) (B Map_3) (C Map_3) (D Map_2) (E Map_2) ) 
    (=>
      (and
        (and (= C (Slot_3 D (Rest_3 E))) (= A (pair_137 0 D)) (= B (Rest_3 E)))
      )
      (x_76236 C B A)
    )
  )
)
(assert
  (forall ( (A pair_136) (B Map_3) (C Int) (D pair_136) (E Map_3) (F Map_3) (G Int) (H Map_3) (I Int) (J Map_2) (K Map_2) ) 
    (=>
      (and
        (minus_422 G I C)
        (x_76236 H B A)
        (and (= E (Rest_3 K))
     (= F (Slot_3 K H))
     (= D (pair_137 I J))
     (= A (pair_137 G J))
     (= C 1)
     (not (= I 0))
     (= B (Rest_3 K)))
      )
      (x_76236 F E D)
    )
  )
)
(assert
  (forall ( (A pair_138) (B Map_4) (C Map_4) (D Map_3) (E Map_3) (F Map_4) ) 
    (=>
      (and
        (and (= B (Slot_4 E F)) (= C (Slot_4 D F)) (= A (pair_139 0 D)))
      )
      (x_76241 C B A)
    )
  )
)
(assert
  (forall ( (A pair_138) (B Int) (C pair_138) (D Map_4) (E Map_4) (F Int) (G Map_4) (H Int) (I Map_3) (J Map_3) (K Map_4) ) 
    (=>
      (and
        (minus_422 F H B)
        (x_76241 G K A)
        (and (= C (pair_139 H I))
     (= E (Slot_4 J G))
     (= D (Slot_4 J K))
     (= B 1)
     (not (= H 0))
     (= A (pair_139 F I)))
      )
      (x_76241 E D C)
    )
  )
)
(assert
  (forall ( (A pair_138) (B Map_4) (C Map_4) (D Map_3) (E Map_3) ) 
    (=>
      (and
        (and (= B (Rest_4 E)) (= C (Slot_4 D (Rest_4 E))) (= A (pair_139 0 D)))
      )
      (x_76241 C B A)
    )
  )
)
(assert
  (forall ( (A pair_138) (B Map_4) (C Int) (D pair_138) (E Map_4) (F Map_4) (G Int) (H Map_4) (I Int) (J Map_3) (K Map_3) ) 
    (=>
      (and
        (minus_422 G I C)
        (x_76241 H B A)
        (and (= A (pair_139 G J))
     (= E (Rest_4 K))
     (= F (Slot_4 K H))
     (= B (Rest_4 K))
     (= C 1)
     (not (= I 0))
     (= D (pair_139 I J)))
      )
      (x_76241 F E D)
    )
  )
)
(assert
  (forall ( (A pair_134) (B Map_1) (C Map_1) (D Maybe_11) (E Maybe_11) (F Map_1) ) 
    (=>
      (and
        (and (= B (Slot_1 E F)) (= A (pair_135 0 D)) (= C (Slot_1 D F)))
      )
      (x_76246 C B A)
    )
  )
)
(assert
  (forall ( (A pair_134) (B Int) (C pair_134) (D Map_1) (E Map_1) (F Int) (G Map_1) (H Int) (I Maybe_11) (J Maybe_11) (K Map_1) ) 
    (=>
      (and
        (minus_422 F H B)
        (x_76246 G K A)
        (and (= E (Slot_1 J G))
     (= A (pair_135 F I))
     (= C (pair_135 H I))
     (= B 1)
     (not (= H 0))
     (= D (Slot_1 J K)))
      )
      (x_76246 E D C)
    )
  )
)
(assert
  (forall ( (A pair_134) (B Map_1) (C Map_1) (D Maybe_11) (E Maybe_11) ) 
    (=>
      (and
        (and (= C (Slot_1 D (Rest_1 E))) (= A (pair_135 0 D)) (= B (Rest_1 E)))
      )
      (x_76246 C B A)
    )
  )
)
(assert
  (forall ( (A pair_134) (B Map_1) (C Int) (D pair_134) (E Map_1) (F Map_1) (G Int) (H Map_1) (I Int) (J Maybe_11) (K Maybe_11) ) 
    (=>
      (and
        (minus_422 G I C)
        (x_76246 H B A)
        (and (= F (Slot_1 K H))
     (= E (Rest_1 K))
     (= D (pair_135 I J))
     (= A (pair_135 G J))
     (= C 1)
     (not (= I 0))
     (= B (Rest_1 K)))
      )
      (x_76246 F E D)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Bool_401) (C Map_2) (v_3 Int) ) 
    (=>
      (and
        (and (= A (Slot_2 B C)) (= 0 v_3))
      )
      (x_76251 B A v_3)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_2) (C Int) (D Bool_401) (E Bool_401) (F Map_2) (G Int) ) 
    (=>
      (and
        (minus_422 C G A)
        (x_76251 D F C)
        (and (= A 1) (not (= G 0)) (= B (Slot_2 E F)))
      )
      (x_76251 D B G)
    )
  )
)
(assert
  (forall ( (A Map_2) (B Bool_401) (C Int) ) 
    (=>
      (and
        (= A (Rest_2 B))
      )
      (x_76251 B A C)
    )
  )
)
(assert
  (forall ( (A Map_0) (B Int) (C Map_0) (v_3 Int) ) 
    (=>
      (and
        (and (= A (Slot_0 B C)) (= 0 v_3))
      )
      (x_76254 B A v_3)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_0) (C Int) (D Int) (E Int) (F Map_0) (G Int) ) 
    (=>
      (and
        (minus_422 C G A)
        (x_76254 D F C)
        (and (= A 1) (not (= G 0)) (= B (Slot_0 E F)))
      )
      (x_76254 D B G)
    )
  )
)
(assert
  (forall ( (A Map_0) (B Int) (C Int) ) 
    (=>
      (and
        (= A (Rest_0 B))
      )
      (x_76254 B A C)
    )
  )
)
(assert
  (forall ( (A Map_3) (B Map_2) (C Map_3) (v_3 Int) ) 
    (=>
      (and
        (and (= A (Slot_3 B C)) (= 0 v_3))
      )
      (x_76257 B A v_3)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_3) (C Int) (D Map_2) (E Map_2) (F Map_3) (G Int) ) 
    (=>
      (and
        (minus_422 C G A)
        (x_76257 D F C)
        (and (= A 1) (not (= G 0)) (= B (Slot_3 E F)))
      )
      (x_76257 D B G)
    )
  )
)
(assert
  (forall ( (A Map_3) (B Map_2) (C Int) ) 
    (=>
      (and
        (= A (Rest_3 B))
      )
      (x_76257 B A C)
    )
  )
)
(assert
  (forall ( (A pair_136) (B pair_132) (C Map_3) (D Map_2) (E Map_2) (F Int) (G Int) (H Map_3) ) 
    (=>
      (and
        (x_76236 C H A)
        (x_76257 D H F)
        (add_427 E G D)
        (and (= B (pair_133 F G)) (= A (pair_137 F E)))
      )
      (add_428 C B H)
    )
  )
)
(assert
  (forall ( (A Map_4) (B Map_3) (C Map_4) (v_3 Int) ) 
    (=>
      (and
        (and (= A (Slot_4 B C)) (= 0 v_3))
      )
      (x_76261 B A v_3)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_4) (C Int) (D Map_3) (E Map_3) (F Map_4) (G Int) ) 
    (=>
      (and
        (minus_422 C G A)
        (x_76261 D F C)
        (and (= A 1) (not (= G 0)) (= B (Slot_4 E F)))
      )
      (x_76261 D B G)
    )
  )
)
(assert
  (forall ( (A Map_4) (B Map_3) (C Int) ) 
    (=>
      (and
        (= A (Rest_4 B))
      )
      (x_76261 B A C)
    )
  )
)
(assert
  (forall ( (A Map_1) (B Maybe_11) (C Map_1) (v_3 Int) ) 
    (=>
      (and
        (and (= A (Slot_1 B C)) (= 0 v_3))
      )
      (x_76264 B A v_3)
    )
  )
)
(assert
  (forall ( (A Int) (B Map_1) (C Int) (D Maybe_11) (E Maybe_11) (F Map_1) (G Int) ) 
    (=>
      (and
        (minus_422 C G A)
        (x_76264 D F C)
        (and (= A 1) (not (= G 0)) (= B (Slot_1 E F)))
      )
      (x_76264 D B G)
    )
  )
)
(assert
  (forall ( (A Map_1) (B Maybe_11) (C Int) ) 
    (=>
      (and
        (= A (Rest_1 B))
      )
      (x_76264 B A C)
    )
  )
)
(assert
  (forall ( (A State_0) (B pair_136) (C Maybe_12) (D Reach_0) (E Maybe_12) (F Map_2) (G Map_2) (H Map_3) (I Map_3) (J Map_2) (K Map_1) (L Map_0) (M Map_2) (N Map_4) (O Map_0) (P Map_3) (Q Map_2) (R Int) (S Int) (T Reach_0) (U Int) (v_21 Bool_401) ) 
    (=>
      (and
        (reach_1 C U T)
        (le_401 S U)
        (x_76257 F P S)
        (rem_0 G R F)
        (x_76236 H P B)
        (isin_0 I A)
        (x_76257 J I S)
        (x_76251 v_21 J R)
        (and (= v_21 true_401)
     (= E (Just_12 (State_1 K L M N O H Q)))
     (= A (State_1 K L M N O P Q))
     (= B (pair_137 S G))
     (= D (ExitRoom_0 R S T))
     (= C (Just_12 (State_1 K L M N O P Q))))
      )
      (reach_1 E U D)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C State_0) (D Int) (E Int) (F Reach_0) (G Int) (v_7 Maybe_12) ) 
    (=>
      (and
        (reach_1 A G F)
        (gt_404 E G)
        (and (= B (ExitRoom_0 D E F)) (= A (Just_12 C)) (= v_7 Nothing_12))
      )
      (reach_1 v_7 G B)
    )
  )
)
(assert
  (forall ( (A State_0) (B pair_136) (C Maybe_12) (D Reach_0) (E Maybe_12) (F Map_2) (G Map_2) (H Map_3) (I Map_3) (J Map_2) (K Map_1) (L Map_0) (M Map_2) (N Map_4) (O Map_0) (P Map_3) (Q Map_2) (R Int) (S Int) (T Reach_0) (U Int) (v_21 Bool_401) ) 
    (=>
      (and
        (reach_1 C U T)
        (le_401 S U)
        (x_76257 F P S)
        (rem_0 G R F)
        (x_76236 H P B)
        (isin_0 I A)
        (x_76257 J I S)
        (x_76251 v_21 J R)
        (and (= v_21 true_401)
     (= E (Just_12 (State_1 K L M N O H Q)))
     (= A (State_1 K L M N O P Q))
     (= B (pair_137 S G))
     (= D (ExitRoom_0 R S T))
     (= C (Just_12 (State_1 K L M N O P Q))))
      )
      (reach_1 E U D)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C Map_3) (D Map_2) (E State_0) (F Int) (G Int) (H Reach_0) (I Int) (v_9 Bool_401) (v_10 Maybe_12) ) 
    (=>
      (and
        (reach_1 A I H)
        (isin_0 C E)
        (x_76257 D C G)
        (x_76251 v_9 D F)
        (and (= v_9 false_401)
     (= B (ExitRoom_0 F G H))
     (= A (Just_12 E))
     (= v_10 Nothing_12))
      )
      (reach_1 v_10 I B)
    )
  )
)
(assert
  (forall ( (A Reach_0) (B Int) (C Int) (D Reach_0) (E Int) (v_5 Maybe_12) (v_6 Maybe_12) ) 
    (=>
      (and
        (reach_1 v_5 E D)
        (and (= v_5 Nothing_12) (= A (ExitRoom_0 B C D)) (= v_6 Nothing_12))
      )
      (reach_1 v_6 E A)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Maybe_12) (C State_0) (D State_0) (E pair_130) (F pair_136) (G pair_132) (H Reach_0) (I Maybe_12) (J Bool_401) (K Map_0) (L Map_2) (M Map_2) (N Map_3) (O Map_2) (P Map_2) (Q Bool_401) (R Bool_401) (S Map_2) (T Map_4) (U Map_3) (V Map_2) (W Map_0) (X Map_1) (Y Map_0) (Z Map_2) (A1 Map_4) (B1 Map_0) (C1 Map_3) (D1 Map_2) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Reach_0) (J1 Int) (v_36 Bool_401) ) 
    (=>
      (and
        (or_414 J Q R)
        (le_401 H1 J1)
        (x_76231 K B1 G)
        (x_76257 L C1 H1)
        (add_427 M G1 L)
        (x_76236 N C1 F)
        (x_76257 O C1 H1)
        (empty_9 P)
        (x_76220 Q O P)
        (x_76251 R D1 H1)
        (x_76223 S D1 E)
        (cards_0 T D)
        (x_76261 U T G1)
        (x_76257 V U E1)
        (x_76251 v_36 V F1)
        (roomk_0 W C)
        (x_76254 E1 W H1)
        (reach_1 B J1 I1)
        (x_76264 A X H1)
        (and (= v_36 true_401)
     (= I (Just_12 (State_1 X Y Z A1 K N S)))
     (= C (State_1 X Y Z A1 B1 C1 D1))
     (= D (State_1 X Y Z A1 B1 C1 D1))
     (= F (pair_137 H1 M))
     (= H (EnterRoom_0 G1 H1 (pair_133 E1 F1) I1))
     (= A (Just_11 G1))
     (= G (pair_133 H1 F1))
     (= E (pair_131 H1 J))
     (= B (Just_12 (State_1 X Y Z A1 B1 C1 D1))))
      )
      (reach_1 I J1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B State_0) (C State_0) (D pair_130) (E pair_136) (F pair_132) (G Maybe_11) (H Reach_0) (I Maybe_12) (J Map_0) (K Map_2) (L Map_2) (M Map_3) (N Bool_401) (O Map_2) (P Map_4) (Q Map_3) (R Map_2) (S Map_0) (T Maybe_11) (U Map_1) (V Map_0) (W Map_2) (X Map_4) (Y Map_0) (Z Map_3) (A1 Map_2) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Reach_0) (G1 Int) (v_33 Bool_401) ) 
    (=>
      (and
        (x_76264 T U E1)
        (diseqMaybe_11 T G)
        (le_401 E1 G1)
        (x_76231 J Y F)
        (x_76257 K Z E1)
        (add_427 L D1 K)
        (x_76236 M Z E)
        (x_76251 N A1 E1)
        (x_76223 O A1 D)
        (cards_0 P C)
        (x_76261 Q P D1)
        (x_76257 R Q B1)
        (x_76251 v_33 R C1)
        (roomk_0 S B)
        (x_76254 B1 S E1)
        (reach_1 A G1 F1)
        (and (= v_33 true_401)
     (= I (Just_12 (State_1 U V W X J M O)))
     (= B (State_1 U V W X Y Z A1))
     (= C (State_1 U V W X Y Z A1))
     (= E (pair_137 E1 L))
     (= H (EnterRoom_0 D1 E1 (pair_133 B1 C1) F1))
     (= G (Just_11 D1))
     (= F (pair_133 E1 C1))
     (= D (pair_131 E1 N))
     (= A (Just_12 (State_1 U V W X Y Z A1))))
      )
      (reach_1 I G1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C Map_0) (D Int) (E State_0) (F Int) (G Int) (H Int) (I Int) (J Reach_0) (K Int) (v_11 Maybe_12) ) 
    (=>
      (and
        (reach_1 A K J)
        (gt_404 I K)
        (roomk_0 C E)
        (x_76254 D C I)
        (and (= B (EnterRoom_0 H I (pair_133 F G) J))
     (= A (Just_12 E))
     (= v_11 Nothing_12))
      )
      (reach_1 v_11 K B)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Maybe_12) (C State_0) (D State_0) (E pair_130) (F pair_136) (G pair_132) (H Reach_0) (I Maybe_12) (J Bool_401) (K Map_0) (L Map_2) (M Map_2) (N Map_3) (O Map_2) (P Map_2) (Q Bool_401) (R Bool_401) (S Map_2) (T Map_4) (U Map_3) (V Map_2) (W Map_0) (X Map_1) (Y Map_0) (Z Map_2) (A1 Map_4) (B1 Map_0) (C1 Map_3) (D1 Map_2) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Reach_0) (J1 Int) (v_36 Bool_401) ) 
    (=>
      (and
        (or_414 J Q R)
        (le_401 H1 J1)
        (x_76231 K B1 G)
        (x_76257 L C1 H1)
        (add_427 M G1 L)
        (x_76236 N C1 F)
        (x_76257 O C1 H1)
        (empty_9 P)
        (x_76220 Q O P)
        (x_76251 R D1 H1)
        (x_76223 S D1 E)
        (cards_0 T D)
        (x_76261 U T G1)
        (x_76257 V U E1)
        (x_76251 v_36 V F1)
        (roomk_0 W C)
        (x_76254 E1 W H1)
        (reach_1 B J1 I1)
        (x_76264 A X H1)
        (and (= v_36 true_401)
     (= I (Just_12 (State_1 X Y Z A1 K N S)))
     (= C (State_1 X Y Z A1 B1 C1 D1))
     (= D (State_1 X Y Z A1 B1 C1 D1))
     (= F (pair_137 H1 M))
     (= H (EnterRoom_0 G1 H1 (pair_133 E1 F1) I1))
     (= A (Just_11 G1))
     (= G (pair_133 H1 F1))
     (= E (pair_131 H1 J))
     (= B (Just_12 (State_1 X Y Z A1 B1 C1 D1))))
      )
      (reach_1 I J1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B State_0) (C State_0) (D pair_130) (E pair_136) (F pair_132) (G Maybe_11) (H Reach_0) (I Maybe_12) (J Map_0) (K Map_2) (L Map_2) (M Map_3) (N Bool_401) (O Map_2) (P Map_4) (Q Map_3) (R Map_2) (S Map_0) (T Maybe_11) (U Map_1) (V Map_0) (W Map_2) (X Map_4) (Y Map_0) (Z Map_3) (A1 Map_2) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Reach_0) (G1 Int) (v_33 Bool_401) ) 
    (=>
      (and
        (x_76264 T U E1)
        (diseqMaybe_11 T G)
        (le_401 E1 G1)
        (x_76231 J Y F)
        (x_76257 K Z E1)
        (add_427 L D1 K)
        (x_76236 M Z E)
        (x_76251 N A1 E1)
        (x_76223 O A1 D)
        (cards_0 P C)
        (x_76261 Q P D1)
        (x_76257 R Q B1)
        (x_76251 v_33 R C1)
        (roomk_0 S B)
        (x_76254 B1 S E1)
        (reach_1 A G1 F1)
        (and (= v_33 true_401)
     (= I (Just_12 (State_1 U V W X J M O)))
     (= B (State_1 U V W X Y Z A1))
     (= C (State_1 U V W X Y Z A1))
     (= E (pair_137 E1 L))
     (= H (EnterRoom_0 D1 E1 (pair_133 B1 C1) F1))
     (= G (Just_11 D1))
     (= F (pair_133 E1 C1))
     (= D (pair_131 E1 N))
     (= A (Just_12 (State_1 U V W X Y Z A1))))
      )
      (reach_1 I G1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C Map_4) (D Map_3) (E Map_2) (F Map_0) (G Int) (H State_0) (I Int) (J Int) (K Int) (L Int) (M Reach_0) (N Int) (v_14 Bool_401) (v_15 Maybe_12) ) 
    (=>
      (and
        (reach_1 A N M)
        (cards_0 C H)
        (x_76261 D C K)
        (x_76257 E D I)
        (x_76251 v_14 E J)
        (roomk_0 F H)
        (x_76254 G F L)
        (and (= v_14 false_401)
     (= B (EnterRoom_0 K L (pair_133 I J) M))
     (= A (Just_12 H))
     (= v_15 Nothing_12))
      )
      (reach_1 v_15 N B)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Maybe_12) (C State_0) (D State_0) (E pair_130) (F pair_136) (G pair_132) (H Reach_0) (I Maybe_12) (J Bool_401) (K Map_0) (L Map_2) (M Map_2) (N Map_3) (O Map_2) (P Map_2) (Q Bool_401) (R Bool_401) (S Map_2) (T Map_4) (U Map_3) (V Map_2) (W Map_0) (X Map_1) (Y Map_0) (Z Map_2) (A1 Map_4) (B1 Map_0) (C1 Map_3) (D1 Map_2) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Reach_0) (J1 Int) (v_36 Bool_401) ) 
    (=>
      (and
        (or_414 J Q R)
        (le_401 H1 J1)
        (x_76231 K B1 G)
        (x_76257 L C1 H1)
        (add_427 M G1 L)
        (x_76236 N C1 F)
        (x_76257 O C1 H1)
        (empty_9 P)
        (x_76220 Q O P)
        (x_76251 R D1 H1)
        (x_76223 S D1 E)
        (cards_0 T D)
        (x_76261 U T G1)
        (x_76257 V U E1)
        (x_76251 v_36 V F1)
        (roomk_0 W C)
        (x_76254 E1 W H1)
        (reach_1 B J1 I1)
        (x_76264 A X H1)
        (and (= v_36 true_401)
     (= I (Just_12 (State_1 X Y Z A1 K N S)))
     (= C (State_1 X Y Z A1 B1 C1 D1))
     (= D (State_1 X Y Z A1 B1 C1 D1))
     (= F (pair_137 H1 M))
     (= H (EnterRoom_0 G1 H1 (pair_133 E1 F1) I1))
     (= A (Just_11 G1))
     (= G (pair_133 H1 F1))
     (= E (pair_131 H1 J))
     (= B (Just_12 (State_1 X Y Z A1 B1 C1 D1))))
      )
      (reach_1 I J1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B State_0) (C State_0) (D pair_130) (E pair_136) (F pair_132) (G Maybe_11) (H Reach_0) (I Maybe_12) (J Map_0) (K Map_2) (L Map_2) (M Map_3) (N Bool_401) (O Map_2) (P Map_4) (Q Map_3) (R Map_2) (S Map_0) (T Maybe_11) (U Map_1) (V Map_0) (W Map_2) (X Map_4) (Y Map_0) (Z Map_3) (A1 Map_2) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Reach_0) (G1 Int) (v_33 Bool_401) ) 
    (=>
      (and
        (x_76264 T U E1)
        (diseqMaybe_11 T G)
        (le_401 E1 G1)
        (x_76231 J Y F)
        (x_76257 K Z E1)
        (add_427 L D1 K)
        (x_76236 M Z E)
        (x_76251 N A1 E1)
        (x_76223 O A1 D)
        (cards_0 P C)
        (x_76261 Q P D1)
        (x_76257 R Q B1)
        (x_76251 v_33 R C1)
        (roomk_0 S B)
        (x_76254 B1 S E1)
        (reach_1 A G1 F1)
        (and (= v_33 true_401)
     (= I (Just_12 (State_1 U V W X J M O)))
     (= B (State_1 U V W X Y Z A1))
     (= C (State_1 U V W X Y Z A1))
     (= E (pair_137 E1 L))
     (= H (EnterRoom_0 D1 E1 (pair_133 B1 C1) F1))
     (= G (Just_11 D1))
     (= F (pair_133 E1 C1))
     (= D (pair_131 E1 N))
     (= A (Just_12 (State_1 U V W X Y Z A1))))
      )
      (reach_1 I G1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C Map_0) (D Int) (E State_0) (F Int) (G Int) (H Int) (I Int) (J Reach_0) (K Int) (v_11 Maybe_12) ) 
    (=>
      (and
        (reach_1 A K J)
        (roomk_0 C E)
        (x_76254 D C I)
        (and (= B (EnterRoom_0 H I (pair_133 F G) J))
     (not (= D F))
     (not (= D G))
     (= A (Just_12 E))
     (= v_11 Nothing_12))
      )
      (reach_1 v_11 K B)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Maybe_12) (C State_0) (D State_0) (E pair_130) (F pair_136) (G pair_132) (H Reach_0) (I Maybe_12) (J Bool_401) (K Map_0) (L Map_2) (M Map_2) (N Map_3) (O Map_2) (P Map_2) (Q Bool_401) (R Bool_401) (S Map_2) (T Map_4) (U Map_3) (V Map_2) (W Map_0) (X Map_1) (Y Map_0) (Z Map_2) (A1 Map_4) (B1 Map_0) (C1 Map_3) (D1 Map_2) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Reach_0) (J1 Int) (v_36 Bool_401) ) 
    (=>
      (and
        (or_414 J Q R)
        (le_401 H1 J1)
        (x_76231 K B1 G)
        (x_76257 L C1 H1)
        (add_427 M G1 L)
        (x_76236 N C1 F)
        (x_76257 O C1 H1)
        (empty_9 P)
        (x_76220 Q O P)
        (x_76251 R D1 H1)
        (x_76223 S D1 E)
        (cards_0 T D)
        (x_76261 U T G1)
        (x_76257 V U E1)
        (x_76251 v_36 V F1)
        (roomk_0 W C)
        (x_76254 F1 W H1)
        (reach_1 B J1 I1)
        (x_76264 A X H1)
        (and (= v_36 true_401)
     (= I (Just_12 (State_1 X Y Z A1 K N S)))
     (= C (State_1 X Y Z A1 B1 C1 D1))
     (= D (State_1 X Y Z A1 B1 C1 D1))
     (= F (pair_137 H1 M))
     (= H (EnterRoom_0 G1 H1 (pair_133 E1 F1) I1))
     (= A (Just_11 G1))
     (= G (pair_133 H1 F1))
     (= E (pair_131 H1 J))
     (= B (Just_12 (State_1 X Y Z A1 B1 C1 D1))))
      )
      (reach_1 I J1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B State_0) (C State_0) (D pair_130) (E pair_136) (F pair_132) (G Maybe_11) (H Reach_0) (I Maybe_12) (J Map_0) (K Map_2) (L Map_2) (M Map_3) (N Bool_401) (O Map_2) (P Map_4) (Q Map_3) (R Map_2) (S Map_0) (T Maybe_11) (U Map_1) (V Map_0) (W Map_2) (X Map_4) (Y Map_0) (Z Map_3) (A1 Map_2) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Reach_0) (G1 Int) (v_33 Bool_401) ) 
    (=>
      (and
        (x_76264 T U E1)
        (diseqMaybe_11 T G)
        (le_401 E1 G1)
        (x_76231 J Y F)
        (x_76257 K Z E1)
        (add_427 L D1 K)
        (x_76236 M Z E)
        (x_76251 N A1 E1)
        (x_76223 O A1 D)
        (cards_0 P C)
        (x_76261 Q P D1)
        (x_76257 R Q B1)
        (x_76251 v_33 R C1)
        (roomk_0 S B)
        (x_76254 C1 S E1)
        (reach_1 A G1 F1)
        (and (= v_33 true_401)
     (= I (Just_12 (State_1 U V W X J M O)))
     (= B (State_1 U V W X Y Z A1))
     (= C (State_1 U V W X Y Z A1))
     (= E (pair_137 E1 L))
     (= H (EnterRoom_0 D1 E1 (pair_133 B1 C1) F1))
     (= G (Just_11 D1))
     (= F (pair_133 E1 C1))
     (= D (pair_131 E1 N))
     (= A (Just_12 (State_1 U V W X Y Z A1))))
      )
      (reach_1 I G1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C Map_0) (D Int) (E State_0) (F Int) (G Int) (H Int) (I Int) (J Reach_0) (K Int) (v_11 Maybe_12) ) 
    (=>
      (and
        (reach_1 A K J)
        (gt_404 I K)
        (roomk_0 C E)
        (x_76254 D C I)
        (and (= B (EnterRoom_0 H I (pair_133 F G) J))
     (= A (Just_12 E))
     (= v_11 Nothing_12))
      )
      (reach_1 v_11 K B)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Maybe_12) (C State_0) (D State_0) (E pair_130) (F pair_136) (G pair_132) (H Reach_0) (I Maybe_12) (J Bool_401) (K Map_0) (L Map_2) (M Map_2) (N Map_3) (O Map_2) (P Map_2) (Q Bool_401) (R Bool_401) (S Map_2) (T Map_4) (U Map_3) (V Map_2) (W Map_0) (X Map_1) (Y Map_0) (Z Map_2) (A1 Map_4) (B1 Map_0) (C1 Map_3) (D1 Map_2) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Reach_0) (J1 Int) (v_36 Bool_401) ) 
    (=>
      (and
        (or_414 J Q R)
        (le_401 H1 J1)
        (x_76231 K B1 G)
        (x_76257 L C1 H1)
        (add_427 M G1 L)
        (x_76236 N C1 F)
        (x_76257 O C1 H1)
        (empty_9 P)
        (x_76220 Q O P)
        (x_76251 R D1 H1)
        (x_76223 S D1 E)
        (cards_0 T D)
        (x_76261 U T G1)
        (x_76257 V U E1)
        (x_76251 v_36 V F1)
        (roomk_0 W C)
        (x_76254 F1 W H1)
        (reach_1 B J1 I1)
        (x_76264 A X H1)
        (and (= v_36 true_401)
     (= I (Just_12 (State_1 X Y Z A1 K N S)))
     (= C (State_1 X Y Z A1 B1 C1 D1))
     (= D (State_1 X Y Z A1 B1 C1 D1))
     (= F (pair_137 H1 M))
     (= H (EnterRoom_0 G1 H1 (pair_133 E1 F1) I1))
     (= A (Just_11 G1))
     (= G (pair_133 H1 F1))
     (= E (pair_131 H1 J))
     (= B (Just_12 (State_1 X Y Z A1 B1 C1 D1))))
      )
      (reach_1 I J1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B State_0) (C State_0) (D pair_130) (E pair_136) (F pair_132) (G Maybe_11) (H Reach_0) (I Maybe_12) (J Map_0) (K Map_2) (L Map_2) (M Map_3) (N Bool_401) (O Map_2) (P Map_4) (Q Map_3) (R Map_2) (S Map_0) (T Maybe_11) (U Map_1) (V Map_0) (W Map_2) (X Map_4) (Y Map_0) (Z Map_3) (A1 Map_2) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Reach_0) (G1 Int) (v_33 Bool_401) ) 
    (=>
      (and
        (x_76264 T U E1)
        (diseqMaybe_11 T G)
        (le_401 E1 G1)
        (x_76231 J Y F)
        (x_76257 K Z E1)
        (add_427 L D1 K)
        (x_76236 M Z E)
        (x_76251 N A1 E1)
        (x_76223 O A1 D)
        (cards_0 P C)
        (x_76261 Q P D1)
        (x_76257 R Q B1)
        (x_76251 v_33 R C1)
        (roomk_0 S B)
        (x_76254 C1 S E1)
        (reach_1 A G1 F1)
        (and (= v_33 true_401)
     (= I (Just_12 (State_1 U V W X J M O)))
     (= B (State_1 U V W X Y Z A1))
     (= C (State_1 U V W X Y Z A1))
     (= E (pair_137 E1 L))
     (= H (EnterRoom_0 D1 E1 (pair_133 B1 C1) F1))
     (= G (Just_11 D1))
     (= F (pair_133 E1 C1))
     (= D (pair_131 E1 N))
     (= A (Just_12 (State_1 U V W X Y Z A1))))
      )
      (reach_1 I G1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C Map_4) (D Map_3) (E Map_2) (F Map_0) (G Int) (H State_0) (I Int) (J Int) (K Int) (L Int) (M Reach_0) (N Int) (v_14 Bool_401) (v_15 Maybe_12) ) 
    (=>
      (and
        (reach_1 A N M)
        (cards_0 C H)
        (x_76261 D C K)
        (x_76257 E D I)
        (x_76251 v_14 E J)
        (roomk_0 F H)
        (x_76254 G F L)
        (and (= v_14 false_401)
     (= B (EnterRoom_0 K L (pair_133 I J) M))
     (= A (Just_12 H))
     (= v_15 Nothing_12))
      )
      (reach_1 v_15 N B)
    )
  )
)
(assert
  (forall ( (A Maybe_11) (B Maybe_12) (C State_0) (D State_0) (E pair_130) (F pair_136) (G pair_132) (H Reach_0) (I Maybe_12) (J Bool_401) (K Map_0) (L Map_2) (M Map_2) (N Map_3) (O Map_2) (P Map_2) (Q Bool_401) (R Bool_401) (S Map_2) (T Map_4) (U Map_3) (V Map_2) (W Map_0) (X Map_1) (Y Map_0) (Z Map_2) (A1 Map_4) (B1 Map_0) (C1 Map_3) (D1 Map_2) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Reach_0) (J1 Int) (v_36 Bool_401) ) 
    (=>
      (and
        (or_414 J Q R)
        (le_401 H1 J1)
        (x_76231 K B1 G)
        (x_76257 L C1 H1)
        (add_427 M G1 L)
        (x_76236 N C1 F)
        (x_76257 O C1 H1)
        (empty_9 P)
        (x_76220 Q O P)
        (x_76251 R D1 H1)
        (x_76223 S D1 E)
        (cards_0 T D)
        (x_76261 U T G1)
        (x_76257 V U E1)
        (x_76251 v_36 V F1)
        (roomk_0 W C)
        (x_76254 F1 W H1)
        (reach_1 B J1 I1)
        (x_76264 A X H1)
        (and (= v_36 true_401)
     (= I (Just_12 (State_1 X Y Z A1 K N S)))
     (= C (State_1 X Y Z A1 B1 C1 D1))
     (= D (State_1 X Y Z A1 B1 C1 D1))
     (= F (pair_137 H1 M))
     (= H (EnterRoom_0 G1 H1 (pair_133 E1 F1) I1))
     (= A (Just_11 G1))
     (= G (pair_133 H1 F1))
     (= E (pair_131 H1 J))
     (= B (Just_12 (State_1 X Y Z A1 B1 C1 D1))))
      )
      (reach_1 I J1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B State_0) (C State_0) (D pair_130) (E pair_136) (F pair_132) (G Maybe_11) (H Reach_0) (I Maybe_12) (J Map_0) (K Map_2) (L Map_2) (M Map_3) (N Bool_401) (O Map_2) (P Map_4) (Q Map_3) (R Map_2) (S Map_0) (T Maybe_11) (U Map_1) (V Map_0) (W Map_2) (X Map_4) (Y Map_0) (Z Map_3) (A1 Map_2) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Reach_0) (G1 Int) (v_33 Bool_401) ) 
    (=>
      (and
        (x_76264 T U E1)
        (diseqMaybe_11 T G)
        (le_401 E1 G1)
        (x_76231 J Y F)
        (x_76257 K Z E1)
        (add_427 L D1 K)
        (x_76236 M Z E)
        (x_76251 N A1 E1)
        (x_76223 O A1 D)
        (cards_0 P C)
        (x_76261 Q P D1)
        (x_76257 R Q B1)
        (x_76251 v_33 R C1)
        (roomk_0 S B)
        (x_76254 C1 S E1)
        (reach_1 A G1 F1)
        (and (= v_33 true_401)
     (= I (Just_12 (State_1 U V W X J M O)))
     (= B (State_1 U V W X Y Z A1))
     (= C (State_1 U V W X Y Z A1))
     (= E (pair_137 E1 L))
     (= H (EnterRoom_0 D1 E1 (pair_133 B1 C1) F1))
     (= G (Just_11 D1))
     (= F (pair_133 E1 C1))
     (= D (pair_131 E1 N))
     (= A (Just_12 (State_1 U V W X Y Z A1))))
      )
      (reach_1 I G1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C Map_0) (D Int) (E State_0) (F Int) (G Int) (H Int) (I Int) (J Reach_0) (K Int) (v_11 Maybe_12) ) 
    (=>
      (and
        (reach_1 A K J)
        (roomk_0 C E)
        (x_76254 D C I)
        (and (= B (EnterRoom_0 H I (pair_133 F G) J))
     (not (= D F))
     (not (= D G))
     (= A (Just_12 E))
     (= v_11 Nothing_12))
      )
      (reach_1 v_11 K B)
    )
  )
)
(assert
  (forall ( (A Reach_0) (B Int) (C Int) (D Int) (E Int) (F Reach_0) (G Int) (v_7 Maybe_12) (v_8 Maybe_12) ) 
    (=>
      (and
        (reach_1 v_7 G F)
        (and (= v_7 Nothing_12)
     (= A (EnterRoom_0 D E (pair_133 B C) F))
     (= v_8 Nothing_12))
      )
      (reach_1 v_8 G A)
    )
  )
)
(assert
  (forall ( (A State_0) (B pair_130) (C pair_138) (D pair_132) (E pair_132) (F pair_134) (G Maybe_12) (H Reach_0) (I Maybe_12) (J Map_1) (K Map_0) (L Map_2) (M Int) (N Map_3) (O Map_3) (P Map_4) (Q Map_2) (R Map_2) (S Map_1) (T Map_0) (U Map_2) (V Map_4) (W Map_0) (X Map_3) (Y Map_2) (Z Int) (A1 Int) (B1 Int) (C1 Reach_0) (D1 Int) (v_30 Bool_401) ) 
    (=>
      (and
        (reach_1 G D1 C1)
        (le_401 A1 D1)
        (x_76246 J S F)
        (x_76231 K T E)
        (add_427 L B1 U)
        (x_76254 M T A1)
        (x_76261 N V Z)
        (add_428 O D N)
        (x_76241 P V C)
        (x_76223 Q Y B)
        (issued_0 R A)
        (x_76251 v_30 R B1)
        (and (= v_30 false_401)
     (= G (Just_12 (State_1 S T U V W X Y)))
     (= I (Just_12 (State_1 J K L P W X Q)))
     (= A (State_1 S T U V W X Y))
     (= H (CheckIn_0 Z A1 B1 C1))
     (= F (pair_135 A1 (Just_11 Z)))
     (= D (pair_133 M B1))
     (= E (pair_133 A1 B1))
     (= B (pair_131 A1 false_401))
     (= C (pair_139 Z O)))
      )
      (reach_1 I D1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C State_0) (D Int) (E Int) (F Int) (G Reach_0) (H Int) (v_8 Maybe_12) ) 
    (=>
      (and
        (reach_1 A H G)
        (gt_404 E H)
        (and (= B (CheckIn_0 D E F G)) (= A (Just_12 C)) (= v_8 Nothing_12))
      )
      (reach_1 v_8 H B)
    )
  )
)
(assert
  (forall ( (A State_0) (B pair_130) (C pair_138) (D pair_132) (E pair_132) (F pair_134) (G Maybe_12) (H Reach_0) (I Maybe_12) (J Map_1) (K Map_0) (L Map_2) (M Int) (N Map_3) (O Map_3) (P Map_4) (Q Map_2) (R Map_2) (S Map_1) (T Map_0) (U Map_2) (V Map_4) (W Map_0) (X Map_3) (Y Map_2) (Z Int) (A1 Int) (B1 Int) (C1 Reach_0) (D1 Int) (v_30 Bool_401) ) 
    (=>
      (and
        (reach_1 G D1 C1)
        (le_401 A1 D1)
        (x_76246 J S F)
        (x_76231 K T E)
        (add_427 L B1 U)
        (x_76254 M T A1)
        (x_76261 N V Z)
        (add_428 O D N)
        (x_76241 P V C)
        (x_76223 Q Y B)
        (issued_0 R A)
        (x_76251 v_30 R B1)
        (and (= v_30 false_401)
     (= G (Just_12 (State_1 S T U V W X Y)))
     (= I (Just_12 (State_1 J K L P W X Q)))
     (= A (State_1 S T U V W X Y))
     (= H (CheckIn_0 Z A1 B1 C1))
     (= F (pair_135 A1 (Just_11 Z)))
     (= D (pair_133 M B1))
     (= E (pair_133 A1 B1))
     (= B (pair_131 A1 false_401))
     (= C (pair_139 Z O)))
      )
      (reach_1 I D1 H)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Reach_0) (C Map_2) (D State_0) (E Int) (F Int) (G Int) (H Reach_0) (I Int) (v_9 Bool_401) (v_10 Maybe_12) ) 
    (=>
      (and
        (reach_1 A I H)
        (issued_0 C D)
        (x_76251 v_9 C G)
        (and (= v_9 true_401)
     (= B (CheckIn_0 E F G H))
     (= A (Just_12 D))
     (= v_10 Nothing_12))
      )
      (reach_1 v_10 I B)
    )
  )
)
(assert
  (forall ( (A Reach_0) (B Int) (C Int) (D Int) (E Reach_0) (F Int) (v_6 Maybe_12) (v_7 Maybe_12) ) 
    (=>
      (and
        (reach_1 v_6 F E)
        (and (= v_6 Nothing_12) (= A (CheckIn_0 B C D E)) (= v_7 Nothing_12))
      )
      (reach_1 v_7 F A)
    )
  )
)
(assert
  (forall ( (A Reach_0) (B Maybe_12) (C Map_2) (D Map_3) (E Map_2) (F Map_0) (G Int) (v_7 Bool_401) ) 
    (=>
      (and
        (inj_0 v_7 G F)
        (range_0 C F)
        (empty_8 D)
        (empty_9 E)
        (let ((a!1 (= B
              (Just_12 (State_1 (Rest_1 Nothing_11)
                                F
                                C
                                (Rest_4 D)
                                F
                                (Rest_3 E)
                                (Rest_2 true_401))))))
  (and (= v_7 true_401) (= A (Init_4 F)) a!1))
      )
      (reach_1 B G A)
    )
  )
)
(assert
  (forall ( (A Reach_0) (B Map_0) (C Int) (v_3 Bool_401) (v_4 Maybe_12) ) 
    (=>
      (and
        (inj_0 v_3 C B)
        (and (= v_3 false_401) (= A (Init_4 B)) (= v_4 Nothing_12))
      )
      (reach_1 v_4 C A)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Maybe_11) (C Map_3) (D Map_2) (E Map_2) (F Map_1) (G State_0) (H Int) (I Int) (J Int) (K Reach_0) (v_11 Bool_401) (v_12 Bool_401) (v_13 Bool_401) ) 
    (=>
      (and
        (x_76264 B F I)
        (le_401 I H)
        (isin_0 C G)
        (x_76257 D C I)
        (x_76251 v_11 D J)
        (safe_0 E G)
        (x_76251 v_12 E I)
        (reach_1 A H K)
        (owns_0 F G)
        (and (= v_11 true_401)
     (= v_12 true_401)
     (= B (Just_11 J))
     (= A (Just_12 G))
     (= v_13 true_401))
      )
      (psafe_0 v_13 H I J K)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Maybe_11) (C Map_3) (D Map_2) (E Map_2) (F Map_1) (G Maybe_11) (H State_0) (I Int) (J Int) (K Int) (L Reach_0) (v_12 Bool_401) (v_13 Bool_401) (v_14 Bool_401) ) 
    (=>
      (and
        (x_76264 G F J)
        (diseqMaybe_11 G B)
        (le_401 J I)
        (isin_0 C H)
        (x_76257 D C J)
        (x_76251 v_12 D K)
        (safe_0 E H)
        (x_76251 v_13 E J)
        (reach_1 A I L)
        (owns_0 F H)
        (and (= v_12 true_401)
     (= v_13 true_401)
     (= B (Just_11 K))
     (= A (Just_12 H))
     (= v_14 false_401))
      )
      (psafe_0 v_14 I J K L)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B State_0) (C Int) (D Int) (E Int) (F Reach_0) (v_6 Bool_401) ) 
    (=>
      (and
        (reach_1 A C F)
        (gt_404 D C)
        (and (= A (Just_12 B)) (= v_6 true_401))
      )
      (psafe_0 v_6 C D E F)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Maybe_11) (C Map_3) (D Map_2) (E Map_2) (F Map_1) (G State_0) (H Int) (I Int) (J Int) (K Reach_0) (v_11 Bool_401) (v_12 Bool_401) (v_13 Bool_401) ) 
    (=>
      (and
        (x_76264 B F I)
        (le_401 I H)
        (isin_0 C G)
        (x_76257 D C I)
        (x_76251 v_11 D J)
        (safe_0 E G)
        (x_76251 v_12 E I)
        (reach_1 A H K)
        (owns_0 F G)
        (and (= v_11 true_401)
     (= v_12 true_401)
     (= B (Just_11 J))
     (= A (Just_12 G))
     (= v_13 true_401))
      )
      (psafe_0 v_13 H I J K)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Maybe_11) (C Map_3) (D Map_2) (E Map_2) (F Map_1) (G Maybe_11) (H State_0) (I Int) (J Int) (K Int) (L Reach_0) (v_12 Bool_401) (v_13 Bool_401) (v_14 Bool_401) ) 
    (=>
      (and
        (x_76264 G F J)
        (diseqMaybe_11 G B)
        (le_401 J I)
        (isin_0 C H)
        (x_76257 D C J)
        (x_76251 v_12 D K)
        (safe_0 E H)
        (x_76251 v_13 E J)
        (reach_1 A I L)
        (owns_0 F H)
        (and (= v_12 true_401)
     (= v_13 true_401)
     (= B (Just_11 K))
     (= A (Just_12 H))
     (= v_14 false_401))
      )
      (psafe_0 v_14 I J K L)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Map_2) (C State_0) (D Int) (E Int) (F Int) (G Reach_0) (v_7 Bool_401) (v_8 Bool_401) ) 
    (=>
      (and
        (reach_1 A D G)
        (safe_0 B C)
        (x_76251 v_7 B E)
        (and (= v_7 false_401) (= A (Just_12 C)) (= v_8 true_401))
      )
      (psafe_0 v_8 D E F G)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Maybe_11) (C Map_3) (D Map_2) (E Map_2) (F Map_1) (G State_0) (H Int) (I Int) (J Int) (K Reach_0) (v_11 Bool_401) (v_12 Bool_401) (v_13 Bool_401) ) 
    (=>
      (and
        (x_76264 B F I)
        (le_401 I H)
        (isin_0 C G)
        (x_76257 D C I)
        (x_76251 v_11 D J)
        (safe_0 E G)
        (x_76251 v_12 E I)
        (reach_1 A H K)
        (owns_0 F G)
        (and (= v_11 true_401)
     (= v_12 true_401)
     (= B (Just_11 J))
     (= A (Just_12 G))
     (= v_13 true_401))
      )
      (psafe_0 v_13 H I J K)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Maybe_11) (C Map_3) (D Map_2) (E Map_2) (F Map_1) (G Maybe_11) (H State_0) (I Int) (J Int) (K Int) (L Reach_0) (v_12 Bool_401) (v_13 Bool_401) (v_14 Bool_401) ) 
    (=>
      (and
        (x_76264 G F J)
        (diseqMaybe_11 G B)
        (le_401 J I)
        (isin_0 C H)
        (x_76257 D C J)
        (x_76251 v_12 D K)
        (safe_0 E H)
        (x_76251 v_13 E J)
        (reach_1 A I L)
        (owns_0 F H)
        (and (= v_12 true_401)
     (= v_13 true_401)
     (= B (Just_11 K))
     (= A (Just_12 H))
     (= v_14 false_401))
      )
      (psafe_0 v_14 I J K L)
    )
  )
)
(assert
  (forall ( (A Maybe_12) (B Map_3) (C Map_2) (D State_0) (E Int) (F Int) (G Int) (H Reach_0) (v_8 Bool_401) (v_9 Bool_401) ) 
    (=>
      (and
        (reach_1 A E H)
        (isin_0 B D)
        (x_76257 C B F)
        (x_76251 v_8 C G)
        (and (= v_8 false_401) (= A (Just_12 D)) (= v_9 true_401))
      )
      (psafe_0 v_9 E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Reach_0) (v_4 Maybe_12) (v_5 Bool_401) ) 
    (=>
      (and
        (reach_1 v_4 A D)
        (and (= v_4 Nothing_12) (= v_5 true_401))
      )
      (psafe_0 v_5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Reach_0) (v_3 Bool_401) (v_4 Int) ) 
    (=>
      (and
        (psafe_0 v_3 v_4 A B C)
        (and (= v_3 false_401) (= 0 v_4))
      )
      false
    )
  )
)

(check-sat)
(exit)
